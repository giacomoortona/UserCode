/*****************************************************************************
 * Package: CharmDalitzFit                                                   *
 *    File: $Id: RooBkg.rdl,v 1.7 2008/06/10 17:08:25 pellicci Exp $
 * Authors:                                                                  *
 *   MP, Pelliccioni Mario, Univ Torino, pellicci@slac.stanford.edu          *
 *                                                                           *
 * Redistribution and use in source and binary forms,                        *
 * with or without modification, are permitted according to the terms        *
 * listed in LICENSE (http://roofit.sourceforge.net/license.txt)             *
 *****************************************************************************/
#ifndef ROO_BKG
#define ROO_BKG

#include "RooFitCore/RooAbsPdf.hh"
#include "RooFitCore/RooAbsReal.hh"
#include "RooFitCore/RooRealProxy.hh"
#include "RooFitCore/RooListProxy.hh"
#include "EvtGenBase/EvtDalitzPlot.hh"
#include "CharmDalitzFit/RooDPbkg.hh"

class RooRealVar;

class RooBkg : public RooAbsPdf {
public:

  RooBkg(const char *name, const char *title,
               RooAbsReal& m12, RooAbsReal& m13, EvtDalitzPlot *dalitzSpace);
  RooBkg(const RooBkg& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooBkg(*this,newname); }
  inline virtual ~RooBkg() { };

  inline RooDPbkg* getManager() const {return _dpManager;}

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName) const ;
  Double_t analyticalIntegral(Int_t code,const char* rangeName) const ;

  // Generator
  Int_t getGenerator(const RooArgSet& directVars, RooArgSet &generateVars, Bool_t staticInitOK=kTRUE) const;
  void initGenerator(Int_t code) ;
  void generateEvent(Int_t code) ;

protected:

  RooRealProxy _m12 ;
  RooRealProxy _m13 ;
  
  RooDPbkg* _dpManager;
  RooListProxy* _prxyList;
  RooArgList* obsList;

  EvtDalitzPlot *_dalitzSpace;
  Double_t _pdfmax;
  Double_t sampleEvent();
  Int_t _totGen;

  inline Double_t getm23() const
  {return pow(_dalitzSpace->bigM(),2) + pow(_dalitzSpace->mA(),2) + pow(_dalitzSpace->mB(),2) + pow(_dalitzSpace->mC(),2) - _m12 - _m13;}

  Double_t evaluate() const ;  

private:

  ClassDef(RooBkg,0); 
};

#endif














