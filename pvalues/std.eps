%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Acr2191833.tmp.pdf
%%Creator: Adobe Acrobat 8.0
%%For: lockman
%%CreationDate: 7/14/08, 8:23:47 PM
%%BoundingBox: -1 0 237 201
%%HiResBoundingBox: 0 0 236.0563 200.9082
%%CropBox: 0 0 236.0563 200.9082
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 4018 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:08:23">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xap:ModifyDate="2008-07-14T20:20:39-07:00"
   xap:CreateDate="2008-07-14T20:20:39-07:00"
   xap:MetadataDate="2008-07-14T20:20:38-07:00"
   xap:CreatorTool="dvips(k) 5.92b Copyright 2002 Radical Eye Software"
   dc:format="application/pdf"
   xapMM:DocumentID="uuid:52286612-e2ce-490a-9b71-0ae282f0941b"
   xapMM:InstanceID="uuid:a4c5f0b5-dfc2-4a15-9fb0-51669fe6e788"
   pdf:Producer="Acrobat Distiller 6.0.1 for Macintosh">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">statrpp.dvi</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -200.908 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-05 0 mo
-1.52588e-05 200.908 li
236.056 200.908 li
236.056 0 li
cp
clp
[1 0 0 1 -206.748 0 ]ct
false sop
/0 
[/DeviceGray] /CSA add_res
0 gry
true set_gvm
%ADOBeginSubsetFont: NZPPMX+CMBXTI10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /NZPPMX+CMBXTI10 def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def/Weight (Bold) def/ItalicAngle -14.0401 def/BaseFontName (CMBXTI10) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 46 /period putdup 50 /two putdup 51 /three putdup 83 /S putdup 97 /a putdup 99 /c putdup 105 /i putdup 115 /s putdup 116 /t putdef/FontBBox {-29 -250 1274 754} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-17 -0 686 703 444 452 661 662] def/OtherBlues [-202 -194] def/BlueScale 0.0479599 def/StdHW [47] def/StdVW [107] def/StemSnapH [36 47] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings10 dict dup begin/period <1C60D8A8C9B08A9596433C46C80D8BFE32C8F895F8A29852DD475F74C48BD1A44A11A95C2FC3EC75451BC5575A33AEDD18> |-/two <1C60D8A8C9B08A950B85A1987A8064B629C2408850FA83F988FB5BA4B4E41A94F7AE1F89AFC11692067CC6973BA38C8907A83EE23E3171B1E8771F0A2B4B25A60848B1ADA9D9C63724366545ACB36DA27EE022C74446DB142BBBB10D247865DD45DDA6519844B684946AE5F58B7F58E86A941578808A449FF1F10634AEE107F744DAC7E9A7D8238F2A27EC66B5CDF0847881E129F5E4BEC3A2D5F49DE9E5981832B74111580D9EE3F980F872A42322A3B5A400A4F546EA67E52B618FD0C8114FEAFBCB1E341DBE58E6D7BE31C046E8684223DA1453A9D092D95C49E545F90EC2225BC1B9745D174C4F2F2F> |-/three <1C60D8A8C9B08A950B85A1987A8064ED806FB2F64D4DF83E2BDD5AC2E91A036C66E6B4B8241B0BB4E75F0D86253126F1BC3FFE320720139A986BB4470740FA4742B5B3E4D6806020CC068E6D2F34516FA22A07A51C4B33B2374F985B94F1CFAB3B2CBF96005524AC85FC39333E0B8F91F412B677E72C033A83EF4D9E789551EC9057ECDAFBA102E62521CC142240BC7AAC1E55B29B5A50CE7779285866F6929A9CD7A8B22B925C85053CD3207B5EE0E995FB62BF0D1850B97C515FCE316BA9A93995A713850E106635781C4867BEFED24961C7DBF5453CE445468A7430A8B651589943047B3EC2DB> |-/S <1C60D8A8C9B67F58CC7F8AA5CE6D3FB13DE8F1273ED9BC35B80B37D550C66F86BF7E9CDCB6C5879E324E802C210615C3456A4CDAACBFDCBE6FBBE93C12DF7121B97BFF6DC85882FDBB67463F5037EB2C3350A2D448B8907B043E7167442B153B9EDAF4483BA080BF2015C98C739A0B50A7058F617A3EFC5D5389FAFCD5A0D399015EC8164131415D1A19B20658867FDA1A6C54A770D6E5E83E460E2C225154DE2366AA8B253B5F01E55BD220BBD1A80A565407F9E89459F903C649CE21077B3A7D66277913BC6407A375CF535A8C8CFCE7D2849266EA8B43A83FECF2C19134E989EB60352EB21E7006D669609E9F> |-/a <1C60D8A8C9B08A950B85A1987A809D978BF5EFD942946F946A5BC31F378E5EE6E93128E4B972754E3239DF4561C30F85413C7D0A28C93F56AA2A2E8023509C490A571AC32ABF8576DD82CFB4493A73A0E5F1402A100DF506912377AC743949B99222943610C4D39759AD5D5B0C05D62934A37CD607012251B71FFE5436DC32CEEBFC3C0487CEA084C6D08F78CA257D1A79D7E308E36F5EE24279BF64E95A7045E8421813273579549BFE84BB581AFE> |-/c <1C60D8A8C9B08A95D331F4485275DCB47D1DF4D3D4CF9E7EB1EFF844CA72F2AC5D2E5400EC14DFF3881C51D8684284FF36E32A6E97859E31FAD7463B3155CC5F00553D6D175454C5925FA08C5036D191B7DB523783539231AA83704D1837A10465C1FC1353F5AB8C5290B244A890F05863936C87C5FA716E410C96F9D746711C34F5811E73B543A19930> |-/i <1C60D8A8C9B08A9596433C46C80D833A374BE02F1FBAB443190C38B6C53B9F4016257794EB9DF62121025386D36B9691B43913E988D5393C4A67BC712BECCF260280BD20CF5FE8176772B4065269D5E79313CA1A4F8B315445BAFC47AC355FDDACB149AC582508279F6A61ED7AA4B5B9EC512A2C55407A608DE032439D8C6D612DBADEEB6CC96081CE4F62660E0B4279217913493ACAB74ECC53D5E824ACD70B62BD14D35E46F0A09931> |-/s <1C60D8A8C9B08A95A262E01F87B614BF2E2065F18EDDB096D12214DD65A70D63D3E1B07659F6D3784AA81124F882C40E1E6C146AEC6C0D44538A7F3D158C3FB221D24756A1CD9324A1006E6421D317364A3B9ADD11C817048D367CEB13CB751EBA70AD22599B9EDB599B8607CC946D4D283A50E5E2ED982003BD6C64DD2E1DBAF0C2A6E87B95322DDD0B8FFB930704BC4A34E7851A2DBFEA86384E3D8BA7334BC75B1C77301E8C5D293A4F76124E31A0> |-/t <1C60D8A8C9B73A414A9AFD79E9911D00407612AA1D2052DD5CFF09BF6A612C2DBFD4D36E6BB8D164491A43E46E3206BD08F92EFA9B8C317E86BA51D065FC54131D49B4127244262976D34A47695CCEDBE1EA663ED60E7BF30FA039724DCA879BCB46514856E0DB2518F0D0DE4CF3531839A17A293A32702E51890AFC1BB2747C9050C2C15A720DDA12A154FF3906> |-/.notdef <1C60D8A8C9B08A95BDFDBB2E772ACD> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/EAKIZU+CMBXTI10 /NZPPMX+CMBXTI10 findfont ct_VMDictPut/EAKIZU+CMBXTI10*1 [46{/.notdef}rp /period 3{/.notdef}rp /two /three 31{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c 5{/.notdef}rp /i 9{/.notdef}rp /s /t 139{/.notdef}rp]EAKIZU+CMBXTI10 nfEAKIZU+CMBXTI10*1 [14.3462 0 0 -14.3462 0 0 ]msf438.72 -255.651 mo(32.Statistics)[8.50735 8.50732 9.00659 9.35364 5.55191 8.50735 5.55188 5.13599 7.01529 5.55191 5.13599 7.66083 0 ]xshtrue set_gvm
%ADOBeginSubsetFont: ITAQMX+CMSSBX10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ITAQMX+CMSSBX10 def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def/Weight (Bold) def/ItalicAngle 0 def/BaseFontName (CMSSBX10) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 49 /one putdup 57 /nine putdef/FontBBox {-71 -250 1099 780} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 -0 694 716 458 475] def/OtherBlues [-206 -194] def/BlueScale 0.0437899 def/StdHW [94] def/StdVW [136] def/StemSnapV [136 147] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/one <1C60D8A8C9B795A0CD6BCD21B40205F6F7BA65C738D282953681BF51859DC859EB177150154F0E13E86B5C92A79F1E2BB1E30C10719657DE6A0E40F3D074BE07DBDA4DC7BFCD0099861FED004AA46F2B2C2C3870E8553A9E2F3F4C154B0F4494E5> |-/nine <1C60D8A8C9B795A03363744A3413E2CC531B30B7F5E5E13FC73F8ED90D5FBEEF66E3E06DFCC3730BE6B01E55D896F437C1B5345AB69A946BBA19F75B0DC3EF325F4243048861C18CD1D3B3FC2DD6F23F74681AF8A00D4D416010FCD083D331CC4D305A85D72E766A2B6BAC11830CCFCC38BF375737CE5F6A412653376E5561040A4512A8CA41986345B7FE2EE3F85FAD61BB89695C3EEE568DB0A8D3DC> |-/.notdef <1C60D8A8C9B08A95930012410A3521> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/EAKIZV+CMSSBX10 /ITAQMX+CMSSBX10 findfont ct_VMDictPut/EAKIZV+CMSSBX10*1 [49{/.notdef}rp /one 7{/.notdef}rp /nine 198{/.notdef}rp]EAKIZV+CMSSBX10 nfEAKIZV+CMSSBX10*1 [13.0909 0 0 -13.0909 0 0 ]msf542.88 -255.651 mo(19)[7.20001 0 ]xshtrue set_gvm
%ADOBeginSubsetFont: YGTBAA+CMBX10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /YGTBAA+CMBX10 def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def/Weight (Bold) def/ItalicAngle 0 def/BaseFontName (CMBX10) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 46 /period putdup 50 /two putdup 51 /three putdup 52 /four putdef/FontBBox {-301 -250 1164 946} defendsystemdict begindup /Private14 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 686 697 444 453 655 676] def/OtherBlues [-201 -194] def/BlueScale 0.0437899 def/StdHW [47] def/StdVW [114] def/StemSnapH [40 47] def/StemSnapV [114 142] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings5 dict dup begin/period <1C60D8A8C9B08A9560D4C2F3A74D92838E83B7DC14B89478B7994960CFDC6D2144A34A20CA36052335682902BE7739DD> |-/two <1C60D8A8C9B7FCB6AFCECEBCE3C644D61BF80000A7C384C11F8205E5F4EA22B1F87E7A5F44BD17A6CF109FE3AE9F709DB8358F13296E50DD9E329B12B62BE9C6512386E96E53EC60D92469DE71E7B48CB1868A87C7273B968AB345F370A417DA2B11E60D38F3166D980E52D10C3DB1EB074C4E9FB27FFFD375F4B1AFB8A82D569603EAE115AA23BDBA> |-/three <1C60D8A8C9B7FCB6A4EC6CFF5B7E8A646CFA99E79027FA1E27F1D442DE8AB71A39759F5525E707D743CC0FEAB4033857D7F0B4C7A6F8FBFB5A935099B429C99C13203178EEA9B1073B247ECB796B06FE996B3D05FBD6A7E0F21BE1EADC781E6E7F5E6ABC5A7404FA09CF5B65949D8D09BFC8DE32902F3BAC8BD07286D74960DD2AB72945FAF8256AADFA01A34A0D1646636F1A5CD2616092FFCCA26EBF6D5C28875F2B3DBAFD204CC9431C3EAEB60A528610CD3C52A0484A51A3990E2EE8A4670066476DEAB7B4E111D8989AC76A29> |-/four <1C60D8A8C9B7FCB6AF8364F0605C451CEEA3B4E1B916196AB7B08943E0CF71744315D573147B01821B98A6E1D4D4D879C9FFD38F4E4551A3DC30910686735A4AD4544FACE2F5F9D09C6BD2006C051140924F82F9CA156012C3506CF49284CD7F6DF316A24D77CCB549835798AD61D12EA0AFA551E0C8E19C> |-/.notdef <1C60D8A8C9B08A95899606B6B060A7> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/EAKIZW+CMBX10 /YGTBAA+CMBX10 findfont ct_VMDictPut/EAKIZW+CMBX10*1 [46{/.notdef}rp /period 3{/.notdef}rp /two /three /four 203{/.notdef}rp]EAKIZW+CMBX10 nfEAKIZW+CMBX10*1 [11.9552 0 0 -11.9552 0 0 ]msf89.28 -228.771 mo(32.3.2.4.)[6.85747 6.85747 3.79697 6.85746 3.79698 6.85747 3.79697 6.85747 0 ]xshtrue set_gvm
%ADOBeginSubsetFont: JLAQMX+CMTI10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /JLAQMX+CMTI10 def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def/Weight (Medium) def/ItalicAngle -14.0401 def/BaseFontName (CMTI10) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /G putdup 33 /a putdup 34 /u putdup 35 /s putdup 36 /i putdup 37 /n putdup 38 /d putdup 39 /t putdup 40 /r putdup 41 /b putdup 42 /e putdup 43 /m putdup 44 /colon putdef/FontBBox {-163 -250 1146 969} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 -0 683 705 431 442 665 667] def/OtherBlues [-205 -194] def/BlueScale 0.0437899 def/StdHW [31] def/StdVW [68] def/StemSnapH [22 31] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings14 dict dup begin/G <1C60D8A8C9B08A9460B0063D3FDFD6A42DD879E0049AAABBF3E835C89D47EC37310FE9DD2133965AB58294B1882CEA2454BB74D104BF90D118C016278EBF9D3DBBC8535741C177742C4D9F29EA66CBE57D7EB3A47F0ED83E75E4C69CEA9DF7B6186CE9EF1A4C02BC7C9D448E345E579BFE2A635CE6481EDDC6A06F902AF2FDAFAFEDAD71AE565BFF8C8B6CFA83746B55A8CEDDEB286BE422DD86447B40E41481CAF3D1F3F78E98F7121B0649F76A8E2D38B2F86833421724AF7E572553EA889D04046BC7C995CC8790F7F1556A3F6513BCB7B7BA8A43E22212829F4B9CA7E2AB4274DB8A9B1F> |-/a <1C60D8A8C9B08A95DBED6976208F65E8258DFF51CB960ADD7427F4748AA740F9CAEB56E3159AEA80E78D302ACD2BADDF5E540B40F5F1E93B535D835621FA8D6D0E9D33D63AB3D47C7F8DCFDFB0E30BC5260E365B4AC3F9A6B026D14E21496D1AA9088EEB9815297925C51FBCAC3FED2E86C32FC7D729A70E9535373A3719D3B7F0D8A4392ABAAD859FF7C19BC30350B2BFECD70E0FEA8708BB5DB8FB2C613B9EE9A5E9073271DF87E07919A16833> |-/u <1C60D8A8C9B08A95CDA386E4D298CDB942C4830EF89808650557481C84465886AB65B6A681486EC0F771868FBEE0544777680658849C63C092B9F054AC4D2611BDC48A5913EA97ABF9503F51339AD1566A3FFD3DEFB63345F384AD6A624A9178596F414136A2A836EF84126155742073CB6838C1882963B82D44F4091E60F6EFF5B9C11893B9971EED653E036434F9E1133B35E7F8635BCAB4AE1206EB302A55A10F37B8743376A07E7C0E166A54178092F44170EC14945E7DD042F6777E51B45D74AE7C4258C92FAAAA92510A> |-/s <1C60D8A8C9B08A9583ED9D86CFC8469FA56925BBEB544F7FB95136B5FDE7A1347171DC94936D86EE86E69104E52A38B30CF56558CF2C6B57321EF17D2EE065836B87D6C37C665A5E54E3328244FA0FDF2CE646E4873BFE896A99A8CBC76B2AA41D5C27C77A12EFE163A08718F6ABD9F361581AE91C28FCA19CE6C0B3EFAE532D4C31078F4A319B3C9D663A97A8A3C9B9B8B90002FE4B5FFF> |-/i <1C60D8A8C9B08A956B318F2665F1639A6CC8E9144365D6ED25E824095C5B13D90392BEDCE6D2FA9E3E6FCD2C5A45961D26FB79D0E0A290D54B1A2BF5906FAA4615FBBABF6FBC4206B742086A49055F771F83ABEF780167C51668D3F75E5C46260BF270F1770F673BE8D273434FC047AD70DDF6792FBE2B96509E0A175C7FB889C751E9FF612B0843F74796B71FE802167C00C7152949542B614AFFA4070FF10912D018DCCC018185AE00D64C22E9471B118CE186B1A5FD80119CE5B71BDC61B8586283FCA0251345DEBAE2AB27> |-/n <1C60D8A8C9B08A95C7B490C1B7DC3F2C7D9FA776E209D1F00857C3244C85FB3ED5672886F130E9E7A8681B1CA1119E1C4B35A303BE773E9D71ACA2F11AC1ABD9E652544C2F05A5E66862C3B1EEC04418503777464DC1178824FA9C598241AB46E8756CAD51C494B1AEA453CE229E6E7DABFB5169F3CA1067AD88B5618C5092694B1AFE2EDEB6AA699A416512356F8472A10C8412B6B84ECCE1F5BC5F65CFE8BA0189550AEE4FA41A32A645D893401D0AD65B8F7D2B833312CDCC05099B10138F7EA4BA022EC645A6C9F66095A3C3A8B40683F498BC0F> |-/d <1C60D8A8C9B08A95DBED6976208F65E8258DFF51CB9887A7CBE1C5EFFDE9EA00DDFAA588E7FACA4B7803C6093344F29EDD1EF259438E90885B97C5FFE2EAB4C35BD2FC50328B7D8519BDB626A32E1AD1D289B7CEC993BDC3B28FB974CA2DC4CCC84C788613BE032BCA738351EBC4A35A96F48EEFB7806345F187D7131079CBA81F60E27C5A3563693BB167CD0C466BFF762302A55102935F584BEDF8F68AEC754310C96AB32C89517F28C2C22821062831392FF43AD1640982C65DAE1BECDE1459D902D0988E9CD9226788830295F1ADE70B96BD143EC8CE66C8> |-/t <1C60D8A8C9B08A959D8AA3D8E221FFA1ECA8C975E3D8D93F8D9510FA2C5F966B0A726E3844F9227A8353ED28E469BF4A7FAC73ECCD3C728E71634DF00B4360CD819A984E370280D424E6009B2F0F5DFE05F7F7542428D960FD4944E72C1E3FEF5004DE1F666E160FE7495BB24D1C98F33A110AB2907D4D7E14F819EE0BF31C4F7DD1247F3F2BEDADD16CF3E5662EC223> |-/r <1C60D8A8C9B08A95B8A717D99E4C5DC5CDE4202465348D79A747B6B9B32C5051EDD22DBB8CC59AA4DD81F77924A794EA6F9A520DB998E77D31A71DBD98CD0EA7D1ACD3205596E8F14F5BB0521FD034B1AA81C16676AABB0E4B64AAAAE3445C2F636A816AFC8F0410E29DA4C3B29AD24438DB9898609D16B7D07BF86F5030F8AB3D7C3A8BDF004EE9B968B6723A3CCE2828C8D822042BD2F96997A9> |-/b <1C60D8A8C9B74F361570F6157DF4C6BA1832633A20BDAD8E745C3F65A9161A996E8C37CF5D8FCF54987D72D6D0F4034D4E3B8097E998A9E3504D576F88CD9BACE2729D0A421614F6E6C017458B9BADE750B8EA47BF7D6420014A0BCA30F421D272FA7A0946FE9E1C74CBF9DD154EC8454F8F6FB538DFFBC1EDA0004B601ECB6E1DA855879739BECBA256C1881D0EDB0F9D3AD0A4CE8EC9BB0FA0E6816D6C5B537CEB42404BD146C418> |-/e <1C60D8A8C9B74F361570F61A35EA78464894B1DA8CAD69B19C3F676A41A6475967ED30A297FEB3CD3D7317CB56BD67ED8BE136EDA10CB5745498DECD970DECEF1ACA52F9039E01C9F5B386033674FAFA84FBC05E576740F2A615DA4003C8F6D0D15EE471656895AD1D665316B1B828EEA1C31E22F55730B1C2314980EB> |-/m <1C60D8A8C9B08A9471465E3388398E05458256DA1227062E25138E1CDE1C81E88FEC57EE3CFAAE4FB7CE27FCD010FD241EA91DC181948FEE7DBBFE53997D689ECEBCD7E547FC27B89A7FA11F00D8A9AFB94630E3F4A7E98EB2C26FD59F84036FD362E89A581A4F71C63B2F218F9DB7118FA1EE21B09D3AF4CEEA805E4965BFB25BA3A78ED124EDBE5E36429717A87F9C4354CE6CA354566C9890D41CEF6706CFE46D0E7A02A59C55F68E65E773D74308F06122303B15A294DE8316FE4C785757766E73B7741A1621444849E73A402A080DF74026BF6EF2EC1860108BF4358E9966F40307A9704F49B535A216C951D57DF95E26ED720085A856A93CF2E0B63CF6FFD2F7CDDBFCA231100E8540B67FF9E2B6B63515F1079FDAB0652AD97EEACD36> |-/colon <1C60D8A8C9B08A956B318F2665F168B1FCABE32FB91398F67DE017762FF61AF40CAA92761356112202827CB402D4765384570C57098CCA0BDCDB72EEAB8B74A5C068FFA69DB3080B1078F8D74446390D8A7F1D0A887C5F5875787F> |-/.notdef <1C60D8A8C9B08A9597B4632E36E65E> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/EAKIZX+CMTI10 /JLAQMX+CMTI10 findfont ct_VMDictPut/EAKIZX+CMTI10*1 [32{/.notdef}rp /G /a /u /s /i /n /d /t /r /b /e /m /colon 211{/.notdef}rp]EAKIZX+CMTI10 nfEAKIZX+CMTI10*1 [11.9552 0 0 -11.9552 0 0 ]msf150.84 -228.771 mo( !"##$!%&$#'\($\)"'*&+*!#"\(*+*%'#,)[9.27129 6.12706 6.36378 4.90756 4.90758 3.68826 6.12706 10.6771 6.12706 3.68826 4.90758 3.98706 5.063 3.68826 5.51741 6.36377 3.98708 4.91965 9.95869 9.72308 4.91965 6.11871 4.90753 6.3638 4.44373 5.51981 9.72186 5.51984 6.73669 3.98706 4.90759 0 ]xshtrue set_gvm
%ADOBeginSubsetFont: NCMBAA+CMR10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /NCMBAA+CMR10 def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def/Weight (Medium) def/ItalicAngle 0 def/BaseFontName (CMR10) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /A putdup 33 /n putdup 34 /i putdup 35 /m putdup 36 /p putdup 37 /o putdup 38 /r putdup 39 /t putdup 40 /a putdup 41 /e putdup 42 /x putdup 43 /l putdup 44 /f putdup 45 /c putdup 46 /s putdup 47 /u putdup 48 /g putdup 49 /fi putdup 50 /d putdup 51 /v putdup 52 /w putdup 53 /h putdup 54 /b putdup 55 /G putdup 56 /semicolon putdup 57 /ffi putdup 58 /y putdup 59 /period putdup 60 /I putdup 61 /comma putdup 62 /F putdup 63 /k putdup 64 /one putdup 65 /equal putdef/FontBBox {-251 -250 1009 969} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 -0 683 705 431 448 666 677] def/OtherBlues [-206 -194] def/BlueScale 0.0437899 def/StdHW [31] def/StdVW [69] def/StemSnapH [22 31] def/StemSnapV [69 89] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings35 dict dup begin/A <1C60D8A8C9B08A9501CDAE1251A61DF6E2312CA41635F6CE1D00B63E171C70F84D42F62A21A6DD37D84C279E3FAE908D39B730ACD671ED9E277ACFE833A11F48F076C9803DC08258033731BCBCE19DF3B81C1C298B382A15FAC94387A992AD9631716A7ED4F711137D6C851AE1C8DCBBFBCF7274E882226E58958CE6283A197E7FAE3A2D0F6C24FA411BECFB36A10FF2A923EA89ABEFAD5AB23D600F> |-/n <1C60D8A8C9B08A95C5897169EED9664BED359D179BD38846B55E34D4CAA6E85E9CF3F20D5FF6B35F1C9AAE2A542B7B24E087B6004A4C7219997095CC0DD07A15DB83B5FEAD13F209441FFD364AD3DBF6E16129F3599BACA005A523490ABC41E4DF320ACE384037EE1D352E3FAD8A9E2CECBD75A999F7B655F4FFBFAC6FFF84029A8DF710DBB0D7CD4C1D20367E79BC4E312103DCC482005590EA2F1652EA57C34D10CC78642AFD> |-/i <1C60D8A8C9B08A9570810981675968AD25F24D2B3EAE33A4AEDADBE9B65DA53E9F2E54B16133284CA9914BED3880C793207FBDC7926300AD07E6E54407B51EA082FB5EE3816A6A23A8296A947037E49B372BD5DFBDAE3E0626953F75EA84BE757683B949F1DE2291C5796E30589D0B63B15E0D5680411C> |-/m <1C60D8A8C9B08A940B724A74A01E174C613EBE4AE79E2AFFD113284480DB6FE09606C55F36699E627D1CC0541895DC471E8C2C5C4E2C95A8F4D0511C409CAAF681328E85B80F5E465253D2C6073C651F0604062EA2D77E8A500E1EE4F3077B7F7483D2CC9857B1ED96D898A5541DF9DE8AB23FB73C101B0C097D401324907E04FB8955FEAB5C502CF57E144F90A7ECF5381D38A3F171BB6DF98E09DF41946459233CB9F82A2654E1E7DAB925958FBF1007B46353DB553ADE2BBAAF8A26648EECD081A81546AA8F04D4AE967DDA0613FF55E900D130A60E615888E6EB7D429CB17E070CB4D63732AC4F9FD92362B29E21DF180EDBB7F0149C6A01> |-/p <1C60D8A8C9B08A95C5897169EED91609D9E4D5F91353A54E37DF5199818352315911AF5324EFF8F803A0D7623A2DDCB047188B5B8F28AB77A5ED34430D9957B9E0225FBFAE612AB3A16746E264A6930D63A3F157DEFA872D2CA520250AA3380B48623F26CA3F7D040CB163CC4C6240013209FBA4AD816878F179C8F27320EBC05CF6C42FFA533A0E8716E243D2941CFE755ACC6E312A0F393F2C290E0F1ACE85DBC680C6195A83A8DF92> |-/o <1C60D8A8C9B7A73DCEB07E09D16841D605E4F67059E6B258F546B80703E4CDAF20027B900118209D5372F965F2045D50C02A29110A048C891DEBA3210CDFC5CDE2309C0CDE0E4855E9F6D8954C4C68826A14AD2E4C6227A036D85D304D6A96FEAA92DEC3CD1B9F4AD57B5F1EBAB070FE911461A7D5B958F5> |-/r <1C60D8A8C9B08A9584DCB847BA986212E50A1268FF1FD1FC6504D9F4D673BD97E004E27192E1359AD741527FE014B82A8709E1D277CF1F73EB8831CADE611D9AD525BE07EEB6589229F52FE652CA10A278AC096BF0A2B010C8B215B1ACA0BBB8EF8E3C77EF77F60B5CDD1035D115BEF1087A4AEB28A5F886037DA56DEC62DBB1D4F1AE123A1AD0E8FD48681467> |-/t <1C60D8A8C9B08A958B2129D6E9766AD6B3247B9CBDFB0724765D43ED23A7B2BC7B24077C209594776C48799589E3DF7269407A6893D4C106057122D99E3F649ACAFBE1812EEAA6C4DCDDD716BEB7694626BFFCAE715C15EF0FD8CE9F6FE4E96B03> |-/a <1C60D8A8C9B7A73DCB03313BCF7BA903D75A87DEC6EB34306A2C875A7B9D6F03FA56EC184A666A965328412CD76CCEF3CAD69BC525A6A87F1F2D19F5D1B7FD73AE7371FEED4E7F3CC2802C465D966135A2EE9CF8A0BF2840255B111E803710168818EEA9C2DFE9C99A20ABC767161183EAE437218D2E1239DA58B1500E1F7F2D27496F0873D02EC47EEDEB84F4B0D78003FE0EDD73F083F9C52A46ED942D3466EB983C6AA2296E8F2602B3A2BC810F850571C10A31EC74CF8C0EACAB287DE5031078E0A963D32061> |-/e <1C60D8A8C9B08A95B1F07368C45D8D2AF4BC97E4CB216B20786BB8409E5CB08921F2042A459BE0DE80ADD86BD8D3FC85885973F3B8E71B750A7BBBCB2EC27654BABC4A421F19CAF38DA67236E15B4E8454D787305B09443F6B25074201957C1B86920E2C7CED0E614A34A438ED72C4B057D323DD16C0BE898DF1> |-/x <1C60D8A8C9B08A95D222871B45C8170346D4B3692E8D5307651DE3271DD6AF0FFCDE284DD9CDD3B987BD9A4951E635C7A5CDCF53A699D8D2BA39BF571FEDC61B4760FA01C102B3CF6C44B24A57107DFFEFB711E00B7E6B8A7F332F9AC2C53243312E3CD55C94054BCA0B5D37362E138F5DD97019783B5271FD96258D5354389532FB5D3FC50CB007DF880768FCF0AAEC6D6F5D8AB1559D6270DF0761EAD057A9F39E9A718AA16D8D8ECA90D61565C41A9B86CA057EC652FEE1927FFE969CA046D06A10E75C83320EEEAB290370B870EF0E26D64C8EE9F9FD2B5549> |-/l <1C60D8A8C9B08A9570810981675968AD25F317189905083B97CD6CD1B88005B79B666989E13C0F8D0889AD0162C7E87274D188EBBD1A911FDD0B6E360AA1C515725198B9106B157680FC> |-/f <1C60D8A8C9B08A956BA65798425CE9B0A78F07A04AF2F8524751F181F94CEF756ACD6AB92BD091D7482415CDE9144C26B1697F8DF70FCF1DEFD4FA16FBE39206B1378E548C93AC587B3EF0B1ED3ACC74CAAD2CEA03512A889B4BA237C2E579B0E01D3D82622F69FB50659184006104BE20E13DAFC7793B241C1FD1A3880C4AA41E91E3F86F715551> |-/c <1C60D8A8C9B08A95B1F07368C45D8D2AF4BC563DEDE799FE18B66F38FD9D86FB33EF8157737910C2A21CF1859082F165505E98A2D559D2B21F8D988656D08136253C2962AD8B7BF2A4CE3B3D77FFEE3AC8C805C2D68655124FEAC62FFFA4B2E84874A6B6FEF5E31C416CAF5B3B1B491C61B5BE3DD5423D78BF> |-/s <1C60D8A8C9B08A9586D4F7B21AA9B0967A13D9D7A42FE340F518B826828CB1C2BB6756CD4C9284475BF78FAB574767246E1F9CBC21AACF1F3C97D1790131F28F8DFADB3AAE0AA727045B30CDDB07BDF05EDA5C24C0AFE386D470551D7E8ED902488F32C5E29D2F3E7F01605EE454D8B7A57FD0F16F8D3A10D6235D828477DAAA15E6231D70C2BB9D9C0718FB249BC89490F9614317D9D2089D530687FFE9B32E2EABFBD5A30223E1691D4FE59FFF3C416D75396DC2C2F68135236C16492B80BA292D01981169C65CE545147B052951BDA4BD86> |-/u <1C60D8A8C9B08A95C5897169EED96D33CB6A8CCD6F539BADC574F30FA0192FAAA0351E8C93175F4B6BE4D2DCA8A13E4F01BEC5788441B5C71C1247369B6B73137454B1C207EA4F43D533FE87512BAD8DD4F3DBBECD9A7A1CE3F33A4D3F316952FDB339B4B6A937009D6EC9821D8553981B7D8AABC3E750369071> |-/g <1C60D8A8C9B7A73DB58EA28807584EB19BC6EA1448A12312E623B90358A16C40D52FF50AB2BCF83396829D3E501BD0EAB8595D9693E632ABAF05A4D1FBD5E9FB32E59BDDF670BD3805B1A8647E1D2641030D018FCD259301AC116F3DEE87AA68CECE526FB7B8BC0206EAEFB580DA05969530F8D40CD15579447988D4CF075C24F15E32C0A9AC369D08351B0D49CAFF731E593F6C55EE74B16DE9D9A4B1993D1CF0FF1D3A57A52A0C64F106D414FF112A5DA34DEE3AB850B6A4492C25D3F09EFC86EFE140D828B1F4BAE5664F14014926ED1A5AFBCC814A3428F143CF5FB288702BF23054721A3BAA8027EF0D34A7A361A40A12717277178C5820C35A113171DEF9DBB455B7A9D7BB98406120BD93C5B4D04664B09F3E37553C20D6> |-/fi <1C60D8A8C9B08A95C5897169EED9664BED359E1B6FA8046F967D286B5C315A2CE47E3043EA3526C6192449635F2DA5AE3EE73919B52D525C096ECB55C63DDB789A7F918074FC45E4ACDE6751656039844BA59107A293FBC6F9D2FA579952076F62E9DABA5CEDE9C9326D1250FF5FA67CCED67DFAA3C183BF1B9C26748E0DDFEEE8F8464B1DCA14FE4BD296DEF29C921827AB4EDDC974773DB09417C4F232E6AD283B19FF29059BF9379DF784AAAD95EC606450E2256F10C70E5A28F36508106B27B13371584DB56C0B1A191AE795A2B9CE6617EFD2A3> |-/d <1C60D8A8C9B08A95C5897169EED96D33CB6A9013DDE3D04C2845E595598C4E4627D0E1F97AFD1FA3154224DA0D119EDECEF82924766CE4492626DF7B3B07C4245B263AA58C37772C982C7955B9EED30A1A264318D030C3D295AD4CC9C21E7AC9D2948AC9CD001C0EF80B50DF932CF6EE69C321627BC51A66341B5399D1E78024F824DB5DEE83140E59FB88138D6F0F5D2F350BA93460F2F700A9AE6D35ABE4DB962D8E6D84D6D606A800DD98F8807C3555FEEB> |-/v <1C60D8A8C9B08A95D222871B45C81C126204E8A3F3EFC2EBF937B1E5F2B8737EDCCFF78DB8693FA0E7B559CFAC0A233112105FC1A8807ADD3013D4AE86C438318F1223CADD606642DF7E9A8EE9BE743E975DA759D856D52F7E927FE336063979ED38AB2E1EA4CB4F371A1EB04E6C5B864C9DB5271435AB2DE7D9DE15A6B1D9E3FD555F015DADE467> |-/w <1C60D8A8C9B08A9454CA4C75C5C9761F27DFD501BA4813FE991E533E1CD1E174DB2ECA59D495EC56B0C1FD43D089BD170DD220487C38F20C192FAA7E2E883AD5437BC552CE37BD6C6BBA40409BE02939A8B895FF98709899D61A578F68A822D6CFB7A000AD2B69212700685F8E729740E6656D3B8D43A0C52B18628B0EFF5F05D1944E33A86827C6670A3438CE653DA430AB3E54D22481FDFA780C4812C2F3255AA0E07A5FC796A8653D62150A6CD8B7FE4B68F43CAA66CB6512EB54E359E67F4D5FAA2BB87B8812835557ADA47955DD5F> |-/h <1C60D8A8C9B08A95C5897169EED9664BED359D179BDDBB0B44F78A354068F1882593A360E640ED3246F83F38F17203BDBBCE194B9E0A6BE002DEEC6E590D34E67EDA7804A1C1CA9840B3036AA2F9D110358C769BBBA6E4ABF35AA04B72BD94DD37985D5F60B66C4561BE8C71200493330FB300D08910FDC33541EB4ED02BC0E5DA36A3AFFA9C2A4E001E9049F0E519949606FF0894B2E73F51ED> |-/b <1C60D8A8C9B08A95C5897169EED96D271CC0A201580A85BBB6CFE03702C9389AEE25CE69D1BDDECD4E28232C32A3113C892241798575F645E97E1FEF4D17BABACA9B1400EB966B8CBA5BFC74A4181A1A52C4AC1E4D4BCB3BEFBF05CAB3424B8B71500585C2C89CD37B890F00AF434789553E13269B7993EDDE63F9B6DB1CCC49FF90A25496B9C07E5617BD7387C1694D4EBB8E59CF0CEF85691D4C91D3CD1D33AB05DBBDE11A3BE1086B97B8CBA534FBFB> |-/G <1C60D8A8C9B08A947C9D95A245F89039778B2173C1A591D9FE30270E0480C1E99B55DAE8B4C513847176229A7952AA796157257E7AC944F6B278AD8A2DA5AC46FF1C6D6F110CDFB4BB3914A9408F9C2AFCFA4434A091705F2099CF49830C283515B1505AE428BBF04FE983D31A3E7AD873D9507C8FC142F3EF9AFBA92745F95FD70E4BD6793422BAB5B4084FD440EDBAC94D7F7359EBCE65824B100DE1CA30069239B01791B073785F8D6AD778F75C7F30B8C1E9CA7CCDA3254888A48B0F67AFFAD2D140> |-/semicolon <1C60D8A8C9B08A9570810981675918D0BCF1CD202F5F8524F1CF461D4270459E44DB560BC854C3F48DFD92347C27A6AAF0E2B1A04AFE4F800D13876BE3AB39120D802A029BED93876E94453805EC57B6B4A8208C5EC7FFEACE4E963FB3213948F11D6C0E8EF4316E683CC36E3AA04CA9322B> |-/ffi <1C60D8A8C9B08A940B724A74A01E174C63143C3160AABDF6C621D6C47202D067C3CD565BD1B8D1C3CFD5D2CCD189B2B31B0624E249A3E0F886FCF1665842E1FB2863FEAB2340EC9FC94D9F1B313E1D18B3B165286946182BE4B906A3C2B4B39FB09FAC9D76622B9D047EF64A9BD064506E8D18F466E1D845B5367BB4D689280F9E6CD9D971F8F887F475D6CC5A807F6437822ECFF8EDAC1F211DBAE283CCBDE4133196B17C21BF328DE489204F7D5F54DF11BFF13A7D96021EA34E05E7AE78DD5D5E09EBE949C7C94E1A57D4BE786C466FF51BB8099BBCF3583A23DAD4EB2AC0C3CBB87D9F0A6C3F9E5AAF64B00F8AF83C68D0B55FF09EECAD7D27B941D92776655FC3B0563B39A8EE4CB19C8F0D75875DD58C1B0F99E76DAAB44BDE08F8865CD7D86E7E4EFFF8B5AE7AC0EBCC0138FF22B7099861F5D47421E4E449F9BA2D08DA0A571B> |-/y <1C60D8A8C9B08A95D222871B45C8674D920EF37C9F679699CE0B0FB82274530CA6994E4FADB5C701717EBB278510CEF9D9EF1CB9FAAD7A4852BC3264781DC6E288589EC6BAAB146DF34989FBC4BF92E31D5C616C1050CCC8D58166B328D1E315EF5F39AF721DC6173775DFB26E6B6D40709A2BB053DECCFFF00649FC51FF5F341744BBA1E71297E598A51054A43B9F951D7105485742D0A3BB595676EC691F5215F9D0DE2FC2C87BF5CCF8146FF6F88E> |-/period <1C60D8A8C9B08A9570810981675968F2C907C696DFE9BE69433F6139DF6C45B8165ACC43B6E0B309859F778ABCF0> |-/I <1C60D8A8C9B08A9591900960B3FA4612DFF926AB21A530E1912F33677612AC06B324D812E42049FF4946BE5E0FFA24FA0C62F2839FF2110EEC7EE0A4247646E6F699D4C8BECE1825B3A661611E4D55F40F2E64FACB836D4D0C9780F60650FBF10E0D42> |-/comma <1C60D8A8C9B08A9570810981675918D0BCF1CD202F5F15202B7A7698DF02C61BB3071F67A562DD96D0521F578EC9F57BF5A71BF023ACCD67B8727CFD38538E62ACB3D55D0B01252803DA68060E5342CFD41A7D> |-/F <1C60D8A8C9B08A95E211B68BD74B7CA2EA30EA4FC2444F1F126966AA77297BA7EB9B6F06068DCAA13C02B3588F5A46379A5072E7E2DBF343C097B55CA4D588C6753F362DD28478A1BC56804A66D1A6D1CB247FEE04B2647D343D14D14B66B993C73F534C4128A2626BB2404D5D4FD30D29B727A906D4DCB574AC37C31D5E5DAFB5704A4D0DA0711E1E> |-/k <1C60D8A8C9B08A95D222871B45C8170346D4B18ED19B2E2E03D20F864B5DC5BD82CE186E8865448F19B50359E04C51718F8BDF55D412398F4EF83C05419ADE886E1536E26F7FC0E53312F110D79646DAD9F1D10B32AFE3698557277E72D57B4C7DAD8FF58DCEB52B83B453E4BE2D48D6882B0AECFDF4A8BCF747376E22D981F8E1C7CD6E92891501D7EE1AA17A160448D2B40E0899A7693FEF353371FE218D3D2DA9622BE1E9110437FDF2C62C6B642301FAF5AD> |-/one <1C60D8A8C9B7A73DC579B9CE13A4EA8C203AFC890ABD6F58341B006CF1BDD8FED3A7238E01F751FEAC75885229C293891E5636AD630D9C884528B6FEF00728A740ED77D054B4743ECA5E3947520FEF6B23D548765D11> |-/equal <1C60D8A8C9B08A946182837629008D945C50B3BD77B79680F3B07BDA6301D2521ADF665EADEA779B8650AC6CDB556621631497A3BE00C67036F6EB0605A36A2C0EE306396247E4A79F8EFAE500D78B59605F041F11> |-/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/EAKIZY+CMR10 /NCMBAA+CMR10 findfont ct_VMDictPut/EAKIZY+CMR10*1 [32{/.notdef}rp /A /n /i /m /p /o /r /t /a /e /x /l /f /c /s /u /g /fi /d /v /w /h /b /G /semicolon /ffi /y /period /I /comma /F /k /one /equal 190{/.notdef}rp]EAKIZY+CMR10 nfEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf103.68 -210.891 mo( !"#$%&'\(!'\)*\(#$+\)%,-%!.'&/-'"!0\(-%!12\)!-\)"!'\)&3\(+".45\)!'5\)2\('\(-%!.".'.)[8.99988 10.9247 3.363 9.9562 6.9651 6.00031 4.65294 4.68176 6.00031 6.24539 9.00116 5.27466 6.36255 6.00031 9.92514 6.61362 3.36298 9.59406 6.00031 7.92511 5.27463 6.00032 6.61363 4.67682 4.68176 4.68402 6.61359 5.27466 4.68173 3.36301 6.61359 10.4405 10.3197 5.27466 6.00031 6.61362 6.61362 6.61359 5.27466 6.61359 5.27466 9.95514 3.36298 6.24536 4.68176 5.27466 4.65295 5.64282 6.00031 7.68243 3.36298 8.99506 8.63763 6.61359 5.27466 11.0454 4.68176 6.61359 9.71484 6.61359 6.00031 4.68176 10.3198 5.27466 6.00031 6.61359 4.67688 3.36298 4.67444 4.68176 0 ]xsh89.28 -196.491 mo(%,\(."!0+\)&\(!2%#3\(&"\(6+\))[6.0039 8.04585 10.4405 4.67445 3.34985 6.60524 6.00391 3.34984 9.59406 4.68404 6.00389 6.60526 6.60526 6.00031 14.5159 5.64285 6.00391 4.71271 3.34985 6.00391 6.60524 3.36299 0 ]xshtrue set_gvm
%ADOBeginSubsetFont: EJJQMX+CMMI10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /EJJQMX+CMMI10 def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def/Weight (Medium) def/ItalicAngle -14.0401 def/BaseFontName (CMMI10) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /x putdup 33 /sigma putdup 34 /alpha putdef/FontBBox {-32 -250 1048 750} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 -0 683 705 431 442 453 466] def/OtherBlues [-205 -194] def/BlueScale 0.0437899 def/StdHW [31] def/StdVW [72] def/StemSnapH [25 31] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/x <1C60D8A8C9B08A95C3B1459DC8650F9F96183FC46268F5BDA744B05C84F8C7E5FE6BFCA9D4C8BD3488080E8FC96F34EA177DCAE190D27F37102D2F45514AECF6E4A3B2E6F401810D0AF13E4BDFDB8118476E04C9DD93F8884F46C9ABEE13C8E7992449902F6BC3D518B2A70293976C8BCE67ED913D975C52E884BF7F46CE8DF8170D79262260A6CB5A6A088C0A964E0271DA63944ABA9C96D1AA58CB590F97DC9C8372606676C2CA18B1A9303EBF11B510FAB8A33E9B530D274E48DD09EE8829EC16181BBC16C4E81343ACB5386F22A9C0CA2C23959102E833> |-/sigma <1C60D8A8C9B08A95C3C78702C3789395BEEFB8DFA30AF5B4572EE8B216DFA27E43F3D749BDEB3096DC91889BCE089551B5064BB6F9D3506171F63BDAF3A00A41C839064515160EEDF9248A4898169A260A02FFB6EAE2AE9A07EA92B96E15FD0201DF5B95EAA0DFB1AC6EAEC3C40F4331066C3ABD1B56454AF5B7> |-/alpha <1C60D8A8C9B08A950410310524622FDC055E7B1779BB715AB8B7F3B20EF8CE7FD918D87AE6E82B3F60A4BB84684D90A850DC4AE2F657CD8E9CCB68372845A0BBBEA4569AA7262FD8ABB1368605693DD0FB29B248EFB9A5D08C920C46998146F851FC5D386FD77D0F17BF2271F2448DEAF72EB2E601D7C68D51FF675D2D5E4272B793DB317A859E4EF166816BB5C5C768CBEC2917C9F1D726D1D49A83E61B77BFC914E3538D5DE0AB9DFF17C4D177262F17> |-/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/EAKIZZ+CMMI10 /EJJQMX+CMMI10 findfont ct_VMDictPut/EAKIZZ+CMMI10*1 [32{/.notdef}rp /x /sigma /alpha 221{/.notdef}rp]EAKIZZ+CMMI10 nfEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf236.998 -196.491 mo( )shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf248.278 -196.491 mo('5\(',%++%4.\(7\(/.."\(!2".'&"6/'"%!8'5".".%,'\)!'5\)-\(.\))[4.67816 6.60524 6.0051 9.00116 3.60568 6.00034 3.35104 3.35101 5.64047 8.65915 9.11462 10.3197 9.36334 6.0051 6.60526 4.67444 4.67447 3.36298 6.0051 11.1649 6.60529 3.36298 4.67444 4.68176 4.7139 3.35104 6.60526 6.60526 4.68173 3.35104 6.0051 6.60526 7.92273 4.67816 6.60522 3.35104 9.11462 3.35104 9.11462 6.0051 3.60568 4.67816 5.27466 11.0454 4.6817 6.60529 9.71478 5.27466 6.00031 4.67444 0 ]xsh89.28 -182.091 mo(45\)!)[8.60535 6.62079 5.28181 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf121.799 -182.091 mo( )shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf133.92 -182.091 mo(&\)$&\).\)!'.\(!\).'"#\('%&,%&\($\(&\(#\)'\)&\(!2%!\)5\(.\(./9-"\)!'+:+\(&0\)2\('\()[4.69119 5.3129 6.60526 4.68402 5.3129 4.71509 5.3129 6.24539 4.65546 10.1942 5.98238 11.8847 5.3129 4.71509 4.65546 3.32831 9.96338 5.98239 4.65543 5.98239 9.8439 3.60565 5.98239 9.96344 11.2798 6.60522 5.98236 4.69122 5.98236 9.96338 5.3129 4.65546 5.3129 9.96344 5.98242 6.60522 11.8847 6.00031 6.60526 10.6748 6.60522 6.00034 9.95505 11.2797 4.71512 6.60526 9.96338 5.3129 3.32834 5.3129 6.24539 4.68173 3.32834 11.6432 3.32834 5.98239 4.69122 5.98233 10.4346 6.60522 5.98242 4.6554 0 ]xsh89.28 -167.811 mo(.\(#$+\);<,'5\)&\)".#%&\)'5\(!%!\)$\(&\(#\)'\)&6\)"!0\).'"#\('\)2='5\)#/+'"3\(&"\('\)7\(/.."\(!)[4.67445 6.00031 9.98011 6.60525 3.34506 5.27464 9.36212 4.31812 8.04585 4.68175 6.60526 5.27463 4.70795 9.59406 3.34506 9.11461 9.9801 5.99911 4.70793 9.59406 4.67218 6.60526 5.99911 10.9247 5.99911 6.60522 9.71481 6.60526 5.99911 4.70795 5.99911 9.98013 5.27463 4.68176 5.27463 9.00342 6.96512 5.27463 3.34506 6.60526 10.4405 5.27466 4.67444 4.68173 3.34509 9.9801 5.99915 4.67218 5.27463 6.60526 7.80316 4.68173 6.60526 9.59525 9.59634 6.60526 3.34506 4.67221 3.34506 5.64282 5.99915 4.70795 3.34506 5.99911 4.67218 9.47452 9.36334 6.00031 6.60522 4.67444 4.6745 3.36298 5.99915 0 ]xsh89.28 -153.411 mo("./.\)2;>%&'5\)/!"3\(&"\('\)-\(.\)4"'5?!%4!)[3.363 8.63401 6.61959 4.68282 5.28062 6.61959 9.48287 6.84195 6.00032 8.6436 4.68173 6.60526 9.23419 6.6196 6.6196 3.36298 5.64285 6.00032 4.65892 3.36299 6.00032 4.68173 9.23419 5.27464 6.00032 4.67444 9.35495 8.63763 3.36298 4.68176 10.5648 6.36258 6.61957 5.64047 8.60416 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf322.557 -153.411 mo(!)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf329.877 -153.411 mo(=)sh185.161 -115.251 mo(@)shtrue set_gvm
%ADOBeginSubsetFont: MUFAAA+CMSY10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /MUFAAA+CMSY10 def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def/Weight (Medium) def/ItalicAngle -14.0351 def/BaseFontName (CMSY10) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /minus putdef/FontBBox {-29 -960 1116 775} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 -0 683 705] def/OtherBlues [-124 -119] def/BlueScale 0.0437899 def/StdHW [40] def/StdVW [85] def/StemSnapH [40 55] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/minus <1C60D8A8C9B08A946182837629008DF7702985522C1BEB432204C2EF9CAB07AB654895DD8804EF7ED97DE3E2616CBB2FB21BE3D9> |-/.notdef <1C60D8A8C9C4A637> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/EAKJAA+CMSY10 /MUFAAA+CMSY10 findfont ct_VMDictPut/EAKJAA+CMSY10*1 [32{/.notdef}rp /minus 223{/.notdef}rp]EAKJAA+CMSY10 nfEAKJAA+CMSY10*1 [11.9552 0 0 -11.9552 0 0 ]msf193.801 -115.251 mo( )shEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf205.8 -115.251 mo(")shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf216.72 -115.251 mo(A)sh243 -123.291 mo(@)sh230.748 -118.479 mo
261.228 -118.479 li
261.228 -117.999 li
230.748 -117.999 li
cp
0 gry
gsave
clp
[1 0 0 -1 206.748 200.908 ]ct
[30.48 0 0 -0.48 24.0003 319.387 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
0 gry
true set_gvm
%ADOBeginSubsetFont: MUFAAA+CMSY10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginEAKJAA+CMSY10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/radical <1C60D8A8C9B08A940B724A74A01E626E9DE94D4FC8264EF8652249BAAB075CD8D535208358762E6FF4BDFDC0766E31957C33C3C31EB7C3E932AE33FF56CE5EDED1DD1DF012F7055079954E4708A1C7E67EB63D2AE86083F9C729333E6475CF0DD9C64CAD48E2F39790E4B70EE65430C4DE3212089745C0> |-systemdict /gcheck known {setglobal} if end {end} ifendEAKJAA+CMSY10 /Encoding getdup 33 /radical putpop%ADOEndSubsetFont
reset_gvm
/EAKJAA+CMSY10*1 [32{/.notdef}rp /minus /radical 222{/.notdef}rp]EAKJAA+CMSY10 nfEAKJAA+CMSY10*1 [11.9552 0 0 -11.9552 0 0 ]msf230.76 -115.611 mo(!)sh240.708 -116.079 mo
254.028 -116.079 li
254.028 -115.599 li
240.708 -115.599 li
cp
0 gry
gsave
clp
[1 0 0 -1 206.748 200.908 ]ct
[13.32 0 0 -0.48 33.9603 316.987 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
0 gry
true set_gvm
%ADOBeginSubsetFont: NCMBAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginEAKIZY+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7A73DC50B0411757B441481CCF7EF812EEB9B3F6A08293AA33E44598842821CBFE74832C3A2FC51890F3A66AFDE8EA8269173784AF985B08CD4044AADA37EBF8296E8DBBCEABE3042A3995F6A3A8DE32D90D624CEDF4C1BCFEECD943884DD6052923FAC92315AE2977DECA1B6F479ADBDA41B10FDF2F38D2B74CBF99D8D6FF4> |-systemdict /gcheck known {setglobal} if end {end} ifendEAKIZY+CMR10 /Encoding getdup 66 /two putpop%ADOEndSubsetFont
reset_gvm
/EAKIZY+CMR10*1 [32{/.notdef}rp /A /n /i /m /p /o /r /t /a /e /x /l /f /c /s /u /g /fi /d /v /w /h /b /G /semicolon /ffi /y /period /I /comma /F /k /one /equal /two 189{/.notdef}rp]EAKIZY+CMR10 nfEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf240.72 -105.771 mo(B)shtrue set_gvm
%ADOBeginSubsetFont: EJJQMX+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginEAKIZZ+CMMI10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/pi <1C60D8A8C9B08A95C28A721B5BAED6F6BFB5286C7B1E39555B2A01BA8098735E5B1D2B67B3188A491535871ED6A915CC0D47B56D1A026AEE984DD30DA2C15916BDCE1B02D567BFFA988F86687A10374D7152C29B2DF3A50EF12281467DD5ED92F6664C1C326CB30CA042E831FF07005B0FA102682FC7D4A5B24594A159A64B2467535966C3F4A699750E946DD329D93B0D5BE45A67A573F98FC9952286027455E95C7163EE3683A4FA> |-/e <1C60D8A8C9B08A95A91AD57C418F1B8A6528837DCD758E27113E8EFB3EC83781EDC214726C0EB7B435F59FC11DE03978587E288AEAC786B7295F6B3BE9246D4C7AA41C5437B16E6A31CDE1AA88BC9C697DE2E1422A6B60D2EC193740CA8208290F00B18144195EF5223F5DE6488C43E03A52FD4265A64DB76664A1BC48A47DDF599EB732> |-/d <1C60D8A8C9B08A95D7418482512402940A06B73B081E5831CAA175C688E60D2F91EFC6F64C11086892B8E7FEFF39C72D470E38E9B769217DF150C981B3B3C27909577E8D07A74154AC10F194A7D7E2C445EF8A41371E4A139FC5C912503A678191CB04FB4936EB841D0A422D01391CD946C5EDEB37C527E0C3A15C75BA205DC657D7D99C93A5DFD54D6EB01708A973321EAE4A396D11CC40FCD62DEA1080AD6933066C4543751A82F384644FAB1378AD8394BA39AADFA64FA2B37B78BEB3C4BA1FE6EECE6688BAAD9B> |-/delta <1C60D8A8C9B08A95B1F07368C45D7269781E781CCC13C0A133FD1D9148BDBCCA985454A9A4C1243EEEA9E5059E9C84EFE78736AC0C01C8AFC8B3EF453E41058731ACAC8E3708AA29CA2B619335778119E005699EE08BEA49AC1BE1D3281E71BC6C706329231DC803F144C14F5BE2957831AF8CC11D4A4DF44D0F04245457CCDC1865BEF34AB2A83193F2326C6CF9A1D48CDF39436CBCB41824895BC058> |-systemdict /gcheck known {setglobal} if end {end} ifendEAKIZZ+CMMI10 /Encoding getdup 35 /pi putdup 36 /e putdup 37 /d putdup 38 /delta putpop%ADOEndSubsetFont
reset_gvm
/EAKIZZ+CMMI10*1 [32{/.notdef}rp /x /sigma /alpha /pi /e /d /delta 217{/.notdef}rp]EAKIZZ+CMMI10 nfEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf246.72 -105.771 mo(#!)[7.32025 0 ]xshtrue set_gvm
%ADOBeginSubsetFont: NTEBAA+CMEX10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /NTEBAA+CMEX10 def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def/Weight (Medium) def/ItalicAngle 0 def/BaseFontName (CMEX10) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 90 /integraldisplay putdup 181 /parenleftbigg putdef/FontBBox {-24 -2960 1454 772} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-20 -0] def/OtherBlues [-1159 -1139] def/BlueScale 0.0479599 def/StdHW [47] def/StdVW [47] def/StemSnapH [40 47] def/StemSnapV [40 47] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/integraldisplay <1C60D8A8C9B08A95C5897169EED912D93D6A66FE1DF8557E4A3F7140262F46B2286DFCF3130A5A339C49FDD07958281D0A376152F544D1DF8715092414BBE8E87F531B64E6DDCA603FA5F86825BCF4035875A762D697809CC5275D8F7A53AB2234CAB7603E357E9D1D564FA0FDC687870A7E1ACC6A74EF5E6754D86CC5D640BE7810818C97D4C4B7808EFDB537DBBA1B26D65470325F78A0F0D2D74589AF1D069C1116A0ED052931D8D7037769B62B85EE2A959A299B48> |-/parenleftbigg <1C60D8A8C9B08A9451E2C198C46C84A2927FE84A31A7E1DEF9426BE1D8287279336A95FC5A71EC79970FBF9FE87049A5122A727BC6180DEDE49B3DE54B29597ED38C6EE2C5E41271FBAEF243070664FAD8E5D6BBC7B1F2F12FBF5421F03739862E9100B7774A256C3276E43B73C21DF6E625453C7FCF8C4591AC6F33449A0B63D642B7DFF08ED7B4ACB01CC13E1D98> |-/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/EAKJAB+CMEX10 /NTEBAA+CMEX10 findfont ct_VMDictPut/EAKJAB+CMEX10*1 [90{/.notdef}rp /integraldisplay 90{/.notdef}rp /parenleftbigg 74{/.notdef}rp]EAKJAB+CMEX10 nfEAKJAB+CMEX10*1 [11.9552 0 0 -11.9552 0 0 ]msf264.72 -131.572 mo(Z)shtrue set_gvm
%ADOBeginSubsetFont: KGFRMX+CMMI8 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /KGFRMX+CMMI8 def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def/Weight (Medium) def/ItalicAngle -14.0401 def/BaseFontName (CMMI8) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /mu putdup 33 /delta putdup 34 /x putdup 35 /slash putdup 36 /sigma putdef/FontBBox {-24 -250 1110 750} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-21 -0 683 704 431 441 452 463] def/OtherBlues [-204 -194] def/BlueScale 0.0437899 def/StdHW [32] def/StdVW [78] def/StemSnapH [28 32] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings6 dict dup begin/mu <1C60D8A8C9B08A95E5F4DCC1AF92A3B891E5EACB8EAE853F0CA6D2993BFB3542E01F43F1B20DEBCFA3439EF715BCDCC07695E7FD2A047E58B90E2062A3DF15E4140C8BDC07189342765FAB3C00299E86A77A987BC27C6211259096FD368CF9D16C1F0304C20F6545DCB9DF579F1F664EC0BA8B93851B6BCE3E937D4ED88A15833B1CBF15F56132D1F0A16EC023789698271267920A44A8E43B35FA59C4C673D446C0B64F325CC1FB577E40C920CFBBD74CD70291004443BA0F27DB74B5EB5FA0A212C121F33EF60881E05207BF8683A3FFEDF2C81A4FE7DE89> |-/delta <1C60D8A8C9B08A95AB30C3A75FD795283E549F35177F3560D5E48452685AD21E5B58173D13217402DB417FCBB3896BC6ED48CD70AE310A9B963588A5C2804C3A9C9170F040D9A48B39D543CAF20562044F4020CA1E508BEF3857C9297066E8BCE2B9451E26D48D886C7571BEDD84C36CE9A9A69CAA0ECC44485F91AC227C89EF4E366AE55F977DFAB6CCC8588B654D1CAC56021D8779E0F24987D974D2> |-/x <1C60D8A8C9B08A950BCF75B0DFC923668877393E33B57994502579323B13C794F1865BFA6EB36DF18F3EFB1744AB5451D5F061C56E77649A15265064298CB523F48767815634B4F255128C52C1BE8B1DE3B88B0B6E7F344A1F9E8A6CB81D53D9ED9323E8F0CF59BF25970B8A978D9339823221E907941D043AE81254ABA1E06B52B3C60FBB7BE181280D7212355D9683A31EAFEEF8E24E1A4127760F67E9EA87C0C582955F8802AFAEED11D6E90C0A1FC43823EEA390B0BEA2B2676B296355BF091ABCEFB04D19A22C00132FBC0A1DC974DCDF37A6322C5E77B657EBCA0BFE6FF0F735A95D698F26> |-/slash <1C60D8A8C9B08A95D352586DE3156FEFAED02E8A09FBAB692AFAD0A1DF6C1C762238D47755E6F9132493DA240CA5008575CC38F64B376B1B75A5575B5CC09C4315FC6CF8BEBED8FE50347FDD> |-/sigma <1C60D8A8C9B08A95F129505C9E61FB169BDF6C1AA53C5C27D79E9C6F0160CD762593708FE5C044223C54E982518C93696B0F47B701A5C9FAE86721907036E71B18B55B95F898DC85B526A9E4BF04DA2DBF2906FBE9770B8E0292673A5E822324E7CF845EAFAA84AD49103E8EAE4C3EC06D905FD454> |-/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/EAKJAC+CMMI8 /KGFRMX+CMMI8 findfont ct_VMDictPut/EAKJAC+CMMI8*1 [32{/.notdef}rp /mu /delta /x /slash /sigma 219{/.notdef}rp]EAKJAC+CMMI8 nfEAKJAC+CMMI8*1 [9.5641 0 0 -9.5641 0 0 ]msf276.6 -127.731 mo( )shtrue set_gvm
%ADOBeginSubsetFont: ZCXPMX+CMR8 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ZCXPMX+CMR8 def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def/Weight (Medium) def/ItalicAngle 0 def/BaseFontName (CMR8) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 41 /parenright putdup 43 /plus putdup 50 /two putdef/FontBBox {-36 -250 1070 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-21 -0 683 704 431 446 665 675] def/OtherBlues [-205 -194] def/BlueScale 0.0437899 def/StdHW [33] def/StdVW [76] def/StemSnapH [28 33] def/StemSnapV [76 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings5 dict dup begin/parenleft <1C60D8A8C9B08A950C44F05CDCAE3556D5BFFD62B009B916EA3BCE379FA899445528B346627042B4B978F02CC58419190BE3F5154222C5097C1320AD20CE4B3B6E1BA9C2A9B45E682516AEED997C7277905D0E0C9C35C91EF42E22B2A19E47421F996C4A84757FDCD9> |-/parenright <1C60D8A8C9B08A950C44F05CDCAE3556D5BFFD62B009BCCEDB6618D1DBA4E1B59E4D4D2EFB6FCB458A61EC0C17F9C9CAAF26CB39A69068C2FEBC0237067110556BA02907DC81CDFFCECA1D23A0D3D124B6393F96D5EF0CC6918BEF8FF38B9BA21B89C7FDCA41FAE319AB65FE04D68F5E> |-/plus <1C60D8A8C9B08A953C5C2645FEB0592A407400980FD7A59E2167CE1DE33176B12FC1FAF360EF2460F967B5A481F98E02E17D4B34DE6789F5AA3C3FBEA9C80C3EFCF33C363CED5B321C18A167BECB36FBF855506545E0B8445277D7041C9B72410C> |-/two <1C60D8A8C9B08A95D352586DE3151F02B2E7A581ACA5976FB763B956393BC490F0CD4D5B280B6A52F290F789E5CEC9E33CD592FDCA6F067C5DCC5CEF67200F19AF66BA5FC16552CBAED33E8EB24BD86C9387F8A788D116097F79FB6AD3E4C888CEC183125A56854DFC4EC2A512FAD19E4C0CC01D2E3E78CD26BF58F708740511AEC5202BBACDCB9527106680> |-/.notdef <1C60D8A8C9B08A9596FE72ACE143EF> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/EAKJAD+CMR8 /ZCXPMX+CMR8 findfont ct_VMDictPut/EAKJAD+CMR8*1 [40{/.notdef}rp /parenleft /parenright /.notdef /plus 6{/.notdef}rp /two 205{/.notdef}rp]EAKJAD+CMR8 nfEAKJAD+CMR8*1 [9.5641 0 0 -9.5641 0 0 ]msf282.72 -127.731 mo(+)shEAKJAC+CMMI8*1 [9.5641 0 0 -9.5641 0 0 ]msf290.64 -127.731 mo(!)sh271.321 -104.332 mo( )shtrue set_gvm
%ADOBeginSubsetFont: RDDBAA+CMSY8 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /RDDBAA+CMSY8 def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def/Weight (Medium) def/ItalicAngle -14.0351 def/BaseFontName (CMSY8) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 127 /minus putdef/FontBBox {-30 -955 1185 779} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-24 -0 683 704] def/OtherBlues [-126 -118] def/StdHW [46] def/StdVW [89] def/StemSnapH [46 61] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/minus <1C60D8A8C9B08A953C5C2645FEB08D0F605D4538696964B7A1C2728DEF7C170C67D122DB85A4226362FADE57C92E833FF0895D3F> |-/.notdef <1C60D8A8C9C4A637> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/EAKJAE+CMSY8 /RDDBAA+CMSY8 findfont ct_VMDictPut/EAKJAE+CMSY8*1 [127{/.notdef}rp /minus 128{/.notdef}rp]EAKJAE+CMSY8 nfEAKJAE+CMSY8*1 [9.5641 0 0 -9.5641 0 0 ]msf277.441 -104.332 mo(\177)shEAKJAC+CMMI8*1 [9.5641 0 0 -9.5641 0 0 ]msf285.361 -104.332 mo(!)shEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf298.08 -115.251 mo($)shEAKJAE+CMSY8*1 [9.5641 0 0 -9.5641 0 0 ]msf303.6 -120.171 mo(\177)shEAKJAD+CMR8*1 [9.5641 0 0 -9.5641 0 0 ]msf311.52 -120.171 mo(\()shEAKJAC+CMMI8*1 [9.5641 0 0 -9.5641 0 0 ]msf315.48 -120.171 mo(")shEAKJAE+CMSY8*1 [9.5641 0 0 -9.5641 0 0 ]msf321.239 -120.171 mo(\177)shEAKJAC+CMMI8*1 [9.5641 0 0 -9.5641 0 0 ]msf329.159 -120.171 mo( )shEAKJAD+CMR8*1 [9.5641 0 0 -9.5641 0 0 ]msf335.279 -120.171 mo(\))shtrue set_gvm
%ADOBeginSubsetFont: FSFAAA+CMR7 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /FSFAAA+CMR7 def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def/Weight (Medium) def/ItalicAngle 0 def/BaseFontName (CMR7) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 50 /two putdef/FontBBox {-27 -250 1122 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-20 -0 683 703 431 446 664 674] def/OtherBlues [-205 -194] def/BlueScale 0.0437899 def/StdHW [36] def/StdVW [79] def/StemSnapH [28 36] def/StemSnapV [79 95] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/two <1C60D8A8C9B08A95C25148D4A67F955E56DED8709BEAC975B0F2E8A32A514F6D9222A5E47F7F9AE809FC929439005D711A5946815CD69262A805D0F899C8EBB5027F0DDD5B81DF529E7E3811173669493CAEFC29805ADB063CD3E32E3972B91F3A4784DBF342B608A84378E8760E2174C16BC88D5442E7B57E279222AA7C3147D75D44707368> |-/.notdef <1C60D8A8C9B08A958AA685092D4752> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/EAKJAF+CMR7 /FSFAAA+CMR7 findfont ct_VMDictPut/EAKJAF+CMR7*1 [50{/.notdef}rp /two 205{/.notdef}rp]EAKJAF+CMR7 nfEAKJAF+CMR7*1 [8.3686 0 0 -8.3686 0 0 ]msf339.24 -123.531 mo(2)shEAKJAC+CMMI8*1 [9.5641 0 0 -9.5641 0 0 ]msf344.52 -120.171 mo(#)shEAKJAD+CMR8*1 [9.5641 0 0 -9.5641 0 0 ]msf349.56 -120.171 mo(2)shEAKJAC+CMMI8*1 [9.5641 0 0 -9.5641 0 0 ]msf354.601 -120.171 mo($)shEAKJAF+CMR7*1 [8.3686 0 0 -8.3686 0 0 ]msf360.72 -123.531 mo(2)shEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf368.88 -115.251 mo(% )[6.23468 0 ]xshEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf385.2 -115.251 mo(A\)&,)[12.602 5.27463 4.68402 0 ]xshEAKJAB+CMEX10*1 [11.9552 0 0 -11.9552 0 0 ]msf414.36 -132.052 mo(\265)shEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf434.999 -123.292 mo(&)sh424.668 -118.479 mo
451.308 -118.479 li
451.308 -117.999 li
424.668 -117.999 li
cp
0 gry
gsave
clp
[1 0 0 -1 206.748 200.908 ]ct
[26.64 0 0 -0.48 217.92 319.387 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
0 gry
EAKJAA+CMSY10*1 [11.9552 0 0 -11.9552 0 0 ]msf424.68 -115.611 mo(!)sh434.628 -116.079 mo
440.628 -116.079 li
440.628 -115.599 li
434.628 -115.599 li
cp
0 gry
gsave
clp
[1 0 0 -1 206.748 200.908 ]ct
[6 0 0 -0.48 227.88 316.987 ]ct
<<
/T 1
/W 1 
/H 1 
/M[1 0 0 -1 0 1 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~!!~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
0 gry
true set_gvm
%ADOBeginSubsetFont: NCMBAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginEAKIZY+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B08A958B2129D6E9761120E2D623F206A8BB61D8ED90A20EE239C62172B553BFF416342D6CD99C95C515CA225C40039DBAF08CE4F055B08F39C15D29C99EF3EDD066CCCEF8932365A3BB1620FA5F0BCE8AF21A5BDEC0FFD55FA45F247FC811007CB408F0DCDD3AE01E3246> |-/three <1C60D8A8C9B7A73D3B2B97DEB4C7BDB68E0D63865C8BF294429AD1BAAE59A25299F9306A9E28AA5C0C0AF9F97F56096DB0FD0EC440ACCE834B0BA5392FD94D026768A961AA5D1A88FAE30F2B2033E77AFAB55B0B9C8092CD226DD9EFEEAAF5CD5AE79D6DDEC4C37DC43DE3B85DD2A2EC4DC0C9F349D5E8F9F615782EDC8C53805553FD3C0007C1818BF3D99AB659A079ED36132BBDC613CA63D7A0FE429706DBC6BA998CE56A89C002758EF37F90A390F83B3DFE49D312FA66FDF2F16212D1503559B35FC2DB8BD5A49535> |-/four <1C60D8A8C9B7A73DC579B9C1587087D4749982A674065F9D4190A646C4B6AEC0EE9FA16CBD7A614FBA5C7797971DF7C6EA57394603F00B98324AF84E1D747CBDA8BF6ACE99B270F3634D0598A7799230B2FA53F37697C8FB04996EB79CA1E39DB1488D8A5A85F57D049C7AE31C6F8A6F15F2EE8FAE7CD4D80767B9> |-/five <1C60D8A8C9B7A73D3B2B97F19D54A2E00E7DDA8E72064220CB7581D13CEDF071F346430E40993A6297E3A2A6D6093205222D977AC7F7B65CC82B221D9B18ADEA5D4AF0261ABF060D3E283C7B3B5EB39FF499721FD51203AE59E3BEA257DFD3E472FEF67221488EC8D1F355E2FAD057CA44A8B4BAD6C6C719C164907CBF9A6CC770DB0C7E58A37D2385E23F576BCFF94FFBFD8ADD4C5E6C32CD83ACEB77472D00FE1A4DC66393A99AC6BBD252B04C98B710149EA42B66ACE89D4FC4393F3A09165DF477ABCB0E8A8DB21E4278CA219EBCC9B067F92619913BDBD1EF3C9A> |-/parenright <1C60D8A8C9B08A958B2129D6E9761120E2D623F206A8A207F03DEA8F466C0D4F860EDF515D421F89285FC2D8EC76F5E903EDE1B5CFFAEC5DEA922C7FC4A51953A99A5FB1F96793348D816F60492670058F4DEA6D328AB20FBADB3C1B57A79D8CCD13A3C6D068BAD5F09F347ED0C895> |-/six <1C60D8A8C9B7A73D3B2B97FE394CF5175EFEC06CD8F59A375E41591273E0C059123310EC79AE072F532A0C9DF11EDCF7D4B9D83F0A2FCBB058CCF95C0FF8BAD8605C0C2E8D60E28BE3D0E0DD42D8AAC3094E7159CC3989179C22CC5AA3B3825C4ED9C5A83B733BA4666CE2A2B0097F22D25C776953D494478010B9DD2B957D6BF7D7A87CBAE6ACDB0F5D283FB8F9162F4638E98F510D9821787A5D0E835BEB255F8F8C0C281516F7A946A0E0B79E8072185D1B76EC3B7739FCD106> |-/T <1C60D8A8C9B08A9454CA4C75C5C97DCE7AB32777FAAECD12647866E7CB3FCCDC541E37F2225E520DEDE695980D4012AD5B972BDABC7E7E5410E71AC636924E778B3131B6C4D1E76F8C4592AC311A2107F53DC1850538C9E487E6D5DBDFE8027D7126BA9ED8B24E7379B57E474ACD298BF6B3700CC970D80111DD98EFC872C24D0DA3C75DDDFD177C6D15> |-/eight <1C60D8A8C9B7A73D3B2B97FFCAD0164E05E5D431E5753A04E6FF8EC1000AA50C3017B6E7E9999AB6C275E1779B442C0B877DDFB2D44B7F4E9A13C0D31D45CB36A6CC41D13A4DBF4EBEA14D8D16B2BCB36E1F56BC84DA55341D0B9286987CACCB201DA6A951DCA13BE347D0E4FB5789C143B7D2609F69022196D1BFEFCE92B850D5FDA6E807120F5A95AEE617187289BA58C56B2077368525DE666A847A7B7580825D5A043E7D9FA68CB1F4> |-/seven <1C60D8A8C9B7A73D3B2C65B72E3853584348C1AA0EC611B673546899CAC2F5881F734271F745E6BED9150871364812C182076C7FE649F3BB3D5FD14609E37BA29EC4E0DD0D9315F7FA96EE3C3E071336C6F3889037BBC9D4C9A050411D6417B8A488787A8C755BFD89BE81986B96036872806293> |-/percent <1C60D8A8C9B08A940B724A74A01ECFBE7F252ED2633A113942EF57893C6760A7E5D0606295753115A3645AE0FFB76D53DB102AB09C970F9C160B65FD15C29D9D5356D6EDB892B3686ECE1B579CC71DCBE62FB05D8F84B5CA49625045D3A0091FB14CD4F73C61E504D75A272CD75B25A296EFCE884483192C7E049ADDE76EFF39413114B1FB04CC8A1CF25ECE0E44E400D4AFCA6132060F5EF4783A1817794C86CE4C68338EB454B2CDF94B1BBD77CFC7E6022BB9A311FC6EB43048A04A5C491ACBAB264238867411224D4FEE34210BEEDE4EC05458E09E311FE5670245AF178FD18B32E4260034637A3DE2D270F40BBF2C9A498A2A0C93677FB8B9498BA2F1E87061E467DC9500FA5AEA7D51D9136A26996931CE> |-/V <1C60D8A8C9B08A9501CDAE1251A6E3A5FE8A2E025A46EBEB3E3162FDEE99DBCDB80BE756D84537D264581EB41F115807D695DC13947CDFE739A574C24272A09D9F25B590AC1358E1E0136052754887D6F220BF6E4E3BB03E5580192DFC4A0D0032146E38768452AC757D55BD497E3B7C8BC8042DC859F8D8C2688D2E7A50C14EB29EC924C8991D24E7> |-/q <1C60D8A8C9B08A95D222871B45C8677AD60861C3F92152D679EC046FD50804EE7440261F7F760EFE5BDA37735333B634AEF0E39D128EC81BD50CEED93A00645B5D6515E247CEC7B0C61191F67893C528A900762C59FAEA845D61ACA5F7E7B106031460E4734AA4EE85618EEC80B1ED1E754561578DABED479BE37358B26304EF9BF65844BFE482C31643A7466E43F6E32A0E02E6EBB6652EB71BB9780CA62F7BC7305363> |-systemdict /gcheck known {setglobal} if end {end} ifendEAKIZY+CMR10 /Encoding getdup 67 /parenleft putdup 68 /three putdup 69 /four putdup 70 /five putdup 71 /parenright putdup 72 /six putdup 73 /T putdup 74 /eight putdup 75 /seven putdup 76 /percent putdup 77 /V putdup 78 /q putpop%ADOEndSubsetFont
reset_gvm
/EAKIZY+CMR10*1 [32{/.notdef}rp /A /n /i /m /p /o /r /t /a /e /x /l /f /c /s /u /g /fi /d /v /w /h /b /G /semicolon /ffi /y /period /I /comma /F /k /one /equal /two /parenleft /three /four /five /parenright /six /T /eight /seven /percent /V /q 177{/.notdef}rp]EAKIZY+CMR10 nfEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf434.64 -105.771 mo(B)shtrue set_gvm
%ADOBeginSubsetFont: EJJQMX+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginEAKIZZ+CMMI10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B08A9570810981675968F2C907C696DFE9BE69433F6139DF6C45B8165ACC43B6E0B309859F778ABCF0> |-/mu <1C60D8A8C9B08A95F781BCEBD29BFD2ED58C4CD38EFD7D67646CB8168C38491887E94A4B661889304E1EBB36BC00A76AB2711F80DB3F5DCC3CEF19BED6993FBD372A074321C21F2394350B4B0A55D20CF6C0E55F34AC05DA8D2D3128188ABD3A2922BB1F74B306451EAEC58CCBF6B9F93EFE5F2D29E34ECC15B917AC36789BE6C5EAD964A25B14E19EA5C862A5F8BB72E1753EE0DBB2DED2AC4A84210C863D7525C29B47BE080FBB68B014D7D3267AB20B8958A617B7C92CBE46EB3D809CFB244A484D2EE1CCEE68E8674415A72A003C991A497489F6D2> |-systemdict /gcheck known {setglobal} if end {end} ifendEAKIZZ+CMMI10 /Encoding getdup 39 /period putdup 40 /mu putpop%ADOEndSubsetFont
reset_gvm
/EAKIZZ+CMMI10*1 [32{/.notdef}rp /x /sigma /alpha /pi /e /d /delta /period /mu 215{/.notdef}rp]EAKIZZ+CMMI10 nfEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf443.88 -105.771 mo(!)shtrue set_gvm
%ADOBeginSubsetFont: NTEBAA+CMEX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginEAKJAB+CMEX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenrightbigg <1C60D8A8C9B08A9451E2C198C46C84A2927FE84A31A7E1DEF6EA83D84AE6BC50FA69EFE2850B46E1F2831B1139E30A295CC8C3A2956BBB1A210AFF7246D4D0D679EC34E324F7CBD7BDA26564D5BC0B94DBD1A6ED248ADB669DB9D8816A861D4E2A58487B3D9B1918C0123815A7F5AFEBF24B24A4B0B7EE565473A6A7E5804149B70F213E60CB00EFE11CCBEDDCF590> |-systemdict /gcheck known {setglobal} if end {end} ifendEAKJAB+CMEX10 /Encoding getdup 182 /parenrightbigg putpop%ADOEndSubsetFont
reset_gvm
/EAKJAB+CMEX10*1 [90{/.notdef}rp /integraldisplay 90{/.notdef}rp /parenleftbigg /parenrightbigg 73{/.notdef}rp]EAKJAB+CMEX10 nfEAKJAB+CMEX10*1 [11.9552 0 0 -11.9552 0 0 ]msf452.641 -132.051 mo(\266)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf520.801 -115.251 mo(CDB)[4.67816 6.00507 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf537.481 -115.251 mo(')shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf540.84 -115.251 mo(EFG)[6.00031 6.00031 0 ]xsh89.2791 -81.2906 mo(".'5\)$&%6\(6"+"':'5\(''5\)#\)\(./&\)23\(+/\))[3.35104 8.63401 4.67816 6.60525 9.23419 6.60526 4.71391 6.0051 6.60524 6.00032 6.60524 3.35104 3.35104 3.35104 4.32188 10.2026 4.68176 6.60522 6.00032 8.64131 4.68175 6.60524 9.23421 9.98608 5.27464 6.0051 4.67445 6.60524 4.68402 5.27466 10.8051 5.64285 6.00031 3.35107 6.60522 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf313.437 -81.2906 mo( )shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf324.116 -81.2906 mo(4"++,\(++4"'5"!)[8.66394 3.3558 3.35583 7.203 3.60568 6.00031 3.35583 7.32257 8.66394 3.3558 4.68295 6.60522 3.35583 0 ]xshtrue set_gvm
%ADOBeginSubsetFont: MUFAAA+CMSY10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginEAKJAA+CMSY10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/plusminus <1C60D8A8C9B08A94618283762900F1838A29E6033307141CBED5DBF2815D62E39CE728D1491005963B34F49DECFB24C22195C2D5E0F8E85359957C2586903D8E3A4B51C8DD156F8F6CE5F24353FC685DD87A0F0A798636F2C31DDB4E15FAFDCFCDA5DAA06D592DA1C1EDC0C9BC8AE840EBDAED17> |-systemdict /gcheck known {setglobal} if end {end} ifendEAKJAA+CMSY10 /Encoding getdup 34 /plusminus putpop%ADOEndSubsetFont
reset_gvm
/EAKJAA+CMSY10*1 [32{/.notdef}rp /minus /radical /plusminus 221{/.notdef}rp]EAKJAA+CMSY10 nfEAKJAA+CMSY10*1 [11.9552 0 0 -11.9552 0 0 ]msf404.155 -81.2906 mo(")shEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf413.395 -81.2906 mo(&)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf423.115 -81.2906 mo(%,'5\)'&/\)3\(+/\))[5.99792 7.56525 4.67099 6.60526 9.23419 4.68173 4.70676 6.60522 9.35495 5.64285 5.99792 3.34387 6.60526 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf513.354 -81.2906 mo(\()shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf520.553 -81.2906 mo(;>&%#)[9.24255 6.84198 4.68402 6.00031 0 ]xsh89.2791 -66.8905 mo('5\).:##\)'&:%,'5\)7\(/.."\(!4"'5&\).$\)-''%)[4.6674 6.60524 10.1942 4.67445 6.32909 9.97533 9.97533 5.27464 4.66739 4.70316 11.1626 6.00032 8.4057 4.68175 6.60524 10.1942 9.40161 5.99434 6.60526 4.67444 4.67445 3.36299 5.99434 11.5248 8.64841 3.34027 4.66739 11.5248 4.70319 5.2746 4.67447 6.96509 5.27463 5.27466 9.60132 4.66742 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf341.036 -66.8905 mo( )shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf352.676 -66.8905 mo(\(!2)[6.00031 6.60526 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf376.796 -66.8905 mo(\()shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf383.995 -66.8905 mo(='5".".\(+.%'5\)$&%6\(6"+"':,%&)[8.4021 4.68176 6.60526 3.36298 9.59402 3.36301 9.47446 6.00031 3.35464 4.67444 10.8003 4.68176 6.60526 10.1942 6.60526 4.68402 6.00867 6.60526 6.00867 6.60526 3.35461 3.35461 3.35461 4.3219 11.043 3.60565 6.00873 0 ]xsh89.2791 -52.6101 mo('5\)"!'\)&3\(+)[4.68175 6.60525 9.2342 3.36299 6.2454 4.68174 5.27464 4.68402 5.64285 6.00032 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf152.998 -52.6101 mo( )shEAKJAA+CMSY10*1 [11.9552 0 0 -11.9552 0 0 ]msf162.358 -52.6101 mo(")shEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf174.118 -52.6101 mo(&)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf183.838 -52.6101 mo('%"!-+/2\))[4.68175 9.84033 3.36299 6.60524 5.26985 3.36301 6.60883 6.60884 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf239.517 -52.6101 mo(\()shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf246.716 -52.6101 mo(;>"0;DB;E.5%4.\()[9.24257 7.80196 3.34625 6.00031 7.20303 6.00031 6.00031 3.34628 9.8403 4.67447 6.60522 5.64047 8.65439 8.75476 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf349.675 -52.6101 mo(&)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf358.795 -52.6101 mo(A@)[12.602 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf377.395 -52.6101 mo(')shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf380.754 -52.6101 mo(HE)[6.00031 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf392.753 -52.6101 mo(!)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf403.914 -52.6101 mo(-%!12\)!-\)"!'\)&3\(+/!.5\(2\)2;)[5.27106 6.00031 6.61002 6.61005 6.61002 5.27106 6.61005 5.27103 9.47452 3.36298 6.24539 4.68176 5.27106 4.64935 5.64285 6.00034 7.203 6.61002 6.61002 4.67328 6.60999 6.00031 6.61005 5.271 6.61005 0 ]xsh89.2779 -38.2101 mo(I5\)-5%"-\))[8.62329 6.63872 9.59405 4.91479 6.63872 5.96924 3.31517 5.29974 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf149.757 -38.2101 mo(&)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf159.117 -38.2101 mo(A)shEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf171.837 -38.2101 mo(!)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf183.357 -38.2101 mo(0"3\).\(!"!'\)&3\(+-\(++\)2'5\))[6.00032 3.36299 6.0027 5.27464 8.87073 6.00031 10.8075 3.36301 6.24539 4.68175 5.27464 4.68402 5.64285 6.00031 7.56287 5.27466 6.00031 3.36298 3.36301 5.27463 10.8075 4.68176 6.60522 0 ]xshtrue set_gvm
%ADOBeginSubsetFont: JLAQMX+CMTI10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginEAKIZX+CMTI10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/o <1C60D8A8C9B08A95DBED6976208F65E8258DFF51CB9608A44871691EC2E0A092DB833438D1D2BF087FAB25520EEBFDA1810C898396402EDD8435DABCBA235435E10B0A329492B3968D802BB2E9043722B80EC0E5ED67E4B4331AEDAD6A57319EBC8D615CFD050F466FEE58ED9B> |-systemdict /gcheck known {setglobal} if end {end} ifendEAKIZX+CMTI10 /Encoding getdup 45 /o putpop%ADOEndSubsetFont
reset_gvm
/EAKIZX+CMTI10*1 [32{/.notdef}rp /G /a /u /s /i /n /d /t /r /b /e /m /colon /o 210{/.notdef}rp]EAKIZX+CMTI10 nfEAKIZX+CMTI10*1 [11.9552 0 0 -11.9552 0 0 ]msf327.955 -38.2101 mo(#'!%&!\(&*\(\(-\()[4.89682 3.97629 6.1163 6.72595 6.1163 6.1163 4.44373 10.3185 5.51978 5.05225 4.44373 6.11627 0 ]xshEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf406.914 -38.2101 mo(45"-55\(.@)[8.646 6.66144 3.33789 4.91479 10.9247 6.60526 5.99194 8.99506 0 ]xshEAKJAA+CMSY10*1 [11.9552 0 0 -11.9552 0 0 ]msf471.593 -38.2101 mo( )shEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf483.593 -38.2101 mo(")shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf494.872 -38.2101 mo(AHJ)[12.7227 6.00034 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf519.592 -38.2101 mo(')shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf522.952 -38.2101 mo(BKL",)[6.00751 6.00745 14.0353 3.35345 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf89.2767 -23.9296 mo(!)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf100.556 -23.9296 mo(".?!%4!;M\(+/\).%,)[3.3618 8.63401 6.3506 6.60525 5.64046 8.63763 6.60524 9.36212 8.03987 6.00032 3.3618 6.60526 5.27463 8.634 6.01587 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf207.235 -23.9296 mo(")shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf218.875 -23.9296 mo(,%&%'5\)&,&\)N/\)!'+:/.\)2-5%"-\).%,)[3.63676 5.95609 8.76433 6.00032 4.68175 6.60526 5.28659 8.64359 3.63678 4.66489 5.28659 6.36255 6.62558 5.28659 6.24539 4.68173 3.36301 10.4429 6.62558 4.68878 5.28662 10.8051 4.91476 6.60526 5.95609 3.36301 5.28656 5.28662 8.75476 5.95605 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf406.073 -23.9296 mo(&)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf415.913 -23.9296 mo(\(&\)0"3\)!"!I\(6+\)DB;@;)[5.99673 4.70554 9.23419 6.00034 3.34265 6.00272 5.32724 10.5648 3.34265 10.5648 7.67761 6.00034 6.60526 3.36298 9.23419 5.99677 5.9967 3.34271 5.9967 0 ]xsh3.6 setflat
386.012 171.499 mo
386.012 134.174 li
384.284 131.409 li
383.708 129.796 li
382.844 128.414 li
381.98 126.801 li
380.828 124.958 li
379.964 123.115 li
379.1 121.502 li
377.372 117.816 li
376.508 115.742 li
375.644 113.899 li
374.492 112.056 li
368.444 97.5397 li
367.292 95.4667 li
366.428 93.1627 li
364.7 89.0147 li
363.836 86.7117 li
362.972 84.6377 li
362.108 82.3337 li
360.956 80.2597 li
360.092 77.9557 li
358.364 73.8087 li
357.5 71.5047 li
355.772 67.3577 li
354.62 65.2837 li
352.892 61.1367 li
352.028 59.2937 li
351.164 57.2197 li
349.436 53.5337 li
348.284 51.6907 li
346.556 48.0037 li
343.964 43.1657 li
342.812 41.5527 li
341.948 40.1697 li
341.084 39.0177 li
339.356 36.2537 li
338.492 35.1017 li
337.628 34.1797 li
336.764 33.0277 li
334.748 31.4147 li
333.884 30.4937 li
332.156 29.1107 li
330.428 28.1897 li
329.276 27.9587 li
327.548 27.4977 li
325.82 27.4977 li
324.956 27.7287 li
323.804 27.7287 li
322.94 28.1897 li
322.076 28.4197 li
321.212 28.8807 li
320.348 29.5717 li
319.196 30.2627 li
317.468 31.6457 li
316.604 32.7977 li
314.876 34.6407 li
314.012 35.7927 li
312.86 37.1747 li
311.996 38.3267 li
310.268 41.0917 li
309.404 42.7047 li
308.54 44.0867 li
306.812 47.3127 li
305.66 49.1557 li
304.796 50.9987 li
303.932 52.6117 li
303.068 54.4547 li
302.204 56.5287 li
301.34 58.3717 li
300.476 60.4457 li
299.324 62.2887 li
295.868 70.5827 li
295.004 72.8867 li
294.14 74.9607 li
292.988 77.0347 li
292.124 79.3387 li
291.26 81.4117 li
290.396 83.7157 li
289.532 85.7897 li
288.668 88.0937 li
287.804 90.1677 li
286.652 92.2407 li
285.788 94.5447 li
283.196 100.766 li
282.332 103.07 li
281.468 105.144 li
280.316 107.217 li
279.452 109.06 li
277.724 113.208 li
275.132 118.737 li
273.98 120.811 li
273.116 122.424 li
271.388 126.11 li
268.796 130.948 li
267.644 132.561 li
266.78 134.174 li
266.78 171.499 li
1 gry
f
266.78 171.529 mo
266.78 134.204 li
266.78 134.434 li
266.492 134.665 li
266.492 134.895 li
266.204 135.126 li
265.916 136.047 li
265.34 136.738 li
264.764 137.66 li
264.188 138.351 li
263.612 139.273 li
263.324 139.964 li
262.748 140.886 li
261.596 142.268 li
261.308 142.959 li
260.732 143.881 li
258.428 146.646 li
258.14 147.106 li
256.412 149.18 li
255.836 149.641 li
255.548 150.332 li
255.548 171.529 li
0.85098 gry
f
217.839 169.886 mo
218.415 169.655 li
219.567 169.655 li
220.143 169.425 li
220.719 169.425 li
221.295 169.195 li
221.871 169.195 li
222.447 168.964 li
223.311 168.964 li
223.887 168.734 li
224.463 168.734 li
225.039 168.503 li
225.615 168.503 li
226.767 168.043 li
227.343 168.043 li
228.495 167.582 li
229.359 167.582 li
234.543 165.508 li
235.407 165.278 li
237.135 164.587 li
237.711 164.126 li
239.439 163.435 li
240.015 162.974 li
240.591 162.743 li
241.455 162.283 li
242.031 161.822 li
242.607 161.591 li
243.759 160.67 li
244.335 160.439 li
246.639 158.596 li
247.503 158.135 li
248.655 157.214 li
249.231 156.523 li
250.383 155.601 li
250.959 154.91 li
251.535 154.449 li
252.687 153.067 li
254.127 151.915 li
254.127 151.684 li
254.703 151.223 li
254.991 150.763 li
255.279 150.532 li
255.567 150.302 li
255.567 171.499 li
217.869 171.499 li
f
434.92 169.88 mo
434.344 169.65 li
433.192 169.65 li
432.616 169.419 li
432.04 169.419 li
431.464 169.189 li
430.888 169.189 li
430.312 168.959 li
429.448 168.959 li
428.872 168.728 li
428.296 168.728 li
427.72 168.498 li
427.144 168.498 li
425.992 168.037 li
425.416 168.037 li
424.264 167.576 li
423.4 167.576 li
418.216 165.503 li
417.352 165.272 li
415.624 164.581 li
415.048 164.12 li
413.32 163.429 li
412.744 162.968 li
412.168 162.738 li
411.304 162.277 li
410.728 161.816 li
410.152 161.586 li
409 160.664 li
408.424 160.434 li
406.12 158.591 li
405.256 158.13 li
404.104 157.208 li
403.528 156.517 li
402.376 155.595 li
401.8 154.904 li
401.224 154.443 li
400.072 153.061 li
398.632 151.909 li
398.632 151.679 li
398.056 151.218 li
397.768 150.757 li
397.192 150.296 li
397.192 171.493 li
434.89 171.493 li
f
386.032 171.43 mo
386.032 134.105 li
386.032 134.335 li
386.32 134.566 li
386.32 134.796 li
386.608 135.027 li
386.896 135.948 li
387.472 136.639 li
388.048 137.561 li
388.624 138.252 li
389.2 139.174 li
389.488 139.865 li
390.064 140.787 li
391.216 142.169 li
391.504 142.86 li
392.08 143.782 li
394.384 146.547 li
394.672 147.007 li
396.4 149.081 li
396.976 149.542 li
397.264 150.233 li
397.264 171.43 li
f
gsave
438.48 210.669 mo
208.08 210.669 li
208.08 3.0687 li
438.48 3.0687 li
cp
clp
0.576 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
217.68 171.48 mo
434.88 171.48 li
217.824 163.647 mo
217.824 171.48 li
254.112 171.48 mo
254.112 163.647 li
290.112 163.647 mo
290.112 171.48 li
326.4 163.647 mo
326.4 171.48 li
326.4 3.0687 li
362.688 163.647 mo
362.688 171.48 li
398.976 171.48 mo
398.976 163.647 li
435.264 163.647 mo
435.264 171.48 li
0 gry
@
grestore
0 gry
true set_gvm
%ADOBeginSubsetFont: BJEBAA+Symbol Initial
ct_T42Dict begin
-0.164 -0.297 1.063 0.824
 256 array 0 1 255 {1 index exch /.notdef put} for  /BJEBAA+Symbol
Type42DictBegin
[<00010000000b000b000b000b637674206e538304000000bc000002146670
676d61177010000002d00000008d676c7966006fe0c0000011dc000004de
68656164c04f3b4a0000036000000036686865610cca0566000003980000
0024686d74788fb04e29000003bc0000031c6c6f636178bf79b6000006d8
000001906d61787008ce018600000868000000206e616d65de93d2b70000
088800000145707265705ea932a8000009d00000080c6764697200000000
000000000000000000ee00cd003b00870289003f005600c1005e01ec00b2
0193008b012d008900ee003b00ae00b200c700b20037002d006003a600c1
00fc00d300b800d3025c00cb00c100660031021900c1004e005400b2009c
0202021d007500c1019600c1020e023f01ac009e029c017f00a0005a001f
042700c100f4005803b4006d003302a8005e046a02850700007302a20075
01100073005e0242024e0902009804f600370546005c00bc00b000a6036d
02e7075e004401f80075006800dd00e1003502370062008d0262008900be
01d301b601d701e3025200cf01c301fc01cd054805480548056600000017
00ee05c100b6021b007100b60000001b003f030405480548054805480000
001f0029004e0029004e0066019305cb019e008b015000ee00ee0031009a
0091004e009a054800b000310398002d036d003300e9004a004a00290398
039800330583004a00c3008f005205d3005a019c0075067d006003980398
03b601b200330398058301c70398039803980000001201e5061d00390421
0227065e008700e905b0023d02d70077008302f6058301b400df058d02a6
00750112059c02830162005e0242024e004e0552008b058d001404f60021
058d005c002d001f05f4005201ba022d001003a601aa0075006800dd00e1
05c902e7020c0646006405ec01ee01f8062f062501b205f80200008301c1
0635003d01fc063301be0639060e00680083006200be7b857fff00820030
4007060504030201002c2010b002254964b040515820c859212d2cb00225
4964b040515820c859212d2c20100720b00050b00d7920b8ffff5058041b
0559b0051cb0032508b0042523e120b00050b00d7920b8ffff5058041b05
59b0051cb0032508e12d2c4b505820b80107454459212d2cb00225456044
2d2c4b5358b00225b0022545445921212d2c45442d000000000100000001
000048d0e4035f0f3cf50101080000000000a1cd888000000000b7426995
feaafd9c0881069e00000006000100000000000000010000059cfd9c0000
0856feaafeac08810001000000000000000000000000000000c704cd0066
0000000000fa00000200000002aa00dd0400fffa06aa00810639006002aa
005e02aa00600464005a02000058020000890239fff20400003b040000a0
0400003d0400003b040000330400002b0400005404000039040000520400
004c023900a002390079046400600464005804640060038d007d02aa0054
02aa00540400ffee03d7009e019a00a003d7009e0333007903ae00ae0464
005c05b4006d0464005a0464005804640058049c009603f4007f05b4004a
0696003d046400230231ff480625006605b400d50464ffe30400ffec0464
001f04e5002b080000d90464005803f400060156feaa0652007104640058
0464006d0464005804d3011d07e5007307e5007304d3011d085600ac05b4
00370625009806250098057d0252057d008f05c7fff60556003104d30035
04e3002904e3002905c7002b05ee005802aa003905c7003f057d001d071d
003f05c700270529007105c700560625002f0473002f04bc001204e30021
0585001b061b004605c70019065c0002050c004604640089034a000203f4
004803f4002704d30012042b005e02a2009c0464000e04640023042b0000
03f20021046400420464007d04d30048038300540383ffcf049cfff8042b
003304640014057dfff8057d00460200008901fa0083034a009306060073
06060021060600cd0606008105b400c90422000003830014062500250625
00250464005805b4003705b4003705b4003705b4003705b4003704d300b2
07e5004407e5004404d300b20856007d0544004a05b4003704d300a604d3
00a40625008d06e7014c06960050057d025206960127031200be031200be
031200810312008105b400480464004a0400009102a2003502a20035050c
001205b4fff604d3003d0383006d05b400310312008d0312008d03120025
0312002507e5013f03f401b603f4005a03f401b603f401b603f4006603f4
01b603f4006604f6ffec04d3022d0800ff7f0312008d031200be031201fc
031201cd0652006206520062071f01350652004806520048064a00c1057d
005e065c003d0464001f0544007d05f40062020000000200000002000000
020000000200000002000000000000210021002100210021002100210021
002100210021002100210021002100210021002100210021002100210021
002100210021002100210021002100210021002100210021002100210021
002100210021002100210021002100210021002100210021002100210021
002100210021002100210021002100380038003800380038003800380038
003800380038003800380038003800380038003800380038003800380038
00380038003800380038003800380038003800380038003800a900a900a9
00a900a900a900f700f700f700f700f700f700f7013b0194019401940194
01f4026f026f026f026f026f026f026f026f026f026f026f026f026f026f
026f026f026f026f026f026f026f026f026f026f026f026f026f026f026f
026f026f026f026f026f026f026f026f026f026f026f026f026f026f026f
026f026f026f026f026f026f026f026f026f026f026f026f026f026f026f
026f026f026f026f026f026f026f026f026f026f026f026f026f026f026f
026f026f026f026f026f026f026f026f026f026f026f0001000000c7007a
0004001b00020002001000400007000007e800ae00010001000000090072
0001000000000000003600000001000000000003000d0036000100000000
0004000d00430001000000000006000d00500003000004090001001a005d
0003000004090002000e00770003000004090003001a0085000300000409
0004001a009f0003000004090006001a00b9a920313939302d3939204170
706c6520436f6d707574657220496e632e20a920313939302d3931204269
7473747265616d20496e632e4c48414345502b53796d626f6c4c48414345
502b53796d626f6c4c48414345502b53796d626f6c004c00480041004300
450050002b00530079006d0062006f006c0052006500670075006c006100
72004c00480041004300450050002b00530079006d0062006f006c004c00
480041004300450050002b00530079006d0062006f006c004c0048004100
4300450050002b00530079006d0062006f006c00000041ff0280010500fe
0003010400fe00030103007d0003010200fe0003010100fe0003010000fe
000300ff00fe000300fe00fe000300fd00fe000300fc00fe000300fb00fe
000300fa00fe000300f800fe000300f700fe000300f600fe000300f500fe
000300f400fe000300f300fe000300f200fe000300f100fe000300f000fe
000300ef00fe000300ee00fe000300ed00fe000300ec00fe000300eb0000
000300ea00fe000300e900e80064000500e900fe000300e80064000300e7
00fe000300e600fe000300e500fe000300e400fe000300e300fe000300e2
00fe000300e100fe000300df00fe000300de00fe000300dc00fe000300db
00fe000300da00fe000300d900fe000300d800fe000300d700fe000300d6
0084001d000500d60023000300d200fe000300d20023000400d100fe0003
00d000fe000300d00023000400cf00fe000300ce00fe000300cc00fe0003
00cb00c8000300ca00fe000300c900fe000300c800fe000300c700fe0003
00c60064000300c500fe000300c400fe000300c300fe000300c100fe0003
00bf00fe000300be00fe000300bd00fe000300bc00fe000300bb00fe0003
00ba00b9004f000500ba00fe000300baffd0000400b9004f000300b800b7
000e000500b80016000300b80080000400b700b60006000500b7000e0003
00b70040000400b60006000300b50032000300b40082000341ff00b300a0
0033000500b3005c000300b30040000400b200fe000300b10064000300b0
00af00ba000500b000fe000300af00ae0076000500af00ba000300af0080
000400ae00a00033000500ae0076000300ae0040000400ab004b000300aa
00fe000300a900fe000300a800fe000300a70064000300a6003a000300a5
0064000300a400fe000300a3005c000300a20064000300a100a000330005
00a1003f000300a10040000400a000330003009f003a0003009e00410003
009d00d20003009c00fe0003009b004b0003009a00fe0003009900fe0003
0098007d0003009700380003009600fe0003009500fe00030094003a0003
0093007d00030092007d0003009100640003009000fe0003008f00fa0003
008e003a0003008d007d0003008c007d0003008b00c80003008a00fe0003
008900fe00030088002800030088fff00004008700fe0003008600fe0003
00850084001d00050085003e00030084001d000300830082003300050083
00fe00030083ffd000040082003300030081008000dc0005008100fe0003
008100c000040080007f008c0005008000dc0003008000800004007f007e
003c0005007f008c0003007f00400004007e003c0003007d00fe0003007c
00fe0003007b007a003c0005007b00fe0003007bffd00004007a003c0003
007900fe0003007800fe0003007700fe0003007600640003007541ff00fe
00030073007200450005007300fe00030073ffd000040072004500030071
007000ba0005007100fe00030070006f00760005007000ba000300700080
0004006f006e00260005006f00760003006f00400004006e00260003006b
00fe0003006800fe0003006700fe0003006500fe0003006300fe0003005f
00fe0003005e00fe0003005d00fe0003005c00fe0003005b005a00640005
005b00fe0003005a00640003005900fe0003005800fe0003005700fe0003
005600fe0003005500fe0003005400fe00030053007d0003005200fe0003
005000fe0003004f00fe0003004e00fe0003004d00fe0003004c00fe0003
004b00fe00030048ffe00004004700640003004600fe0003004400230004
004300fe0003004200fe0003004100fe0003004000260003003f00fe0003
003e00fe0003003d00fe0003003c00fe0003003b00fe0003003a00fe0003
003900430003003800fe0003003700fe0003003400fe0003003300fe0003
003200fe0003003100340003003000fe0003002f00fe0003002e00fe0003
002d00fe0003002c00480003002b00fe0003002a00fe0003002900fe0003
00280027003a0005002800fe00030027003a0003002600fe0003002500fe
00030024000f00030023001b0003002200960003002100fe000300200055
0003001f003a0003001e00fe0003001d003a0003001c003a0003001b4176
00640003001a00640003001900480003001800fe0003001700fe00030016
00fe0003001500fe00030015001000040014001100250005001400fe0003
00130012004b000500130096000300120011002500050012004b00030011
00250003001000fe0003001000100004000f00fa0003000e00fe0003000d
00fe0003000c00fe0003000b00fe0003000a00fe0003000900fe00030008
00fe0003000700350003000600ce0003000500fe0003000400fe00030003
00fe00030002001d00030002001000040001006400030060001b0060001d
0080000d0090000d00a0000d00b0000d00c0000d00070001014c858d0173
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b1d00>
[1247 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 66 60 <00010058019e040c0229000300134008028c008b0400010410d4c4310010
fcec3001213521040cfc4c03b4019e8b>BJEBAA+Symbol AddT42Char 
1 0 0 <00020066fe96046605a400030007001740090400060108050204002fccdc
cc310010d4ccd4cc301311211125211121660400fc73031bfce5fe96070e
f8f272062900>BJEBAA+Symbol AddT42Char 
BJEBAA+Symbol /CharStrings get begin
/g60 60 def
end
BJEBAA+Symbol /Encoding get
dup 32 /g60 put
pop
end
%ADOEndSubsetFont
reset_gvm
/EAKJAG+Symbol /BJEBAA+Symbol findfont ct_VMDictPut/EAKJAG+Symbol*1 [32{/.notdef}rp /g60 223{/.notdef}rp]EAKJAG+Symbol nfEAKJAG+Symbol*1 [12 0 0 -12 0 0 ]msf208.896 183.669 mo( )shtrue set_gvm
%!PS-AdobeFont-1.0: AdobeSerifMM 001.003%%CreationDate: Thu Jan 14 13:40:57 1999%%VMusage: 89674 10255722 dict begin/FontInfo 14 dict dup begin/version (001.003) readonly def/Notice (Copyright (c) 1992, 1993, 1994, 1999 Adobe Systems Incorporated.  All Rights Reserved.) readonly def/FullName (Adobe Serif MM) readonly def/FamilyName (Adobe Serif MM) readonly def/Weight (All) readonly def/isFixedPitch false def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 def/BlendDesignPositions [ [0 0] [1 0] [0 1] [1 1] ] def/BlendDesignMap [[[110 0][790 1]][[100 0][900 1]]] def/BlendAxisTypes [/Weight /Width ] defend readonly def/FontName /AdobeSerifMM def/Encoding StandardEncoding def/PaintType 0 def/FontType 1 def/DesignVector [300 600] def/NormDesignVector [0.27940 0.62500 ] def/WeightVector [0.27022 0.10478 0.45038 0.17462 ] def/$Blend {0.10 mul exch 0.45 mul add exch 0.17 mul add add } bind def/FontMatrix [0.001 0 0 0.001 0 0]  def/UniqueID 44282 def/XUID [1 44282 17709 6867 29516 11444] def/FontBBox{-156.03 -257.00 1194.19 910.23 }readonly def/Blend 3 dict dup begin/FontBBox{{-131 -236 -135 -201 }{-257 -257 -257 -257 }{582 1217 1274 1922 }{878 974 890 974 }}def/Private 14 dict defend def/shareddict where{ pop currentshared { setshared } true setshared shareddict }{ {} userdict } ifelse dup/makeblendedfont where {/makeblendedfont get dup type /operatortype eq {pop false} { 0 get dup type /integertype ne{pop false} {11 lt} ifelse} ifelse } {true}ifelse{/makeblendedfont {11 pop2 copy length exch /WeightVector get length eq{ dup 0 exch {add} forall 1 sub abs .001 gt }{ true } ifelse{ /makeblendedfont cvx errordict /rangecheck get exec } ifexch dup dup maxlength dict begin {false {/FID /UniqueID /XUID } { 3 index eq or } forall { pop pop } { def } ifelse} forall/XUID 2 copy known{get dup length 2 index length sub dup 0 gt{exch dup length array copyexch 2 index{65536 mul cvi 3 copy put pop 1 add}forall pop/XUID exch def}{pop pop}ifelse}{pop pop}ifelse{ /Private /FontInfo } {dup load dup maxlength dict begin {false { /UniqueID /XUID } { 3 index eq or } forall{ pop pop }{ def } ifelse } forall currentdict end def} foralldup /WeightVector exch defdup /$Blend exch [exch false exchdup length 1 sub -1 1 {1 index dup length 3 -1 roll sub getdup 0 eq {pop 1 index {/exch load 3 1 roll} if/pop load 3 1 roll} {dup 1 eq {pop}{2 index {/exch load 4 1 roll} if3 1 roll /mul load 3 1 roll } ifelse1 index {/add load 3 1 roll} ifexch pop true exch} ifelse} forpop { /add load } if] cvx def{2 copy length exch length ne {/makeblendedfont cvx errordict /typecheck get exec}if0 0 1 3 index length 1 sub {dup 4 index exch get exch 3 index exch get mul add} forexch pop exch pop}{{dup type dup dup /arraytype eq exch /packedarraytype eq or {  pop 1 index /ForceBold eq {  5 index 0 0 1 3 index length 1 sub {  dup 4 index exch get {2 index exch get add } {pop} ifelse  } for exch pop exch pop  2 index /ForceBoldThreshold get gt 3 copy} {{length 1 index length ne { pop false } {true exch { type dup /integertype eq exch /realtype eq exch or and } forall} ifelse }2 copy 8 index exch exec {pop 5 index 5 index exec}{exch dup length array 1 index xcheck { cvx } ifdup length 1 sub 0 exch 1 exch {dup 3 index exch get dup type dup /arraytype eq exch /packedarraytype eq or {dup 10 index 6 index exec {9 index exch 9 index exec} if } if 2 index 3 1 roll put} for exch pop exch pop} ifelse 3 copy1 index dup /StemSnapH eq exch /StemSnapV eq or {dup length 1 sub {dup 0 le { exit } ifdup dup 1 sub 3 index exch get exch 3 index exch get 2 copy eq {pop 2 index 2 index 0 put 0 } if le {1 sub}{dup dup 1 sub 3 index exch get exch 3 index exch get3 index exch 3 index 1 sub exch put3 copy put pop2 copy exch length 1 sub lt {1 add} if} ifelse} loop popdup 0 get 0 le {dup 0 exch {0 gt { exit } if 1 add} foralldup 2 index length exch sub getinterval} if } if } ifelse put }{/dicttype eq {6 copy 3 1 roll get exch 2 index exec}{/makeblendedfont cvx errordict /typecheck get exec} ifelse} ifelse pop pop } forall pop pop pop pop }currentdict Blend 2 index execcurrentdict end} bind put/$fbf {FontDirectory counttomark 3 add -1 roll known {cleartomark pop findfont}{] exch findfont exch makeblendedfontdup /Encoding currentfont /Encoding get put definefont} ifelse currentfont /ScaleMatrix get makefont setfont} bind put } { pop pop } ifelse exec/NormalizeDesignVector { exch 110 sub 680 div exch 100 sub 800 div} bind def/ConvertDesignVector { 1 index 1 2 index sub mul 3 1 roll  1 2 index sub 1 index mul 3 1 roll  1 index 1 index mul 3 1 roll  pop pop 0 1 1 3 {index add} for 1 exch sub 4 1 roll} bind def/$mmff_origfindfont where {  pop save { restore } { pop pop }} { {} { def } } ifelse/setshared where { pop true } { false } ifelsecurrentdict dup systemdict ne {end} if0 {currentdict systemdict eq { 1 add end} {exit} ifelse } loop/findfont where pop exch {systemdict begin} repeatexch dup systemdict eq {pop}{begin}ifelsedup systemdict eq {pop { currentshared {{}} { true setshared { false setshared } } ifelse shareddict} {{} userdict } ifelse begin} { begin { currentdict scheck } { false } ifelse {currentshared {{}} { true setshared { false setshared } } ifelse} { {} } ifelse } ifelse/$mmff_origfindfont /findfont load 3 index exec/findfont {dup FontDirectory exch known{ dup FontDirectory exch get /FontType get 3 ne}{ dup SharedFontDirectory exch known{ dup SharedFontDirectory exch get /FontType get 3 ne}{ false} ifelse} ifelse{$mmff_origfindfont} { dup dup length string cvs (_) search {cvn dup dup FontDirectory exch known exch SharedFontDirectory exch known or {true} {dup length 7 add string dup 0 (%font%) putintervaldup 2 index 6 exch dup length string cvs putinterval{ status } stopped { pop false } if {pop pop pop pop true} {false} ifelse} ifelse {$mmff_origfindfont begin pop[ exch { (_) search  { { cvr } stopped { pop pop } {exch pop exch } ifelse} { pop exit } ifelse } loop false /FontInfo where {pop FontInfo /BlendAxisTypes 2 copy known {get length counttomark 2 sub eq exch pop} { pop pop } ifelse } if {NormalizeDesignVectorConvertDesignVector] currentdict exch makeblendedfont2 copy exch /FontName exch putdefinefont} { cleartomark $mmff_origfindfont } ifelse end} { pop pop pop $mmff_origfindfont } ifelse} { pop $mmff_origfindfont } ifelse } ifelse} bind 3 index exec/SharedFontDirectory dup where { pop pop } { 0 dict 3 index exec } ifelseend exec pop execcurrentdict endcurrentfile eexecdb5c869250c571b7b4b2f2d1bc5df62b4b62e140a58360f3d37d187d7f2d8b1beac6ea454f88fd2926f0ebe562bb6458095228ffd15285db3ebfe26576c1875ef1ec88e4f96a9583cfd2c3428887600578d8f737486cf10ee116a33173415bf113cedb3731fff27f90b7fa4994f6c96538c966a112d14b5c7dafdaaaebede4
edfbe7171bf6173c25d3d3f0b8d2e28e7ba7a7c82d18f341046c957e80c8f826dd7a3a6b6b564c71651c9dea902ad7269bb8d40b21f12e5a6e2e8544cafc384db681b37603a3dee7e90b535c0525337347ab3ef60786bc6d02535a46ac27a160560904708d6d650721c318de02aa191b6e4238337c60223c4c35bbdaf90fe7
5006db3edffa68b4019752284175996fe0b4853b75e5cc402e5156491db1bb8bc61611f1702913f6706ac77e2d22dbdd913c85f84328d1ee315c9045b9dd59d1bd556c19703d982190e45140f6ba5298f0d302dfc6ddab02fad13e8e403034a1e395377e2537bc0ed10569824fb56c0703b88b5e20606f8a054788599a0e69
d7728db3b3459c6c3fb0795fa0be2aef72e04c606afebafc6ece89cde4c09bf2f44c4e9181450201f3543a27c33d8805c36f91935a2537841c886824737c0a1e1d5d82817999b095bfdbecabb7edb08915be9590173d62274b41ae3d1518b79d45aec46e610f29d9d68088062f9c398ba2cb99999420592ed04099be8a7107
59b6d06ecc22b6a800feb5cdaffd0d8cee8668d51cb34b1bd05e35449b6bab561286f2707908ddf095489b68415eecc114f400fc09d51c6d7c841f913bd7cfa73341b77e9d0876d77f5f767b797d4911f7569002d064b5a6a8b19a241a9acdac74cc08a4629542783b051f7c62231415a03577f53d4272e9e62ad0ad149e3e
89d92722674a6f57cbf9b1e7d1dd1d47317a9a78ef6907d47267783b03dc68792867f778a24351fc6dc8d8c6a80d6e65f41881a8e3f9ab3b9788f4584d89b31357cc22903552661a937495087d764125dd3021eeade1aa3ea8987d026cd9d4ff0415f1f5fe3f586a9a319717c26f69b39211ade434eabfa3f41302b887c838
b0d8f0c052da0d1eafb9589323c6ed915aa90193d6435c9072b7796d413f8604bcf69d27002c9c5b031f73a90cb9c5fdff45f53215fed3006ff2fa1f4760486c6d9871f2b5650ed30e8bac5f7ed59eefc3bdd69b9f757de4463182fa88cd51f3c0d23f3e748d94100f36d6773c44b69e75fcd6fea17114ce039d7a38efa50b
edf2e6eba19a690d704b90d8a0b6f4c4adad151e54efd556f0591d7bb9920fd6fd9c9b77714ecb8d3cad3de864f74e1a4feff38ea3a0edb31973e311f884f03d1fca7111f35cabfb884263bcc293650bb63973b6c9c5420ca5190d30d3f44ea22316eba32efb71603e59ac2bb243924bb96eb1e724bcabc257f5a6acf301d8
ea1f8f924e43c445b7e543fd9930902741eb936d3ac83e579f214f20e918e9fbcbfec074015bdcd69328a6496559d9515531106bcb0092dd0cccf29d6ca216257dd938fdaec49225c831465c563057f5228a84a8a61141478ebfcb4eef45d5b2411f9067231a87859571a8c7d40c4cee99c90d640c952e54429fd56976d243
28566353723772ee8756bf48473bb3c0babd7bd1bc8aeb3157efd872092ab05603440eb7805caa06ea74b7a241cc8ae9c132b0fff23bd99d117752a9ff752c52912818c0570154d35511f60a0619c71bc82889daf44dbd8ab56926d455e1701cafe88b28abb6dc8773c9acadd467a7ce3a0e894bccb71bfd6882b83320b847
2ef783d6ce3ccd978947967382f5100b84ea96262085b97b4a6f4aec74a908d4430bef23de164d26bc5a920db8bf829b554f030d40f30d87bebb24199ce92070487dcd9f8f7cc03730fa65528979c8c9e8ad858b6cb20d0ee753a71c2d097e5153c67055e3bdc26a6c6c0dd17ef1c93dd172945e60a6affaa89e03e9807ed0
9acdcebcd29e29e7b1acc8aa16ace2671f7e3dddda98ea56ca35648109d4e6333188ecc817f31b98ddf0af7e72fd3146a00d14b7b1d937be4e99fed0ef6b07c760a4c95fffe0b96ee9640fe1b832ef8099bf6902914c4fe18a72a46fd761821da2969406e931201a82edc3ae5cb35ef539743c0d52dcfdad6aba85922813a1
2dc8345091cc4df2ac29f227716d4bcd87eee2c5b2c87687787e1887228a8ec6965324e13889feda3c522227ac36f1fb2f07708515cd589d83fc2d89d21cc59f91df0f70ca4965e50a742419304e421e3c86d4f20a95f71d66e0e4bc872dd610de551032e33948040f04e76bb2b4ba2bce5e1c8034158fcf57741029a5df68
70500ac6e424fa2bd6169a7b7bab6eea52f84a2013d2ad087d15f39d74b64953e754259ebff6373587285e0a99dc711b586d175e4006633e31b61b757f64ed92e81102f9faeb41eb3a88e60902942fb88de5e45c57522aad6e220187600115e56787564920d361b213168b7282d6695dc66d8ed90209301dc5218addf58d19
69f1bdd6a168f1f295160337c60b7b2ca455f6cb3829f46400c588dfe37b09d11bd396e39e0df82c530597d1383156031acd40440f34ead3efe4d0f29ae03a4d70ea4c1c0fa9ddc0b651035cd0962fb8f8477e2e05c0d2e7c2eebf896fce3196516d8d15cce979bbdf9a4369d4d824653813e8c4fff5b1c3086b32d2f76a32
12ab1eaa73d8ea804a5c8c197fea412a156f10655a1ba3e5b19386bf7f5bb571e40f7a2008c44aa432068e1461c4d1f281536921a999eeabab832b6ae0126871ca011782f5562f9bd4fefe2f27a1f2abc95ef5d656bd07e81c17a87e37b50232c81aaa1e98bba740cad475d50a7874632044f42fca689f1906ab4afb328d86
54b762979e34dab8733e00dc49086ba9fcec0e3293211411dc742989314cbb30cdb1528afef326f4e925ab2cba41f2da616fe0c6e94e951adf0237f09fb46f91d53b6f27341d5941d65547df096785c1f473c29e83d73ec28ffbf158f84678fcb2a1e450c1a216d2eb5152eb5127cca0aaf6e2c83b8c9d7fa61377a73e0e5c
e6252f9326416647b3db71063e043a79f19526e7b310ae8a3dcbc5487d0c0b362e4ccf5b8677f082154ecf78435622dd950807c5a5be2afac2cb632993de36956cc11540c1d8c1cb40919d449f718fe1d1ad0a5f21434881fe5ff57ab35743e5dc9df9072af3641888417827f1db0311dd0b2c8b43fd8df010400c2ff4efa5
dd8dad59cfd16dc201eb476bad973f3fd36c12b2d41177995450eba94f878ea408fec0d1fad00b744d57b387665e2b33f23d4c65a183134d5ff1b573b8e9a4011a1caaf6e7a6c1c1344f7be048db35332c92d8bfe32769fbfd0a9d0940324e5f594bc46dca87678b4037df5b73c425f65ee561f1ae986827fa2a08efa9097d
260ab9e6c2e4d1c9b9188db2d30f305c9cce9d6c7bd8c53f09411c5701f49e07c23087540f8a6453cc7a24436999ddd755acdd25fd02965bb8288b769581d52da2cac0a6e9a6ec913eee6ca4bc27181d3cbe5670c84d51e24078c8d01d6b24dd7beff3d65bcc313867285437e97d622c3bb69e7f4afdd6947b83ee629d775c
d5bba0c3d271c6f52deab6749ac1d3c8633e27083364675a359929b9040c838ec42ea56522841bfe2757c549bbee2c50db40289ece251451c66ac25bc84cac6ee1e45d98e73357dd96135d2be58884d5d9fd5e1fd4c82f47158413df51081deafcd59ed0f960168a3357d0d408eb8e22b09aa58e4726f369d8bcca17891860
6ccdadaa22742737136cc2891c0f014055f0ec5def9dbc838808d99b052d80a3a2ac5923699a53bb17f8af609227478c700dd7929caf52d323651017611bbf6bb8a1bf7c17e4ace5f1e6cbabf550e2fc18730fd0603f34ace3655afadc7fbd20aa60a594041178af123eebaffba4ede12420ff22bd1086a39b520ea55bfb78
bd922388488e536bd6b957a45f7b5139ac082f82d4dcc378abb67ad4d63c3b90a2d51a64beda8eeb9881e6cbf67ab795e588693c547baf8ee90c84b562c579769f43b7fdcfc4c99e4e8ea311ff1966479e52afde2b01c8c369b8c2f1e0ecd47e074f14142ce38ddd3253141be032979a1eeec55be47e72948428ee01cffbd9
936b8e9db40af36580cbec8923840365b66d04baf02b9bb7070d6ae152843c3db3e55386221c171ada792e14a5c70ee4d2396b25d3209571c294f1b32f12384e7dad410805da8b123da2e7716ec6b48fc8f6ca5a16d406f0a3b9946706637e2570978bd41c446f7fdce9b7e659a78118ff55431e3429b3b61c2c8034183101
dd5bf81547a3cf44440ba762acfd2a45f9b9589fd77a1ac5582be8982befa896c8288790ba752fa1ac6090c993990e0f15eff2fef9767e354c89e87ebb5d3f92fc7759239fe14fcbce6f41aaaf74970c034dbca187596bc2fa190a6697d6ab0605942165a6e8e71cd12ad86d0b6a64c919e08501dd1135dff726b386957400
8e379b4f2181eeac5a03a6e19c2fccf1f00ee46a820652cb6411549af53817f441957cae3c158aa0c4874e486bdf901805d96b00a1df901539182aa6f7cab96c3d269bd72ffa8e65e16bdf7112dcfe34ddeb4d8cb326f516a2992e858e40b62c43a81a0ec495142ca24e146b29082f181be62bbdd3434479497842c94b98bc
2233c5e5a80544b2f19084a18cc89bbed214e2c1495a386e6febe6b9a1cfce85fd61db351f45ee8c0130e5e36d7f9851adf02284672781d35fae9cc6f8b2f0d067a4c16054516acdee38e9f0ca0959dcbb4fd57b28bc6b666214695287b774bb4e0744c022c405ecc5b7b335921d02a8cef2f12adbdc481a5404625753db05
81ffd7fa6e43ab2423acb651328176c16cc48d3b38db8e25cd60422bd0f1e7f29390dc9b99eda8946b78e05985d348a60ac955f999b88ba1f32c071cd1d4f97338cbdcf48a1e092206011e69b02e08a6318099257efad43986dae9d995f34006745cccabae09b1ea6edd69a30689f9194339a307949abf24770368fdc6fdec
48042ad8765c814a4062d79ccdf60f7b993448e2d3936f20569ebb107b2d4022bfd0c65b70e06ce96dc2f39085956f6b456fc7105d5c6f1467529c702879089af3d95e3cb705866a3c7ae3b105065ab3763fac864e1cde6ae639d5c782bced137e1ca7707eded071fe937a6a9a22fd55a03e2c140d2aebe046a38a6cc45e89
a232b2533a27930b3bb90aaa07d74b8a583fbe180c7f438f5bf499f754bc1808784d6201ca113e3ca27ebfa1ee5063d4c34c3f2088acad73e82b508a7317423f6143a0efe52a193af0eebf7fe3f766163e7f42656c12dd57ab650406d1339c9323467113972f3a73b1aa67952a6718f692915d3382aa80998f05425b9b42c8
1bdfaa4c05d5aa997c421bf085d4c6276a1fd241b4fbce96bc6ba8bf0a972e55c30fbb3e7355a97a42cdccf3db1f4795e4dc43f7cafcce0b62afd75a1180587836396a8a1e976d33ef6522724cbc901065186c6c3770b9c7e9acab68eda3a66c2756abffad4f148017d0c53f5b9cc9e1f574106c56f6ef21a35846df0a65fb
f823996c1d69b3dc8c48694fbf583138db6adcf7d295ae9120aa16073a9f1e34262bf3c60bada0523994672eedde64e9657625e0615d54b3d1f34b9da0abd9ffdfd91b1c2c569744cc8e2c5859edd2a235f013ebcbff2da4f01d479497d298da63eda696abf0a3544d60cafe631e3fad72be900c7a4affb44bef0d650231de
0d8c75dda43d30c33a55b11ab3749ebba94f9f20011819b2ec0f5d88ef2d1d825c3669f0f6fb3d5a719527b7a41ac9eb1589baeb606adccefe9bfd0b23d74b1bc1b98944ce69a1f935cfd0ac8ff48e27a61f083ff4e73f7697bc7c173e04aa86175975f439b950b5ad118f8d11884f0995d044ed511a98b0f3c1f2be094675
6b24ed71443aca6185feef6c7635ccd760ebb376c421fa26272c642cabb84684ff93a0e51546555e58fcb34dc55427e61b9b2ac447e60bd6b2979c6214cbd9b34bb26f2d42c0adb4c11f0b91a2cdae34be6743ac27b8b6ce2ac29864341c6fa34e07b1efd6959c6975df53f294bfa6082696163eced9817972fffb71c35cc0
47b8aa83c3e17923ac043d248e946f65e7c6beb3a3e56058583737bfc50bdedcf55a21a1881abb1c1f73092cc53d2f6f3360c355698e307e688dd41ce033b2b1c518cb4c859e6ae608ce721cb335e9e36877ecfe7a2aa613a74e27a6e7a2861736b09f5092ea50873e114c1a7ac190918330fa5ee50f980b7306a70d08fd8a
4f8f8a877abc001eb5677ae854b9ef34374097baf8b1b2b0e8e88a96f3b99f7eab9157c9df19d97e8541621681413618e1eb02be5956ee83a95f53a62245d5bc1d9b321adff6c2aea1e12ca53416534ce076d173b66d9930efe3748a6d7a6022cc1fcaafb4705cd11cf83534ef6a2d340c20af2c5bcba71b4641a1021c7c1c
7f67620eeba206af5ca6c3fe89538803b12d71fd59f2d42b5f6229cdb8be1c73624451e685167796839413f29f4507164295e46308d96540112f8cb5294059ab593b2ec42c90cbaade2360bd96f2cf38b5f687405d9c06c9da8e18d4bd3c1f6df3f097bc15f4bb8534dff02704eaacb97098791c2e379b2becb9c8298a7b2c
4282713d9546a63bf3284f757fea7e4625c2311705ac37e54be8e955a9ec58315d6392c868cab550df1d6feaac3cd82b7800b4b2548779533e75a9ac8b9c4c2e636429ae54857ab5a87b1c5c7c0e7a160caaab8a77419c17c0c2bacda7c75e114ce8831c77a2459b8e5bb9aedbd2163bd345f26f05c7a2fc49ce2aec7f6875
da80e9fbd50be1afaf2cd9e4e71ce84bad177a8cdf3f1edfa79e25ddfeee0670ff51000741a4791cea67f5a9c6a77318b2ad8d3fe1d0ec869b232102001e7f11c7bc70072b01fdc3a4b4b6e0b3f0c62651a68b5fd73716fee9793afaf42bdbe95b3b76f318f647b05de9b76817e1c4b0b00c0cd02c3e4345eefffd0856bf9f
d27a00e52eff7b5fd111c85f619a8d78a89df5158a61ab4e2db8c46c9525fc6a61d4724c0fc15a1371d5e9a67d8fddf98f614aa37a9e5edd235ab1ff6d5f3e0d8283a186a857efa6610f02177320bbd373a8bcefce774f5f7505bae86b985d62adef4034c02dfa6d686897b2ff0886dc2ccd082e48d61247786ba4e3e3b770
dbe028d8e71e25c8fdd958d4efecfb8cacf79ca122620bc426d591b96e33e898017e866edf47bc7bbadfaa92db3203786a762059878281e9f0b5312928cc802bac0d46ee3171512bbab3555b265cded22c0b61247a3d92a13813ff3fd89e2bd0a3bfdc8ebab9a0b5791b157be9cc5de889c15780caa823b83d27a8b61e4d5f
d75bc404d3bf684ac6de6367938fe701bfb6c1b680b57bf1011cca458b569686b47ede0ee27185a8880c2bf0c960f5ba29597e45fd348448e1a8d2250d2838d471970a88a7156a8699728ec53081e9068996a8167ed90fe9a730ab8d441fb6d185745e2476e81e65f59b9c14213d7a39815547015c6be65b6141aec14da1bb
dcab87d9eeb42c4c3d1b2f4f1c2990da39f06b94c76b4627c2b7df59c1c06235b089c691f0cdb1238d57212c9761dd708859a6f16111cb9e4f75a40cb2c5d0df83a0a44911f452c333c96a019e609683fe5b73902c42e53517ec596a6bbbaeffbaf02bec6499968c61f14ba2d5c9bdaafc009818e75dddd2dcdfcaa5e0156d
2ff2d3f53155ea7066f9ab5702c05640e18f030b9733f3e81593fd7f818cbd9bc1cc296dc1af71e7311f0fc1370dbf909803480eab1bdc36e41ff4fd7e9b9b68619843910bf55eb4004f6d6068cbd1ea38faae412b5fcb35ccf7996db48cacf46723ae46ba2a213e0719854f95c85a3ec0f435086dd302d47585dad6966343
5e86f13e92becad5b476dc00845ed429b0666a06a27c8f9febc501e19a381043176256e8a2552d7e82ceedb2d43cc7367be9919bd10553ff0d7077ae5ceda875db2a3e60f03b37a04770c6a3a56614e4f85164a54f027d136c2fb229c2f241fdbba6cdb88d40fd9fd36fcd2e64e2392a191c7553dfe2afc2e8e77a8f57c1a0
c60f52b645291004bf3cf23835c654d6cbc5ab01e7fc6a44def0517b40dd01276d060c3f7be9740ff2ec20f1bc85f6dc4b77fa492cde638570918adfbe8f590661a02332e16f200aa5d28b6e68a101db1f16abd94bc83f1ce45430344cd4036ea1f4d53e666ec8fc155733f10c10dd96ed801f49e95d8ae731e0ee1f58eca8
cad266d2252b1860bb6bfe49b0c642229689842df9d4d8e41702607876186b44797f75c8e8635f723abe178cfc3c072948b966bdd10d5b37d8741141793b8683dcdec4a71e751c288edafa0d4f02c02ad89118a9ac28250e5c258b45a184e53b5f6817318d1c8cd0acf8615aa3179fcc6a51569676852661d437a4b0ba0578
20e9878ba1a9f2389c26c2e88ea37bcc503921c9da6eb64471b60cf9c39400934832474dfe6a508fa204c1457a64535986a34ae20139aeb427b41e521a0d8c4850a5380320bdf7857c0a6824b4bc75d069c1b8766ca5edf97ac1d911819858ae50fd80962636809932e79cf6dc98170722a0c314a595a08a2794f911681c7b
54e0b7e319144ec495055ff6ee96481368a22bb4907b640cb5db041c47dc8ef17abb137b14d496927a8629231843abfdaf81ae05091ca9c172d070aa64535a61b22e31fed493b1c7c841d504ce2452954e1742aea76ec3c87b7da344e1fdd2095cba661d16ecfa977741786527965e1911bce05de8f78898e722bf52daf2ad
cace56d51783562471551807480558f8444f94dafad0d4aa5f9266e72ae51bd23f1c6de0ad92e4d5cbeb08ec373fb12b41d8eb30bae3fa65d5baac572eb50200895841a428f80edf819ee8ef4739b349ada0d3a05fe0f58fee4953e19c31ef36112d023e103e69d65962348428868544f5a0a9bfdf712c5f9e445364090e9c
dd5cd0c6b504b014c41323d4d5512c16fc4a9c3380b179ba5e4504fa9f8bcf9eb05642a3882f13d0fb98bdab2f8b340ff528f352e10c2c077e5ffb7b37e3b4690d4da66b86d2aee44110130980ce63553027aa9746329d24e566707c56d48806afd984f2efa0ccfab26f55ceeb924716b5792f176659cedc5831da6cb37b30
e5c01a63e39c4d16b0b1335dc7c2b03de4a11c9c1b7e4dcb8ef63e4008e87af1466a9daab720d081f1dd4a3667defcd5afb625f402bdd824220f074c0e8b0f102fd54765258c13824eea72dcce9f03e614cf7559e7938cfc17f90ccad87fe26d9885cc3c9b69dbc070594a196e57fd5bd83f519826169b340f526516814fc8
6ef37cd0c5ceb54885a4ac1571181a8b0787726fe654eb0c895edf6b031b4efea3c332a5cb744fdfc78df0a4ab88c0522faebe179084920206002f22c6939be88e737927d384b09140fbb8aa9109b1918aac97947bd68be690e4f625f00234920b956ea270db48d62a9b8a8de3387ec65069c45d29e1128e41b5e8baa4b72a
eac51dfb437402c1ba4694833ab5b23cd08dc4904dcff3b585ada003210e36fa5b1e6aa27b59cb7049a903d0122e2a4c1d02d39b4380921b9875b12155d94c8904193fe0d0c608d8b647d0ccf600c500f61ec08d5513665633a36d23c5cf1895a000cc65039eb045621a4c2cd6ce6930525f8eaf2ee09430292e095be48990
0d5656a704daaf9c4f6137b4a9553691d79ad8e687bda455cfa7d7a83106681d124de7e6a4aacbcaca764fe0bd526a9d38f7e28cf5128628e9f566478c522e1fb201a331788b58ee81133fef361f1286551f6e67a326cb5f29bc5e40d2852e8cda5fd95e42ed7e09901b5944da44f27ac9eeb1d9d823b9bb7f4fc16d1ded41
5d4fd16ae7c4b48cbcb596f15b925f787f97a44ce5225a98e91bf3298ecc4d667779c261385e53b4514c3a6f151f0edebcc26543b36618860082bd7f54ba0b055900d321df0806399055e53b24d9681722220f6ccf2b9b91f4c8c1858e9dcdc60c15c7434d0af3970903d6c661b1fb85adc5256b40dc52717962ee372219e7
08f7e9cb56baf4c0080ed621c4bfdde18dec7cba54d2b8dee71ee90cf70ef4a2fab99e4578acb165bdd8224f9db4722a9e3534b89e13898e711483348aaaaf56a23614cc1e731a2f5b61b1c0630af0aa7ec99f1bbcede0c6e328d7f2f8a41bdc16f1512ad2d17e6d5fd795a1b61865479593042533cd81a308aab5c7837b0c
0e0c886ccde1f288a4a26d93990a7735e6425d035e624c2afea836ce401105aaf98cc2858df78f876c6eca9f19d8bdad3fe96857761d8d53d3cc13fea97a7b5bb75b2a7cc599ca9499c6ef6754d488de3096014750d11d72dd73d02e5a7ce7218067a97d0e083d23c064543291a492105746bd11e1f1e9be154ad4d71de84a
e5850b65edc279b3c2a92575263128408e9b9b6eca0b6dfb08bcbe84e02bb1c9db69712a96b1585dc22cf37fcb4418fd733525f108482268b38b1076aefebcb78c6cb36ab8f6483019ca371e5aec2a15f5b0c0bf14af47d5c0d6d98c82fdc188a9c27edcabb53dfcefaa29de7d61f4d4f4e42059d42ff40f7922eec7e49e97
58d0898ce0abd8b169e7c07c23fd4c34b8c24a8f1e6abf3bcf9f7b494509a87ab9dde706b4f66b8d3bb8e1f14f639fae9398d2284d6e657b4c17c2a060d4188102b582269b564879ba59fbee82f72091b9c0883b4ad57402809811e6ddf9f2ef11fab7145329fcdcd6973812e50702846e3942634cf63525dfd0ef22820270
5b8c56f2f1a7845a0a179a73a284945c5bf916df31cecd3faf1f1d93ab651df9b05963fbd948427ff67a9b1fe1ba4024dbe03b9b567038c0712349b9655599d71146bc8b85324dfcf00ea6486617b2d63b305725d3e2066fe1eaf59dbe0128c6bd47fa61b066f63207de7dc02ab1feb830e08a910c4f51435d590b7f50652b
8fd1c4fe3d85d758c54fd1023b22934b75303451ab26590dddb9e0cfa8d722e607efee87e5f2f227a0254e5ba38f9d312b1842f615b407f1b7079523a57187cae5484bca81a233ca6f34f28aa9e2f6436ec0b57c54a185dbefb8f57cf96a07193e3baa6be637cc5de581d3f77e90badf88845e918f0b302b56c80572ad9000
a4bc371aa2f67482f8aa8daf25d25f6ff6572ff5a637fe0d802db50bbb466d21c9189c81edcdb826e8c62d98473d560be6df82c2eca412d5ef657abfc84031255736452303efc5325b0e7f232235dc2e67a8e3f5b4555ebd9c972ae33f10bc18dd50431bcbb54063117abcb10f0f49b9649b78ced191ff6a965abc93000601
419cc24502858531867aeaa92849417349293cbdb72abfe37d5afb8500091c2decb07d79e8446f11910a9ccf307f6fd4d3cacb097245845eed2628a7bda33e6600b67e4ef4ce02d9357fa92df8794b1d73940c129e6a2911e64957175ff90f09cafdc51a1308b15acaf03ddfb79fed1d1f70c589b66eedd5093d8aa8a33026
37bca35e1ac19ebfb7a6737b1dabcfec2a8cc337251b70dfdf73b4552d149461be8cb8d7db1be646e904aff8ba5cb68c0cb98158f9a1959288ffb63a7ee01414f6880f4ce93809782496e8950325620b06d1b081d670798f5bb331d68ce3e0e245b89c3434efe7c7759f63c59df46f3aaff227125ecc59b244016e26541028
63410781d596af4028fe09d1dc476185ed420cc551ad0459902409cd4c6189d0e9d406c33dca21fe7e00e04078b886ebc014369f0ddca5d16e2dab420a37152ba948e1ec459d4fcc81206f3d3e9b8513d9b2322320da005d2ba1acf54759c550cae4dc9c6f8981b99c0d73ced3c01ff9cd602784de5a685d534de31e25dc83
ac6d70eabb203140a64145979a93daf7aaf028dd8ea491bdaad6c42c7eaf92c9908dab1d543850ebf8fd56a8e88cf9d5e898f0eac495b5f9668fdedfa60845f7edcb0da689c86381a1b3b7eecb8bee3df992842917fa7f097378d02a3f41b04b6f1abff0d09b2835e980db43d78e327be48ad59c71961e64ca2b8e66fda598
e79a2de9e42429a642a6a0d31ef4f6aa7087e603b11176b22874e684e5fc47b8c072d24720bab57fe68eb254e2a1992c3db596b5dae667974dcd4f44a84198f450734682a58b3ade56be31b726fc925152e2043b077c738f209e387345c9fc48bd52dd22ac1309ab569fdda38003aa4046fff095e3f62d58ea0c827009102f
c81a1852571e4e520eda2c7fb414692047b5ef79efcf03e92c0a636b89d3a59398f81c79317f2bee04f7ee9078820519176e10144af9796de58159ad71a3ea6bc2a42825044b66bc3e91be13c44b2c78c4cb93beb874740b8790944260d8c5473acc165ef655f10a0572564a42f81c28951e71d09d4fd736bceb0d89d846d0
25df8b1c79bb0c468d5dbeca20c35a78253cde90f765a580133f5ab6132a298e60e4af12f3a4c0d341ea4378ce942d14e29e876d54f626dbe0ee6bef13d2d951f60380086089e9e3d458b600c0143529b2d2c996f6d6241c7f854fba3ba5fda4b05836351b60076bf1cfb31151a01590aff2c935576498baa98f84e926a5e7
70cc8d7f4d4e402f4e0540b3c664b38c76afb377cea7c684ec6632c6549c3f499990f36f80815a4f0180ab05894fb50c5fafc7317a7a2b3bc814e32c2a5ca41ffa401d1cf8889a2e08ef9b5545f4a441d9a2628a0752a72ae966897802f8086e1fb3eb558c3e69f053e3d1e1305a5acf3c464420428579650c1444c39ba110
3ce49159625c95804d0a719cd4e8f546d6f767503f8befedb2ad7af2d874d56a4acf1f792f9ce7aa71f7467f94bfabac37b2b81d6cbb6d20e646b74775d58c95759f185c3972ffb1aa5bde4973ffc1dc97522f1800b955820abd5d1c6f33ee2cf4eb00352fe2a7f0f02c631f80b5741b5fbccda0978478f5aadba35c019999
a83d4a85254a44e54d4c57bd58215c2611696b768ef1b938d168a767af1975cb13c9a27a29ac5db7bf08c818e821e607083c81defccb989618eec564e6776cc8ab0796d7e76c5355baa1d6e29d6ad0f9dce465e3cf39ab2ad810150a34e227c7d62b595ad5a8003502cd38663e67046bde7417e46b25e5cfe7069eac24304b
2a92b310aca0dbb538d0afb32315cc83508068dd35f0acd2c9e3a3f4fcc4bfb8f11255e592c1ab0cb51be7d0ba959cde7a32df0f66452b42d90259cd6f36c6bd82ca707319af25785d216d13f7370b38a69254a75c60df00197b5787c2f76b8386129ef7ad4e252d1ff6d197c9bcc43343f42cf96a38f990d125adf64628c7
92345551ce197f8ddafa288fbbd4dadb532ce953821795c9b6279b87fe1e2252211ec4ed2f485a3d2e7b97b86d7213d6d55a687147530f269ac75b467a78a45feb5380cf78d3e3a81ddf4f1eeaec08b0ab319ddf55ef8d711f5b6df8adb5185df3aa4cad2fe404c033c61f2de095d41897c356cb4f5fc993fea4f78ed47e15
d03106bdf939bc0efe75c7da7c96afc6a61a5d2d26b645fffdd4011738c9c2d8ccf00a7794b1bb5b5c24da2e109186e993e73f052144101ee2b5d89f02bfcc9b47c9eeae96e7a63a7afba72b44da37238fbf6fa60ab1eae9fe382269955c45e27eeda60749656ac2e6b2c988e7c9a9725b8a2543b6e40d3ce74a353a69595e
0bd04cb8514f6714a693147c46b2758e5f1220eff4d31f78ac4ca92840d96b989961e1b1650c7a708e32c56966bd34edd9f10336bd348dd01a8453098e6e14cf9c88cb71e192c0b3b6232b1969a5bc9733111ae734641c13b9381bb671af38095fa487e69aef1bff1c0b7b1675961b26569bb9773f1d635250ada9d28a027a
09846082897a501e932d3e6fa73aca02b02454d31af09caecb392f565dfd196ac27095462e965115b05e69441a5f7d2e0cff89bde050867ff849fb8c0aa830e7b9353e1b58e932ac8e59769b5916777f25ba28d13d436b0ce4b3fd77bc598327e974cb7cfad7871ccf95f64cd5c85f77be6adc0b9a696dba32b74f4761b944
d8ba227aa65b9f1dc7be4c83a070b3cdd763c37a0c0e594df11958cea3059e129b6fa0511ef87b3fbd390d05942475a037d60778af9241647b1a98149e38da769c5540a893808dbf8648ab446f354291194d8ffe8589d3ac4c517e88873a8caa7cf3bc93ee68a1559ab1070257da32d375d9e1072d4d4bc926676f10241bee
87b190ab7fe16100283ac5e0fd6d17a7e5ecd300fd220532125ebc847b16fa4c0e981fa39bf32445dda2f26624a993a6fa46f789613f0ff6a203887fedb487586f3a4b9ec02f4b669d8ab8418651e15883355829e923d18acb513d91c49994c7230dc4217b35b545114c7a425adeac57ed0a04c102d0496a477cb0a03f3269
6a36a78eb902b95a429c4d565aaf6ffe4775078d257bc687662100e90ca5393c0aeb62ec4b8ed3450806a7ce63ece0879599cc5252b2f89c0fa49121bb0697e3772555b0ca7c679338f4b74bdd1869e6610c69d5a319353d2286a9e75225341376f54797aeb6936c1ccea9e8996d8a36046574a79e0669c16e4d359e8b667f
48b0c4bc9bd4f7444ffa37490922cec7b69264046ecd102157c66765a6df327f4a3fbd90b492448b2b4cb60ade236bbb5d7651fca4edccdffe6e2ee584264c2d842c7005e7104ffdd8e9789edaddaad85d640122446efa8a6fedd3b7456f70577142c57f567c2e098fd3b73180af6e053b3e2c367041f54cabfe5808c073c3
53cacb5b52dfa45efca5972cd60cc0097e46aaff79b7a1de2c6d7d1d2ac115ea4c9366f20df90d58f7261d93eaa2b22bd9375d7302d9f1d9f5a1f1ce88b02e877169a03721296d14aca5b0be2afa13acf1f91e1d7933cb43b2754127730865ecb12051cdc1874610a1efe9c3d888b1a2d6f72193ccbdc85bf8d63bd71d72a1
e8aa7eba99d37a08bf69de26106b89bfd31696bcfbd1eb81e6180b9849206efce1cda7d88ed9e8746b8c2883db598731d32ad9497214fdd8fb047613969d3e7b0aab58a7a6e2c4c2c781d431dcf04e9e50453638710f13859eced8967141efca2dd55520657599dc23eb68a1e5a110cae21a5fb89df066c2f8c04b12558ffc
1408f07efb5936dd149f88acab1932ab2e35aeafde44cb31ebb4224d720477a3e997ac944dd76509d157581389b3e20097d51bd0b5a7a8e997744a1ce29f95c45ddf7065f8b7e105ffc7c061fa84641e7ebf4cd6951cb6d9ed1d3ae9def76f0095b445440866108951bfb2ac9852b1fb282b68621f63acd433a69bc376652f
eb1f310368689664edccde81d66ace461c7e688daa88d18806c17402ffebe386324fdfc9ff362ca506fcadbfd242b3b5caa6f62c1684b6447ab816e6c9367779aebf593de1d073e47200c523e37ea67ca2e82dde228df7eb0513cbf977b75a4bd91bbe576b53061bb0114d3b843819072f7583d84e9db69d8cdc34539d9715
d0fd8f60fcffc3131706b0184637785aaad44776e996818dd7850ec73570b40692eaf9282a35362463e120ff2873d5c82fe266c536424a5eb172fc9ae7a200b77080eed9fcc1876f2add5643b6549005090b57d750d4ee925aed789f1f24eb2ec5ac0a2174dc405c95b0b22459c35d1d68e07ff4c75d6da4af5dc3098c285e
c51cb51e1897ab324e2aa37ba6808a5c5add7c00ec6085d9b93733b9276fe242247ae8b6360b756f8c8ed2d24cb813ebeb0955061e4d67b004196e23e9dab3460418fe396a5a817e2c365cee656c89572298f5c760c056ab7eb1f3b8af41849a9f4dddc2311f8128a76f635ff1eb5920e20c5bb70251a8ae27ac0990467f3a
f451be92cb5e7f000ffde757412a5f0347cb1890af0cf046bc5d10a48ae9795e21a4bdefff4906556f3c84364ab96a856ab34674b067f995848993c6ebb18e5de7128cca37feed4a44c64ddf31850fa24efc272a0f7d2cf60a7e454e2bdcf10e0b2f32bff29ffcff053781df6ccf84970ca5e816bd95fa4faf24918c21a0a0
bde5992cba466e50afe99b0ac97d8db786bc4d387c2ffe7971038adf3c605e15b4922a78b065c418534def7d512146a1d125220f7a07bfd4ef0055169da3f930d8e3ef10f15b714c6639f26dbcdef78509911c04f27b7614b32927d5fc47f1d5cd8fd93aa6a10b16b8b0022bfae363cbd818d921120184213b2acbc29cd131
967fa50f01ffc4b0d2fc54ba991151141d717a61e2ba0b21d01a9bb61f0960ebef83a72d85d5d8a62df5fc508ca1225d45b10801c8505107ef7b7fd0eb3e8e59da4335391a2d824c3a2ef7c9d31f10f5c35caef6e08aa385f5c6069bf579de182493eaa20d2bc937e31df5b4b554a8b3c95f222022ffd0cdb1e700904e99a7
c6cf5389f76d62f6ce70527bea8c054ceb998af57e207a14e5a2cd932f047380a93c8efb0c6f26ff17c41af9dd770fc3bf2f2dd52d99037ffc856c03a77c3e2972f774175580f06c36d0e1c3533d38ab5e986bd8c95e1b7a9922ec1b6c77a728fd9d947eb343dd424a89a10ac2d25b8f975d25e4e81dcfbea0c3453301c8de
dafca9aaa66a268cc1dc967c0e411970c13b835b46f1bf0dd69f7fd23b21e27104ebae2a927491c6ced5999689c44f0fde15176e61f765d8691a16aeb196ab749bfb17e5b6ba665fcb5ddc5ceab495d3295a31eb3065cc5870e3a4d94771605ab684cae154e6b8417ae3b763d41db0e8b2a4d7c67ef7111714fde9ae78bb99
63d6fab036dd5a386f5f1411374a0c4b7e907c2d1aed7119c3d0acb61503f6bb1dc7e0f27b244de8971ddd85ea694d5b437c338a2fc1e60788403a600fe835c573887ed74bba10b6f31d1a586bba0165dcd991ebba4768177f580c8605459a850169ccb114f15834fb70fb7f108db94e4928de99774e552592d9aa1c628784
239355cc9a0b8750a09831f94bf336e58a2b75f7a19fb5e9dbb96b78376ea1e757e0f042283c01b5d2d44279fde9e45f8dfdef048dec7c7b4aa1eb159fdf67fc68171d3a7a38a657e8aa229acf0d5256f4fc0aff98352dc130bce98c77c4f0b4cd3cec98510237f3e1135446254fbfe6c5ff5ca74198fbb93475f24d627e95
3640061762e2ad5f468a3f7496e81923660dfb96982fbf6938ff4be0a0b4f2f01fdd9879c009f6e6eb32273c5bd244bb1846d3439d260c6de7fe627fd74ec3d7574227b42f833a7e83222f9654b7bcb9b468c35ef633fe2c0687513a93eeacd3cd802474ef64afd140efcec987e8150fa857575545035a24854fbbc70e9e41
72d9161e6d4f4f5965b94db6592471aab8ed55935f56adcacd00a37e1c03085eac99045c8723f594259d7bec237012dc3a2870596e0b1a04f17690694d98f7e87249aa2ac5738bdc0708c542c70d603882d28dea5ec231012ba760eb8d1ae4bf6f80e6436e877642d0efb90309e3dfbb3eb35e31f1e805366bdc9a31971e76
b25c7dd2fb77d51ef293d5d7fcc28fe06a9c1aac00afceca8bae5952a51a4b8be98d4789dbaa31e13e31a7e6646590aaad31947d2455b643a6d3d9117dc68d2a0f21b3095b81d29a3f37e409dceecc4e2731c6fae92840763377c65e417b1d8f30938000194eb817f2e13cfac0a1b6d34a0b9d1bda9d990126ad827509bb49
d73a626232e5e4aeb38321b4055c8c68174e01bebeba16efdce6a1888c777838ebe27cbe8f97910edbc29f8cd3727ac6c329fd432a63904291b8a73a7c35d67def5998071f157f26fb9991306bca337ca73ba743274566c6179f4152768a411ea0e10f35ac129c9110399bde289e0e2ec164c6754c254b5921c6749ce184fc
0271402d00cd1e31f92e28d2ee8b407494cabaf2ec4db9fcd22d0d5fef6e7430f44b333094ac8fc19189970ce66e169209b401e2a86e9a5402e44730674d81f82f434edf64a287e113a4c3fb8df51662a6d243d2802b81ec21c360eff0b9c55a7ac291a2b07d6a7ffd91e2e80b61b219318e691340c8af313ee3b77a88aa99
7f410fd58aa5df3f0a48bf8fee158cb9f49784e665b350fae37c85a8b2b906fda006bca368ec483df716d39e78c56887497f05ab3f01016a2f2c65eb9fa5dcaaf0ef35f0880b0024d458a6dbbe36c4d7ef91b7d641b6b44aa6699250ad3e3474800fe755151dd1b7900fcd27d82754566ef27e1e5d4c88c026f1568cb6a342
f0de0cf940d43c4140cefafdae1781b710e4bf26fdb4f1fb835b375643839c7133faba89be2ea761104bfd9b69d105d742244c3f3b7f1838136962fa14254c96f6da5fde3fc2c99fab29d21e601d46ec6a60be57931338d678bc5f95b878f029feaf15304136a903b59c0c11bf08920be7477aeab0ae6e3f487a2ae61385b0
0f9f25163dc3ada373217f6d055faab14eabb095ad053b71ada7d47113c153faae6f37ec49e16aad64d48faddca2023ad927074b9ecd8293a6eb04dd4f57a319a4b4590a522213d1fcc06118426d7ed3336fe8fc65093319d733f37258a11d7d758f05a9a4a016736e82e2570cdfb9d1d5a7e65283f188fca6c4865dbb4afa
8365654aa27d02658c47df7d479412a367e5d5d315602658d783afe8c5a11f85c8157c685a260b0ec16981949b758226bf9079e806a6ce2affe284d3290f6a97cb8c7dbf3cf011d3fc86e780d79386e65b851c767ef6bc13195c4438834c0aab3ebf720287af5d2687aa9da2f2895b5a4823dc33b4a553a42562e83c1b246c
d2faa0992ea19a20ecfa52152a403a29caa1dc5ef09dc5f2153230d84bcab9af244dff083569056634f2a2ea0347e9ba660d49172e09894bbe3adb591453d337cb35d879084592ed6a4f8cb5d51fade728781d8b3d07b5cef7a355ecac8d2d13cdbf8ecc221a100baa7f209686ab89d3fef9e6bb67c38f3e854c3807bf4bfa
a20151fcaa17aefdfa992ab6621d710f31c5e1930e349dd8bbb2af2ce8557c12e493a4765119d2fed307dda4750a3e326f0dad5ffc14c3da7a8fc3f94c1eb4e07160104f3af33eff4df3c2cc75857791713bd6b81efa08bf2350a1964976dbc0066176917fcf29ef2cc193e8519e0d1af1463f3717f23d8eb2a7b7c86fa289
6212f8ccfb599c3d14ec8393e5cb68848921bb5da85238c6362757f9aff846015fa94b752105881ccd5415234dae11e7fbd2a3ca933b5b7961646fd3a8d4b8e380c3d7455468e3cf4ab75ee2897c26f21836778252be1cf679c0a5a244d64b8cab8701fe2734d1da1701fadef2107ea04dae1342dd7e22a32ba2fd52eadea6
a06ed6ee777134995d1a3e9d6aee8ee456caa94967c7d86eb4cb8d215abba58f065df4c85dd2919990a27dff5b977bf7305763da4a2c340194f85b4f7bdc40fdfa6b41a8a90e9aa8051cf433718c6318558052596628ca75191fce23538f8d7ece29bbf9dbb26b9b37878a2393f0f9714009f5d06ee6424ddb9689acb36598
9cfd4c511800a9fae344c891085ab120733ba6d03d546b9d43ce4e37461504623af7f5ecdada117005904cdb94489bede5038865564caa0131763629214a727d82ddc319566ca0f94f56e1171aae5fa7c9bd07e52183bcb2724c0ce1d9f059c4951b28c534d63f193dfdd26e228c7f7c8f1ca5b70b1b725717838e855ac809
7e9120bdadbb9ada0bf5c4adb52b554b098185583e7ad20e11a99c895e515d92681eae40e083d913b45bdfa7f81b2af21f94f5f487d343b0bb127f440f44565c3f97e017c3145fcd35c5a09a521548cca7927a5af3b46d442c43f6e1f457fe19d5f7b1d5ff81cebf0c1f6ce60f068032e522cd7aaba591624e046f2841dc06
6748dc6dee32d9b8aa052febf2e18db12a422ee855cef1f086ec8339225d876ae106cd306daddf381a15b1bce13ed6a69f95105a61c505b1eeb3a31b94218d47f24777e791cebb14beabb554082d6f86709e111783d1d92ae27129998d1b5f8dec6f53b9341c15285103237477e4d80ec23bb7b76b4a70ecc16608d6d5f30c
e4589e9857e16c695ef6c4659b4dc55c6ac043e3bfd85aab654b1fa5b6f2a6bdd18828ae8efca0a4637c296a786128b7793c45b124a6f7d22b8fd7b943f874ddb23f63989aaeabc2c553f1a0bac1e9ca62d2e92309a2e3f8f2dc9957e10f3f91589e3bec4ffbc6a7f5a0f08e5efd683453dab94dd3804ed757e569bb54e5c4
13384151dc2481598f54cad9fd4377c290ba46a74cd142413f069e2e2d56d3fdab9597806978c8f702e66cc0c4faa0ea77aa842617ca4a9e71097b3caa098cfc546c7cf54d2c11ce887e2d9cc12549df34aa0ba54c4babd06fce5e0cecc99ab74886873e4755196fc1fc348de1758c98313e7292e1498e807a5d3d342e3faf
0e144116b11f0283d4c6d89cdb2a2f9781249cfaf414d2d5d69b5c1e6fe7be8f2b61126c330ad7491e68f575f64f5cbd952330cb394b8a0924ed516bf60a11f92182bf75c605159e91cdf371144085dd3918233f69b6868f274878625a3d0fc920a846dcb02882009e74b3442fe82f5784e0f9557f9869d050670b27822ec1
944435d11a8427c01f35161f7d75b0fb7d0ef93bac1f73ecd6a472fbb33dec6d300e84c3be08a133fa8e0b57c1251130439447a17b55b145e0fce1bf41728748be2a450e15460d99c8fe12ad2679228a313108f7820899c04f0be8a84b5cfe7f17b0b58e8b35f4059f60570c84c8cdbf2c16bc72ad0020258f9386d5e8bfba
f081a9c4df482ed69baed64c610d031495079216d9988c5fbdf1682c8957f08b9f4338aa60f5644ee373ad9669a6bce1e8caae702fdc9d3e3ce155ee72a4e9dbcec43e28aef3e9b9d024847afe08af7c0763d716e165b9c68264990a5e4b4f2b341f42c6b4a2b8834b2ba55cf3825a38eb9ebb7e979f5eb83dc20171231977
b47b00ac51e9af41f2feda9be5fd1382fcdac517a8e1c1dac15fd4f72caf7b51dd2bf0b2aff4ed9eb48c9140d210d7f29bb2b08c05ab85d17da4ef911f17622bb8e18b8236a3853ce861d9791fdf02c58be5bfdce6b5d0ef8f14778cdcb96b9cb9fe0e76b6df2374ad7fe3b97300d1646d9f6018a38db267484c7eeae8731d
a5c6f4c89ff07366af327e9d2a67823b1b17985781df42ce397b8f24c5b82d11c3908900bfc9eb9e0e98745c5006b8fa55e608bbe7e1e32ce5080e3413cc97f86990a5d514e4dc55cb61389a0f5043f0fa3960704e4bcf7640b30c30784c376cafe0e3c1fc357cb8f9b8067d37b40f5a102f2f2c767264741fa7a4daa677c5
0009165e9a2063d147c5bec9e0270fb5c7793b2d8408b5f1931a50c2ba251f46769f19bce7f7a0aa494143763e6521dc63b7efce70ad22cee66e620d2a13eb51113f50a4257ff76519ee0f9062cfca13b35ee4b235f2c7829a49094622d7c4b7be7d5d4f020326b298f92c61d4ec4e06c7957b1d7681cf5e85b5da09b7bdf1
eb51ec1d69b7642b0e5c3b8e78d3b8149b68590115e39c0a5962b9709d34f9cc8e6fc2d1c71d51abf66c7861e407399c164c402c2d68b38fc0f148eecd5f2fcecaa12d58fdaae9f5d9284b6a712252096704bcf95f7d5dba637ac73ae11ae45e364831766210c3ee7c9f9c9c46164bf3c1b04eb68ee062266a6e8f15a074e1
6514955ae446f03e810e98f48f50f6787abc2deebbc26f59d81ac22182c70d6b0522d0644eef125b591028ca601d37eb7fd32978e1ecbd86384510b404dac9c37dc16b770d3bce0d0910ebcfb49787941646a84b1eb8bad70d7aa8187e927fd455093c6264eb7dc57ab44456c945ebb19fb56ad52356196a3741b8c5f6cb15
ba1513e80e75b96753c95082c353f4894bd244f3fbdb0062b8149cc89b7d6b71a4f89428ad2e6b41b7090bdb095017b422ebc512c206a6e3a0a891c4f8dc16e93fb18e2e41c099f0ab7d7f8f67c13361a77f370b61dbf0a3827afc86a71a98b41b52cf63d7ce9b6b8d82137837bf1d8b7cd6b9169ba9734cca42cd898bd7cb
61362ccace4429a9de5f506a904768c9680d188aea08be9e4da96a3717573677061eabd127428b05fe2cb491266298377c6de91ccd70ced941f6470b8806d62b327d3ba56b1fd1077cc37538dd5f971b4e6c80ebe8eeb07093df6e431d2ae3252abf4b0eabddd726d61ed35a44859b4f21a91e6de740d80c792a11f5c7d834
c3621e8d2c1e3b4b00bbead2c8552d2689872a4b9d9df980e303cef1d7e9a1478de0e2351d3f536ecc1b0e216d08ebbe0c13663813e9706163b3a34d22784118801b307de738952bb3376e62c07da8053044688b1b37d2d3444544d5dcc7ae8e03c77d5c488086491cb7b51f63b838e59229724825562034c084bc08ff554f
f9f8a134c8ac700fd70a50214d499f339b28fb30c78b9117af8a60454aa1d7f98754cf419d435d7532e466fd25a187d44e21291d3fe6774e0a94ef9f612faa8656e06b9f5b1cce50799f7738dd2bee7c675715e8939a96f136ed218a8a5ba2fdbd672b60e132114862cd29655d32e8c8fa66c4fb10b07755cba0696f97a827
4f5928cdb2518aef55018adee4dbb0f03850ff3de07c8917b27357798caba124234a3030f821720621f1d9cd9d9684f77610e396f7b85bb62dcca87fbffdd80f843396ef4e0aea588655ff9178c019ffa49e62b2869e5b43bb7456746214f0c061eab82f0caa497d93fdd8b41e938ae6cb2bd027c96d69fa13d0f4517b3a54
dbf7746e807dc365cfcb0b895ffc6fa392cdc1c1816595d36162332eec45746282889e1df76b1418f3ae5b782246caa5be534eec807311ad72dbd2b0b19716ee787c2e3e5e04cbc3077b4d3f19fd69df8f7440463205df64d7c78fd794aac408c471ad74bb3aafc688537d440f7b50a36f9041ee8f9bd84bc855386c891d31
cfdcd73ab63bf185d3c6e7d515a70100fd6d78e8c8ee46cfbe98a8bc444b2a09d0ff2415742906ebad36780eced2b2251cb4603a8bd7100f4320e6c523dea1df72968c17ce1e64468a131dbd23142791e26beda38319e6ddcf4e022081d92637eea9f9af885caba6d90e8ade65ee255e9b762e9471614e036418f821ee4c91
f91bbc6da6845ff782a06e09425a00faea2d2636527a16ed6af7b19c3c2bf6c20251e7dcc6fb11e45f15acbb30da9a8eb2edb120e9a5f96906b0fcff40ffa8c803eea3f256c205c799bb2cc7b10c236d3cab0b903c55d1075b6a44708d78c83cc837725242d35ccb8772bcd84fbc0a064464570494540cc4b0d7053a8c9dc1
df8c355582d77b840cc67e07a91da2808f8285b734bfe492d5b35a337a23b6ebbd78927d12df8b039f583e28634ab164381321e847aef1c73e630ffe835ace5e735ade0c8f931cf9dc545fc28b00352c7d46ff7b2fed39189f154703dc7b8f090ef4ffbbed53dc757bcaf967d2c963b3be384e207bc9bbc502914464930357
176a242143c8f1df12d62ea09bbc43653eefdb0d90418c564da5afa82688f269d8b4c5268283ab9e53f07b8135df34c26741f63dfcacdb1f6153fe6f3dfb7faaf0ff0416e6ba194a32874112a265a5ba79cf53e52d215ecf2ec3de640788b3b83949b1cc8ea6d8f7d770867963c7ccfaa99af14ec1954e30534bffb70ce4c0
bbc560ace557d04ef2c11b16e8b9d08c5c817d2a76aac814dd9f65bf07c41320458f6d0f42312a653b524d2d2b69fbc9b32bf9ec8dd1374787a62cdfe9fbebacd23e49f1b40c482513efc75e59cfa7a520c5a45548ea57b00188cada78e01601616c17a4ed232896029c32f7fcd3690570cc27b97f788a60aa13d2a6a76b49
b364e5841de3ec2719f648674d589670135c4fd1d1ce73af888e5751d107ecc33f483097cbe9b49676968917b98dee51f812de3c96f7856c113b59c5840bc4d81d51d28b21411c6bee1e13062d1db1f92639421bb452ea09c028debf23ff408af2a0f7cea8dcf421e92565b7b133f80ab2fc26d59c3c5f3fa3b76aa9f9078f
60b34431be75cc5c410d8e6ff13a4ff1fe814e96dcd2fd82e8459bb709dbfb33561bdc453bda51641e834057f7170935cdc91588a8aafc5252a7f6fdd06b580c3a67a909f3fc828b902667bbdfb4b58e9c4b2dea611e9c6e4a732633350881b47ced58901636d572c9c316bea2fc22a316ee272d36a368f6776f0312769d37
6f0b01395c5a84e906e1828e39e075ac05d81c9012e3166a7698b9fd450c7710a0d0a887aaf239532145fe54911a517454aaa6a76ef6fb4edeb247656c90588f44df3c1d93b387b75b617700293e141fffdce6364266aedea89e2ed9e83890da5a30da54dbc1499e28382d7f1f26d1fff8a4887ff9554dcacb2082c86d04a7
c72fd09bcb1e4014be2a1d5bcb8923c7fd41ad402682979c408a4e4fb0b18ed9ea760c388674e26ca957ddd557ce34aeab7858c648d1f77837f681f2e2c457cc16ea5bf14c062dd666bf4e63dbfd9635b21ed71c185b8440ae0b8711878ed6d265ebaa7efc830aa4ab1ab68bc09b39e1b4c1d780722c1ae5627e1501a80a8b
c38ded600a9aaf8c32a6007d69ae42dfa14d95dcc898c9976355f96d604afed0b3f2e5b8b78aed65d005546cc3d83d13859ef6d1dab2bdcccce1810d5c249c1c7d242107faaeb7e68319bb1329879415f7d1088a8bb967b03a074a35b88b2f74d5a694baf43eb7912b013ef5356907f912e9dcfc88203bbdf75072d0058ca1
1148de131f8613e4f1bf8de91588f1b3363c97fabc9302693748b3319c296762c2470b5f8709656be1af9bd99cf4687e2702bc9814831a22494cd059128a161c1cdd6f0982cdad3cb74f881b127a8ee5b527aabc9ff60e169926ffd902ceb60dfe4ac56f5ce16ccf124f76c2e97fbe1a8d2a2ebba324dcadb242613b14bf32
513d5ea7701748c559cea7fb1badb3c7e4da7e85ad36a25daf8b199d04cbb37f72d6ea025b71a90ff97228545d7367abb1af472b8f397c40ee1907411f46fbac437d3421781c335c888f709ae1c7ebc6672f9a6d7ee957e0dd0d90719c1077fe0087a5cafffdd7b2a0ef35a4b8506719a9dea142483a34e346ab9d63ec0bdf
292bdf3b674d2e6f698186df6558a44227729528ddd40281e40a02a85ca767e4a4da68d5c77b964c7492060c6323ad17a23410814e644439d90655c6d4851cdde3129cb7bca320a5845fd56c94c15a80570e2eb75274cdcdac1a4fe376bb765542c181c1b4a82f8cb1658af8e149f4be3fbd53975fdb1547fe9e00178f0abb
c3002b659cef68d97919a52eadf2020a036c45d50096dbe6982c56b966cb62a879606fc4a24fa00d80234c448706989c4fc0d581c7ff14afdbf1a4b1170e015e26d398892eec46cc761b98e7722f59b0d4874b4a1ad59da7a43134541da808ad3c411b9e52928e31242447289a810cd34adb0981a681714d0d0d5c9c348496
5f4945360338676301d2d4b7b7eafd8a1b4282e16ba505ef3280d46ad45ad373ff49d2f42035aa966f5460b270025f6913401c57d22d105cb18af4684741fe4be0337866dad5109031f65dc7bf4b556c0664198145a9403b38818a1409d23ca7793f8cefda5685ba39bc6a4d7bdcb979670225c60d297ddf5a9f51975fd127
4e3f945b940092c223524fb91eb53de855a7fd71417ff1c77e25bcae20944014194830175d5f7df8b7a08539e54ce27d56acdc19b5613036c21e815e1c085fa879837d9eac3dbfa60c43b717bb264a1c16733aaa29099525e6794f326591d90f874c040444b50bad02a3606ec0e671b7bc15b753c8fda78c48382297721094
397e739c254ad43a2a843f36dcf9befb374d0011fe1b76509b4e914d60e92a6eb4c9cff2bae6d5aec437232d3cb49ca99aa85aa1d63c11e53efadf1552ab12ebe9fefcdab225934a7c6d67eb38f93a712e90b2d8a0c8be509a37a6d67865087d0a407f54ed02fd02bd6b72a7216978a2c0d18bd9aa3aebec8f3885bb182b39
09751d20da95c30b14f1b61bf8e6995d4f9f4bae998f765832c0032642d2d0ea674d81f82f434edf6057e3e1ef5fb2bf0f328d218a10ad5210c60004350ff5d290f0e3b4325384381be0798e01bf481796f8dce9087fd52691e5e509d0542f6130ab735f6fc01303e8b5ffd7ef3b07a1cb5ff1a0fe03c76c7dc178ce7b4294
25a65b59c1f42c17a2bd471571c0cb19b74971f104fb495a589e916d97aafd621994f9a663a965bbafce7ef0057b12149c2358372fb2c7b99f47ee72120182c57025f9579814a533c2f72d6a9fbe724f1886974ed8623ed1b7ce1f253b724c13c84098ad1b234fe70e23baaa79e543624760621d91d510928599615574dc8e
d95a9268ca54e95e9356d14fe6ab000690fb0d2e186e562c7a10306f9bebe0a1725c4f8e7b8c491c99ca37520c8f9c99bddbbda5f51d5a90023e44f844a7852ae1a7554122c40a1561cafcf6af5fa4159eeddd18f2754ee85542bc6490bb221b083129cd3a653a98ac75a9627b1f97f3acdb1fddea2d5535183198ffc71cd6
2c41a8f9318b95646296d493c9bdbb488713bca7d42be702a0c2cdddf0499cc12715940d7e7369b423862203f21eaed98d514b7e7b8b1ddbd0a004d178fb6f202abda6adb316533c7a7cc3be69c9ac28de7960552c38e22a721e3219e79546b03a6df4eeb9404847e753167a19ce4e4869dc55d931c6f54bf1c45c42b94c3c
398540817414b20bb97df4174f1c421dcd3928c847380b732e15e77e21d20757243695fa11c3c1d9896efeb119ac88af38d789e1e2d0be91f66008ce230f374097591681f9ffd299090b81610a7d9abc02a7faed25b066daa855b6ea37d5fbc6211f06b84ced2dfd3f249e045595e55d28a4b0d66080085e275497f9d2bcd3
dbd5c58f759baa2e0282ae1fb13c1eb23a61b0bde7580ba1b02b19c48b95aad1a880dc096c236b97397533c6a34523e5895f2bb6863341f23a693187306b06ffd0fb425b5d19bb5fc240479e93188baa2183136372d944b2de3a2e1f96c9543a8409297cbfb654fa0b1f4c1624370a527211e058961e3a0fb93bac4bc35533
9c41455dab76ad9e52f8f6f1c9c637d955c3e72f4e2307cba8c53b7875e06f8978a38a555363046562897109226553aa5562570f124cb5b3530f4adb3c281396f61210828279fed6a60208d45cba27859b68070e4b1e3babc69f2fe35d1959142a179890d405cd307c29b9d92f58bb5d5337b33d8847e25d277025608e0c72
2a4b1fdf712fdfd541ac951052017b2ebe33eae7688fd065529c4ea117fac803a23af76e2f5d9369b1822edd8531ddbf09a8cd80b8333c14f16967c2f730b0cfe76070d723deed832c4bb9849530b2552ba220a9029179895b07f61d947f5233b3af67298bb263dfac4cda59d87a00297b077eab83ce32be3726a1071d44aa
707ad2510cdfdcbb5b55e95dd3d9554ba1f8485e2bc9205c13c36d979f88a5960a3fa231cc37dd017a887d831ce9b4163096ed98c7edcb8ad61e8eddfb55427087d706ad642223307e9d2a7220bec895f3e32caa83812c75ec90cba91adc4a1de1fb9633c3baa5b4f55a768d2de9916df590564acdd7e30abbaec32a6f2b54
9a5fdf07c41c39ab6e81ebe0c20cc4792502a7a1aa1fb0d612e38e889f668b312c96c3d3e8915e157320bddd10be5cb5cb548fdd83ca5db559293d000952ab4d364bb409bac0c69cf956218da372be1007461280f543e067579a6c0ae01f15f0625b5477563da0f1a43080d067027a0d2cbdb12edc0088120f5c30552aaec9
6f50ea87106b0d22a9c0200281ae582cf87b9626b33ce178757046970349eb77bbeb399454b87264fdb6fb3f31816542e60dcf0cbe431b2795e033f7db6681d0c606362501c070e43bf3cff9cffff6d3263fa8b7fe925fb754650e85a1dc22dbf2f95d8e47e59d4ce79ebce5c0a0935a0afe99a300e041d44259a698e10639
7eda28f808110197198c90e23ec3b70fb7111bd09b48a347a6bd129c8a0016febeb60bd2d70d2f1880ec582c3f8dc6c97abfaefac66b4a90ecad316275495792288325e1552e6510fd62d9b47e86ac578ccbf909518e44d71b4a15a0f9afeb9eb013137af0d768d74e45110c62b15d6cfd645e2f068d1b66d096ec5c56f38e
f81423d30dd2d15843a7d9ea4c23b815b962f14a8de7850474df33c69a423ff2399cc22c271d2cf290d07c5b7a4fb2ba02dcfcc781b13e773416315a9213e147ad368a83bb375c2d97566673f46b1d220e6207d923193bbaf74b4d5c35354e6eff967efd4977700b597d06839024e5017c451b03920551abe46c4eaae8a9a0
00f4ec78398ae6e02c3cc6a5e3165bd7db7205d63d170fbed3427499a514aa3b8f543a5cd49354c8895aaa3e809a96af4b255cc1e8f1dc6aa5025f314bdc5623f47e934a6e3c7f3336b0b8ca867dbdad60f6684de4a1961ac369af1121bc42e6381b488e0ac4a07817d6b8a1c0821647dc30689d43a21f05bc0512707583fb
8ea61250eba54b788a360ddfd65708ce0672db07538ce41476da2e45f5d4c28dd5d469d3b775790afa7d61eef5bf3a13d48e7afa00b9c7874c114c3a51cf9247b26c218bec61e27b5a91508c2b1e5a6bb35e4e5838ee0e7e93e2ff07c0b60c3b88dd4171f0545bc9cece9b5841bb7e0a4f258fa4e90230cddd0df3809eeae9
4f2c9d39a7880e7d4da7d3e15df88e18df5edc6c4e51bcf3f369efa3348f9e2975b4f97a55bbab1082bc49814f78ee92d0eeaf4d8432b6d9431db5867ea2cfec9210b151ca258292f64658157bd195b9ff3002e13bdb2150debce0a117efe864306176fec09c92cc0bf6819a7ccd8c45d25927ce430216415d641643293671
5e5312a2c35c69f43a8b83d581c43efb52cc33283af8bdfe3ea0dd5382793a06ee63295772e86af449427c8ddfd6abad64b94ece7405b71e07c08a3daf39727e51e1b54b2bd99c91405c7dcc8468b049a38647ee5550af1ea7706a2460d42197e83449010d065493698d84ed16e5a48b7a0d364cd01e5cec3d38715bc8af48
a9ce6f0533ffe5f8bd99d36fd5bcea7bdba53907410bdf637e1a4445a669cc064de31b0776aafc347fb79f983ecf027f73ccb2f90969d391fa8209df0ffdbc51912559a99988b62c68d1df4e2a69aefbbd73eb4dd41a3f7c36ea892559a5944ba8f214bb798b9d8e869268b7ad3c458a681168372bf7c3e55660c04e877b1a
5359d9f06b91e78139918aad924128cfde708fc1fd27f2b601095b8bd9804f0e109c142d1b93eb32e5cc5cf0da1170fe1a16364ad87b1d1fa667e71e8fd39e1299845b2b4faaf83c159d8e6f0d3fb556df5c388b2e6dcc4b0bc7acb129f6ae264ac338922194cf9b792911a16bb49240bb7a718998a48f4491452deed033c0
564100218f6d6feb5e0d3a513ae4d2f4bf42f3e2e7a5a90cbeda64bce4148d31d2654e6cb3223347d05d583cade5070c7e4f3b9d477a523bf14b9cb8dafa40b9192af51fcb9c3fd8b8d3eb21334faa41b6d8855cef22bfd12bb503a4dbeb75f08d9562c42bfe38c3b61ebbb53047f085ca53dd2fe93ba73b4d24c3a5accd45
aff5ca461f7f6102b6ecf45ee981a505c27f2f373b7e5fa5454a015a50ec0503f0e78e9b795a66825bc3bc1eba6475d555035f401dce63ff735112d94b3f4fb2256e3c8656a29d417320dcd336da53af1b4d16c7dfc8b36b5105cc890e68238ab329ac756bcf2d5356003a2288bb9c1cabb764e8c6097b53b22ac425b620b4
65bf204056e07f53a19f4c40af34afb5801a60522ebeb78896ddde088289253b7b33194956b27baa38bab0be7418b71060253cd06013a91cb5131e3282ce2821d76924d7faaa23331bd1e9ded8864c0c1329e923ae160fa154dd06ceb962b7813f66cb1e7d4ef723cda269826a299de14a7fe3c08d443ab9c3bee2c1cc2b51
dce1121653c303cac826935988a821c74161d51465c3d690f98a04141d177de4cfc703edbbc03df532bb2cd4d01a691c372d3a59b68e98865349ff64f727bf17a815f5ed4d7e571d317d191aa9d0287e9c2421c261cf3e256e2eb30abd36632153975459a9599b39aa4d62b406b14749635b5cfab9a616fb87cc3a199a52e3
6171ec238386ff6eb519311fa1ba4c6fdcadabe68a7e13ace16f825c0a411ef00fc8c308ac4689300a478740b5cad8ccb2d8b50e9bd56e8c4cbb47feda18b12678c5b66cda5cb23a8b820daf8473c443da97f9a545ec5e0e50dc1ab3811f1d371de42ead77301fd9543228eeb401e86ea8b7f0f8d5b980e761616042f545e1
a500ba351df2f5fff95d7f017bd61be0b5e22437944e9831080237aab4a41627492163906656338f6ab91b2694431f48df8a21cb96b595754a1dd22aa99dbb96ded90c421d2ef358ea41318d849c05b0eb85584ce616aea2e148f7e6cd5ff4beea398ea02156ef0be2195e9219f924706386ac60b961d3d129d5c0ab6e7872
fc44caa344056a07dcf3048276abadb8ef180c766a1d18298c29673dd8e0681b2173fcfbbf09af2dc33d708cee2596b66657d11e0fdcf90d68afc37db8eb495ee3ade83e1708d0c8c812a01340c33cce2f48e70a97a460915905cf9f13af1d7ffb32109a7f6b99d34496de795b40bcb5b7e0a048a1aea30e5e45fae4e9d59b
63044bb643e032c824696a22054388ecd7b1ce03ede274b36c3cadafc3b506d53342f86447162c9aec37ddce121714fea17f6e20ff077ecd978f8c3ebdaa7e1c057a939007eb9d0e1b549fd0660848599fb815f328e7e92828b0ee2504c6e2b5a239b2d4fbd465b926398dfc068c90fd1222d8b4ec10f2ae8b3762de2ed5d5
4fde35812c14f8bd5d67740d7831179d2efd2936c1b5061441c5858f60476f4fdc0dc3eb0fcb68940b3b5b310e146343ada94fa6218aacfd739f87173834e7e2b1e5687bca1731b372899f8daf10f36bbcd6668c6c646312d92f3470432c49f885d2d8bddf91562c33dfaae3bb56ef118b12c8cd54218bab538cc7a01e7b51
96fd46677b734adf9cb9f513ee814af70e313e2e5c7fef9fc0c137d9fb1315ab4cfe1c56968b8b7658522bf9f9df73252233c012d350b608eef745ad5e3ed8aa15b9df24f9795b1012b4e62617a9ea76d2973844d56288a0fe084d66c768e1d3575b20464b1c30e61d657aea69215c66e3c126b01d0e33c0d1957fd76f3134
d1cc68ef852f50d70bb047f2c02e8d4edaaaf38ea5ad3e6898f2be2ba6781fa63a77a753ef0dd13904b3c217bd6c75293df451bf3888857de6ca71f6eefb341c9d8a3c9af99eab44d45272f340281c49225052ecac83e1e417d96cafb77abe9a4d61c87782e922250ab659018248b99cc1930c40b811fec8937f9b83d10bbc
65af2084f7f3d707ba9d9815f3121c40c77aee8f9eda15996dc282f3dd9a2e775292a9d39a243f0a3e294704e4c7db807bbcff9c8262a1d111e24e8766b3dedde36e5a3388d9a718dc98f53d7ec91dbf1f6a90b74055d7f555edc6c43cd846ce9170d20e3dcb74fb9726381aaf0109db7acdf872a7e9f22b27775afad0be0c
13d01ee14165b15de193c87c8741dc8c41852d443a2031cc00808abf2f0532e692c31077acd3e85e5e3412f72cb758ae1b16c840f29918bbede0385208b452f3e3329ecaf223cea5c7cf63eaaaae2dd5f9bb1f86542ab57bfff435f800a1d8647c7747b91863b0762b462572698c3ff7259c0a3b0d5bbd1e0649629ca41e93
2e146884f9e13baff39711351b55d96eb372f6f95e68ca96a2662b233020df6c032e201f4932e73425d9350cf6f9d3e413c43d40638084588b20237e47109ef0052f24b01a926611c70f2a4431a46d72a70148e3190b08b0df1d737d1533282982be016c3706d5a9f5f2591614da0c9b5cba0a56ab94d526a24b574a7c3eae
181ae882010568b49ff0c477ce5fdccf976344470280b0da018baa334f0759ece80bcd3784cebfc864228ca6371dd8cea7a679207b3dc19a5be30baef9578cbe85db310575ec2b0a17475aaad8aeb3e6615c789bd899bb113b860b5ce6b3d7e41bbc05de8c691b8ad2914cd342d22d97b16bbaf4a48802d8ffcabd064949f7
da1d32aa2c0746e54a3e36eb27cb19907fa330e15a2f077eb9a19e06aac2353bb049bee1868fa6bbf1e13790a5a5261b01fb77bc1215df79676480d6e96b174acc18d1db533baf8a41ff536e26d55d3528dc97e98b8a67b8d71c6668ef3b6c57588de3a18c8754079420802b29fb06775c85777f401693cf6c0ac19f432713
61a58358b0ab272123f2243700cf95e187106d03f576f97328b65d9e4bd35af5c16b2a664425dd32eb7a8171526a007b5b8be93a4ce9dab20fe9ea7e6a78bb6de06e08a26888da01430187a4932b3032ba5d4b630695c0ee7a41ce503ca970ce58e8e25e47ec9e5234d7e3877de8fb74fde1b583b5f7b6ccf04c8860fb7cb1
5f120560268ac2efe243999710ce4ae006124bd4b02f1827c1e792ac360e75200d672ca8847e48cd6f1d888f3e92a838c381d65a7e70dec991b2fec262a2777cba51c2f3535aeb5e1b6e0677e9d69c63938e6d645faeafeb717a3268ffe2ffc7154f7e909333ec52d7aec26d74ac9f6efe081b7ab19b3bcbfc58c56a66a408
6634b11825621f965b3409a0dea2d62da5c2210d7a89bcaaf525e20f67e4542fe93ebd858a1f5651a8b4aeeed926f07e0c3096f2ed54293a1ec6a0bbb1086d2203b2fec3ec6a497f9df268d84abc235f3965af7b00569ada1c0d1cbab8100ad5e7729fdf618542d4051e2c5f5a96daa4d60683ccef858cafd2db9693bea910
e2f9089e07155bc31167a203cdcf2308bcb5bbff6ec3f8e2425642e6de10f6f02839cbad948581a0e97ee26b99a63a0d53d9791ae5087d9a34152004a6e832790a926628f702d0021d6d6189c15db1c9c8fa7d717fd1316fe220569d6c6eadeaba20102b0721f72eef95a46eccdf36ebb8351d75b4e76ca5619ac78911d4f1
33eff138fc57e714fc7c455f1ae372b676c2a0073b1c2fb8b5dcfc2f85e98d1ff633b92150bae2a48e669002ae983ddda1ed3c05d18fb7456c102e77cfb695c7c1d16cce4c138fc76de1a7dc7c5761cea24d592ece7d5f455e0116cbdb0afafb1bcaf7407e19ac9b00b77bdb15878d99130f5c7124a0f1d29694020e3953f8
b00875edafa7812a3be88a08c961781e65e2070382c3a30156db5c8bac3d92baac5e02c4d8492cd2b742c7c907f018aa92c1490c7228614726e2a4fd5a951825ca297c53de6271a358eaf2b9839db77af5ba402287d38e5a1835c131141d274b1c8ffb770b623f8bce8645a609729ac7b539b5803ce57070efd297ff1635c8
5a047347ef3e25b7c3df8ad9a3bdc6012ba47888d045fa24ad80356195172bd85b1d2170038d6dc4104cf362d58742bd15113b1810f1afcbae863834997e940973c0075881b4e054ee7931991e465162a3137bbb6f128c1ff21a47908d787ea02e8d9d06eada0f93cf50b9c71a1853e9cacdc2e25cf3730b231720193da005
088e8c50c345c60d9869573fb93c5bd0203ec049145464d25f0c2b00664c6ca1ec3ff3f4edd8b15520a65aa59e02b9a33d47ab684a23b845acd7c5b4dd7b0fe2b311019e51d88540e714bd4c98bfe395140ae1553778ea6930e3c129cefc4ef9902a95e8fff5de5e84a9ce182223c04aef6372646b4cea5c2f0ba28fb2f6fe
32bff109109cf23536ea6e8adee8192469d305e89a523c3571fa8dddbe053f4984caa5fc4da1bd2465f1809ce863ce8b738fc1d075d28238fd614dfd22feeaadfcddc0b036f9e49a804937ae8301e896892cf30cbb83d42366cb88f9b651b72955524360f29bd7b934153f6fa3a9df82699a81598f7752d493c2e162feb44d
7a65621e46b9b1bf185d7e54e4cb247b296b34ebaa25689b5fed3e8f1845285403018aa05af1841d156874e27a0625d1b76293c64df3f4d1986572a29aedafd03f3407c1dfa4f63802af6893a9364b466cd97f6025aeb20e4f003343d33cf7539004d551f6f39dd714ff0c3258fac1f264b633026da254e0f1a22239be8f25
a66cfa227e11404d18dd29d630cfeaad4ea0caac842cc36e818de7f6f537bb7d11f4d0254167dbff103204d45b70a688d77e7a7a509f511b31e4b048529175b0200cd355020383abef465ff28838470117f0c406dfc20a8e023aef5d70106e361dd958f05eb367bbf5269d4333ca4945fabc7698d24be68c1f27232314bfba
3de1ba49f02eec3bb15f2184769e26ba8141bf7e4c9e20e81c6b951e9e6f72eeb29f333d747a88be542a21ad716ee17c1c2009b4dd0fc4052ceb3c60ef57d9e162d0045eeb6c09a17bf57483ff49135c0f2d3052db20cd6e5e12608bd3a25806fb5c4bd9f1e60bb2de68bdc9a40991d74517f0e18e1fd4b60843ce9371f24d
4ddd91b4d3de680ab243212a33c7ad468a5c287aab60aa224c4aa32c98ea14e3f80406a5e969ae407735e81a7ad094bbc6e623ffc9226a9abe08037b56400287caff09f4e111d1033e0e648ab14b9e498b97aeaf7bd5464171fe490b214cafbe6358bcff12ef63e58ffda3c4924a3aeaf59cb9d6de1263eda818b81260a3aa
ec261768c81e99c910e604b1e7bacdf0d01277e9ee658a46f7248dbfc8a52d0b7716dc4d20b626a96dc3ab809f0f811e737dd0e8e367c8ea16ff0cd8679cf2b600cb97cb8b345343b90ed57956e03f119c9cbdaa677f3d30f9e18d1109f34fa3b07dc96384d703e491600b7b752eff694bcf234db8979e596d9eecc1a440bd
96d8705d505ae5067765e7f23b7a090e29845ec863bb80eccb3b781a5330587d54a1e9ded2cb381d4ecf28324de12c3f150375da80b71e364a54adb4fc549faac04c04d45e5e1f66d1f0d48adb0b445e511655b7a780627433a900227f66414099ba8e0da0a638635bb5abb6831a3a778c253404d4b68a9f9cd9d9afc9a780
e350966e0aca69bd3608b71bae6aa054138f8e1e1f4cd08aaeb1bce518c7a89a446696282edd1befe67f92ee9e8d0094f0dbb7951d961b4846799d9171451a1cb47606e709ff54857c6298dc2323fbb9c9d05959ff7f08b825b32de5a47e2db439b4701779d825746824c03070e155f02e03729bcb2ef5b33e96b16ce714ba
b51fa4ae0680fee259dc085acee024a1cc4b6859c3c39611b0a286cabaeafe6b579fb84165718d6727d8d72b0b4cce2156c13bca03b8fc3501d6bbf466b60debd3ef0674cca331de6080dcd5d115f00099fbf3b63e956573f0007200e6081df10f4e5e6ff668f4f195833df7bf4711cb747330ff9cf6b656c51209505459b3
3c29c287e0c751c53056c2dfb6dc7a46ad3f459558be7d6899bacb1c81ad09572380ff7aadb79cac0b3f64ace8b79f670ceef28055a08c1521f1f73ace295613268feda98e36ba95ab6e4f32cb3206e4a28515193dc999272cf0a81c76046bfd4a7ddeb019500e8fbcecc3dd77c794cfe1fe79ed62d9539e905f0fdc0421e8
93f16cb44911a410648569d3815abd2547e016419ab40158a3bffef0b2f4a28615646eac834805a858dfcc1af7b35cf27b509adf169fa95e250d8536bac4a34ff3d0c550ee1be3f6ac08ad4eb4c56afab3a5bae3cf3e3cef318dfb4480971ad8c3ed8c840f1fae0d1b1e1b370c741793fe339e5d10b99358fa48ec05fe893e
e90b902d6a4c2a9793082241a0c2e050b795028a8ea3276af921acfdbf7ac962b676d297dc320dd8994b4aa9fc1283c0965cd631229fd1676b3365753a031ec311e825a4c6de1e8a14fb367f6c3f6731ba04818cb764f3542c38e22a721e321966a258e6e5c4c3a23bbd678164707847b339af3765536c9b24aa43d9f5ef25
8d83277614eddcaabc026bc8d09cb411ae1cec3aa9d4e9b17cf9d7797c3df8f763ab9800a797ce51fc6081356ebd7415b504d40530f3606cf72b5f62501cb20bb7a223ef7a01f6495e61573fff75376588254c0074a9aca57a132de0674558944b89d3b1ab2a2b8b98422c0aba1adc281e6c35dfe6351c775a2ddeb2456cbc
d2fdf55888c06b55df665d188fa1519c5675f1d9f5d790ff4672b0166586a95ca9d1fa92aa4fbf34d253565400d3eb8be6206f29bfa9df21b5a29b4f24dc02224cf6a80cbc550869a07badfef1b922ce2a20da8f94b34f57c3f4d42d30982a8922d298a48d13a7ef02d6ceca001d875718b198def6d36a0c7028976bf86265
713bfff0cd8bd34acd0e02ff0ef441d4154eea9ad61665e510f733b2c9bc0575b64db5e20083235bc408c517da3d36670f1a849fbe5428a49267be2a7bfe0a219f5c244517f52d4d7ab622e52f86287f46feb7d2dc389f2ddaed51a9feed1e1f4a4bf83492d166b70db9a3c55cb041fb09f51625c6811abb78cdb96f14e500
12bcaf691a92fc6df7c41b84c620fe1c2de7f1cc0605df1ce23f77989b75a28e4b30efbed2252300143a24dd86d3e48428b4f2504e14986791d02e70230ca809a907c1abdf6f50542170c67d1cd965fce3d7d524c7178aaabee85c60d215eb943590b929b793037780a33f4c976ef901b1ba348076f8e63fc95fda4bbc136c
ed8b4bd81b0251ac35289ccd354cd176ae76560d488baec078ffb81985693f9f09a3a927046bff4353e8b99c850c4a79252a80ab21ebcd13c0f265e44c741fc3aa9ac86d3c05f59d1caff4ee8035329c451e5f26f2f31a7ce4ace5c79bca1478c91278d8e158c2ad08074db464a03cad70831568ecc1637be33fe339da7cbd
0a21d90bbb734038e34c9dbd800cac739955e53b24d96817221f124be774ab98c519a086a2f413e2fbf05677906c9f06259648f29ae914d2c5985f858ff709f7aa5cd8638c9a4bc681412e8e00b8d3710485a61412545559fbb02118a055db5c410b92f80b424bf338966754fedea764a642b847516898fbed3258dead4cee
d90ed0af66dfc5f1d153a43dbdef73b5cbba23d475d79c01d20e8517562682ab8b29a482120cb8758d56183a77ecc8acc0666e0a80f0deabcb603979179e1ef5d56c318f2bd52b8c391b9272ad3e10c5bcd17627b5313016d4cfbcce686b14dbe8ee4357f827113799ff762183e44fc2e4ab270bd9da245d44c0c057390c42
20a12dcd33a4dae3b3330aab0793997bd3823271bde107d39d5c84c22337c65b1e53f9db1ef72095896a0acf888bf651b03f1b7e38a93f53d2eebfdeada732d91846feeb3784df6dbbdbdc4ffa3742eea594fd4a4db91cc0a399e85073e7aee43616c3b3e7a896075db91903e04f1eb064d97f30096bf267fd4853c84ad394
343e2108e50368b8ba6500ec68be83345334bcedddabd7fafe42413600b5cf62ae5f0c0864baeae9d93f27e7831a9ef54199327bfb77f9ec79bce1a304427fbdc975dd8fec57fae1d6e53151c24bf79f7a55f387e64b951812c84daef2248dfdbcaf8df39978e41de793425e048d7b3f3822eb425f3966d1af9b4ea6fbd536
62f19e4b3f1d75e6bf77f443858fbd3b2d0631cbd418a884cd8757eb205aebe2e8f9011f398a1f69d86797b1211c85444aa781ae32e31e6d4f734e5be96300bc0c3177ab4c2f87da8acfe06c1cfebb19008cea6835786c6a6d8f399d3638f23e35b05692ad3a93cc76ae369df8ed2f86907a14a8040e0300f47b77691670d2
2498cbd8609b8ca0bd7ff478b0640729a8b80f412e65576419eb220f441406faa4c564b4b9de4976d3c0ad76a80248a5b3932502e6c672f2e5a72f751b47231fa21d3973cae1ff78ed2a36f5a1c5f5e3f12cdd1d504bcd93112678869f99d65b0f691eb557f5841fe8c35e72ec1bbe690ccace94c26486ca0f446ab6cdd551
54379165008ad0035917b4db1d80f66a13e86ab5e5508082d23db3acfcbac7b6afcf28e132500a870df2a2369ab87b022674455ebe45b88742bd3b6076ef034b41a94c68e45974347d402812844f7304cc922fbdd3d7becdec3ac9c7baf29bc0c656c88178f63208a76d616abf724d548749c8feabdde8955f0ac90dbb5812
209e72146d6008630b4f764c34b9c006a1714680574f386bd0fcf8dab85e919a9abaf4dfae829ca5632eef618e6b6cebd246180b1c3392f39c32213c2df030d026a9d8aaba5dacebc64222fd511f36951de4ee9af3ec155bc9d0debb632d62ccd489bbe393273b0dfcafa0c0199ae495170d4ff918093c19923b1324c6821d
d169139346c89ee12a580706238dc1ed912346232c3e3ddb38d719c4045dc0c7acca01e9df6e692bad2bf064a37e397c86db575a96e75a108b7931ebbd530b2a99362bcc903726db33cf7c915b465932d919f19a59cc1d8e78c3c249b48c251f60342e673aef588acda125975270f053bf0676b6c146e405362bca7de0e0e2
e9ccf787a5f03551e04ea9126dd97accd1d5aa2f0c51eb3563e05eb1dfddfcc6dd14b64e12617a05deaadc48edc359424c26dc31a76da76dd1dcb08cf33975d72f019ac8286e616336321b8e186547637ab87017cdf3cebd71d21bca688b63953cb3c9002054322cae91f48b7fc6ed2e701515fa3c39c74678062a1858a66e
1798ba8ceb4359b7f15593ed5a7269364cca16643848affb948b9d473708a82d1bcc21078e044640761d3a57291dec3afa01c3499db1c87a4337044f24050a4c17174e3596db87ff27dda834597b3970b41528d4e61b43e6f5c59832985bf9086d4f29999c15108b2b23d87bbbd27be6eb552ef6f1bc4b4589a5fbcadcca31
30a2cf1ca23aee5b3b73eabaac88ea2bad03e8b0173d5d001905707ef4999e7420926ab00e152138e7847eedece4051472925e00b44e0fe43c76d878b91057de440c077b8b395a4aae5bc4caa239ab3afb7b9945cbdc8497618bba0bb81d8c41c7bbc950484fe7172355c83e9d28d36d8fa9b3d06cf6a73b7f1b1578e227e5
ddfb0fe69d7503c3d366361eb9a17b2fec91ded0df6dacb240edb5fa92feee0520bcfc8087917c33a99d2724ff4e26376f3f9b275b1aeb6a3253238fa21c7a276076deee9cd4cf0cdf2850a8fafe3ef1490e3863f8aba75039a5ec72d3196f99f991b498b347d7e65e7c861baa23c6c926a65a79df05ff54a4099c4838b94d
02f5643f70876b7641d6aa8adc4da302da9a9b87eba7591afcd5f7d4460bf0ee0653759f73c6c6abb34c531276e3fae9b25805b5a575c4435ab31e0546daf9fa1da1270332e9f4c9fbef533f5b21151d817bf9300211f290f6077e645005006769ed330692800f7a55690f69e6d628781059ed012e1d8f21295db67e1a8834
c13740c8d5a5b372f91561650b2bc42117c1695f8556bf7783a901571f21174d4f8a88d96be099ac20dc2e525fc84a106489c1ef162457878252fd89d70948ffe346325fbd781d82e9aff14ed5a8da7d9d8981736540832db6ee553d96f4380f9575003afe8b177cf73d91dafda379c736d07a87f9d6c5e409d3ab1b60bdcb
6399331353239468abdea2a732192d5c9ae201c72f196d7df80f76e6367e0e51911e22f88d99a41b54d8c3ac8f3a4065678ebdc805e832f016a7f84416860a9d1bd512a0578fca66616af15c5c81a73bc0543e779877edaba63d4596f11113e747d17da4acba2b6c5c5405ec6b93a4b11692e74679d815783cbe709acc8d2b
0a98546082b7bc8e0fba81242bbc51573ae0d6085a0cbd65ed0410165cbc4dc5cd7fd9a42cac2e9f81946661930e2ccc20be5f4cd20252728da515233f3599ae678741ef1d58e04673f0ef8d6669e3e1f3b948eaae05045582cd9936e185ce702687d3da90a9cfbbfa28f6075b9e583990aa6d2f6702b2a871f588d5f881ff
59b206e3823cd87a8a8c5f27fc04599bec8b2ee4e0cfaf141dbc299c2169c128a0f624a1968d7c2014608f6d4ba0f89bb9caf9bff23173d5eff951a5d8f1d8fafee93888134dc230553ef09890da374763eaa9a18d0eed17b8b004b03dc74e3c3cf9c3b8b6df552c369879861d545f93ec018232a5d5d5bf4965448196cdec
bee7ec0c9e405d78c1e2a438f287a78042c4646d6ade5a18ae6488648cf1d88cafb598d5cce0e097e0f21437d029d1ca52102375cf9662ee86c30d0f40012f678b0b9febe1375412dcda0776065c7d93697555e87c82b7eeb05c328b00befa8b699bcca61d56b4b5722e1f79c4b1cdeae51c4c3805f1d83b738201ab336b44
9749fe02b1588fb08eb03c007fe34d220f425876dfd31cb0235f998576aa8413fc68c27e214369a4cd5ada8f53fe8e73316065adb3a23803e8942fb104b1118ee065c77d27196b299727cba5402048805d26aa9454fd0b37cbdadc1746604f2da0cad0a74fc2611931febb48e1dcedc6dac7051806aee0900b2348e45973e5
f63f57e83fdb9d8444451826d1326ceceec102f92779597d8ef8de08645121d92a557bdd86d9420ac586f36c71e792a06b319fa5cff3b2eafb93187a776d27f95aa2b8f2ed7c5f88a710e95296d5917052aa508e774562fd5fa50fff92bc6387317a3415ea3cc0eb665f2b06705e64a21ac11712d3550d08d4999c930c0229
50eb4726ec7fc03304f38f8be1fe89b860cc4a8888f8adecbd802bc8a7e5fe9fb8f7dbb00757576cd857c1476f574ae19f095407082960a7cffb48ccc697a908163f1b1fa3115f3e8166bc45ae15c26d7f4fe64bd58292157e659cb48f3247b27bcc8e2ab01f4077f1b94b504cb41d6c109d9d4c468bb1a26ac994783dc0d6
7a99af004f6266a77fa6098e1c389c0e6d5249bfe625ebc91df3308f9322d7e703534aa75603125dc6bec09afcc956251ebc5a8473424af5d3e36aed9e284ccd6b344721cd39744c335385d07f2410cc2600378e0740e3d7a418a9b244bca02a3078eed7dbbbf938c1920c7c13bd757bd225d4b7a6dbb4695921ac9922733f
97a5860f7260ceefbc119f1d2cfb7ad8ca57354fef8eeabb23ba89eda836270c5f5aa9330d9c55cafdd8b55c76c7ca9ddbb7a52db9b1edf5a510afad68f62e060885b563846868f83a3e0b767f60ed1d22980b68382649453b4e045c8debe5e711fb8e2a2c229f73f7f7c34ed8e213c65f0c5e5c3419aa511fb4d38804ad0b
8c1fb3ffb71bd68278ff94994deaf0039bfe4062f326f9aeb6ae1ec185fbcb67deb9194029a6fea1bd3111d6466e0d5fe6cfa948ffb6bf8115ac2ca46b3cdee49959d052acd9900902b21e69e0417f3363e60e109f4c4cdf5b9478e799ddddd268f299b4dbb8d7bf78d644e2be858b6de3a4076a8fb8aa078c27dc0f8290a9
e830671f583a27a492e6bc7bf7911cabf3a6d70adea00839140fa84f17f2f7b173b1849f05006cdbf008668cfe6efd88581403e30d7dde5117fd4775aa3db5c83cc3c0bbacb4e967d8fc5f280358c8e5889b354651b2c8010b04e529625b838b2b69437281f4a49194865714c7b3ebba75638d31deb9102d1d9bd3a76faeea
f5f95d8fe87c22cb3bc864fdcb45da12da52f92ac6044792f95ca1f5ec85788ee3062a995c1c68b4e3c8c8afb80fc2455f139f4416568dfe3a6884e32aae7b78fcfd2804b3325c3dc048e4fb35701795cc0065699e89113032da89ef3e5ad0524c4d65771494b2a88f387351b27a18a71b357143fd4c72524e93a89ac5e0d6
152e7275995e0d9374bb3a94c9400e5faa41e04fbc24891df7661166d6c98d7f384f552dd9f1eece91391f18d2a00c8c04a12914d7e58959250c7921176ce3ac104a99840df6a597fc9aa863f330a8e7fad092e5a1a1fe256910b9f20b13fabf42057a7bbcb40b09a3153f5375f68ccad0a17520706557435c8029b3d452c2
cef1a2e0e8cd104c328557d171dd990ef362cf446c9f77a44ffdc60292e72dda0c2f60a4305255a44822f539668f3981ae1ed6a214cc0ba0112c04a8e520b605450e72f17bf6ebee1a88199f2092a604feb3380ec7e5d18b6557c44f952c943afb22b41a161e7a4bdbde5f5118cb9efc4b29caf0fe74b1786519bdbdd99648
cde249beb209e5eba1487dcbfd86059de93051041f5111b1774abeac34c44c32548c429ac14fa439b86a721952898ac9faf6b570701c0a8ba1f26f330e3937e815b1580591e8c62cbdbbb3a1e993e51945a840a6f33fbf75e7bb35b0b90420f7ebdc54578c7834fbbf8deaa0268bea8702fe9017a8ff0dccf3d26ad27e40a0
e9a92e683269781f5e029ca9d4cf28886cf9ee4d9804f945ce63930527349dd80b384c5f92657e4868ebe1315d18c3f2d3c0cbc6aa25cc604fa4f4af8739e11ecad9f0e001b14fe55fbe0f772473e1c970d916354f2d3e2dd2a008cc371b8651092a9363b7fa03238bb8c4aaee5886c87f2c308e643fc07d151ffc2253bd4f
2917064d3d45f7afe74728e4f1592ec620934e5287ad25ba6b56951f9caa8c1e1f6f9ec3521259e57631e7fda1403de45d8ea64d8f327ad4bb658b5b71345b7459ca76149f004fc4f4a69b7b8f89e0fcc3131427b0331064c6917f5a5e263b88c966245d7f93e50be6a5689b4bf5267a2adc1f2af16f57e0729388bb203502
2b8a12ca2ac07185524b32f21bbf91bf3debb32adc278fb2301d9bbeec228116c7c0f98a905c1f8f9a7068060ef24e7d3b5dc2178ec4646287176462bce7b9e12d0ca5ebe3b260b14d30398a183a18940b07ee4dd06123369a93fef615b529547717b10282bc81a824a3d6e45ced28a8934be4bbc566821fd5612376de1b2a
cea98fbcdebf1d8ce1458a79ba42a8704995e76679c5bf0fde866ff6eb36c6b341f33f3b476d9128b550f1288df003a57189a1bf1122f621074c752f87894846c7ac7e8646e7a4ecfdf53f08125a3a5799809b123df1b85762071cd891a155da0c48c2b5d259e539684dec07c1bad7cf19293c7c109937690ddefbe82e8dd6
31d43daa9c27be2f90ce527e5d3f12d85514646f442a0001c22084136a6ae52015733119cd41ff603523a538f63cc11e78858348a8b8f1c460e49c98c6cc4fde73aa48c775b1626ab3e77840a55a07c79f445fc44aa940b6f5d7abccc22fee15ecbd267dd97a4d4c8a195f074335d839406d568a6f10f20361c6fb5705b6a4
3496a9c0a8c84dbcecb6dc3abf176f6f3eef0fbd35351a4810ea29c0fb1e85c1848f38d85475cd698fad659f9280d36710b5aeeb5957fb0cd6f5fb600dfc76f1a2b0024196d08535bdeebf7ee1087c048535131b61e7030460869b5da729663c948db34e59415a550b7d5dbe0801d3ce1a5b04fb4b083c4d26511131596107
10060aa816e700319c708fc147eb25652f74ec5058058c3dce7667f0f62fa30aa125510316bb69d9e390d8966f060585b7d7bbd41b8fc8367a0ad03ba1794455e3f76f0d6aca9f16c3269447ede1be080ba363d1a25b3439c443a194512f85b943323e497a253c14499a55acbdee276e2bdf4abd9484db88e5c491ec1f5b4d
6730ed6031fb6a30ea07bde6cd72dc291d47b29b3df2ddea83545d0204f8241e2d854b46b830928d92036fac7ea554a5dc73449b7709c799091826ef44f837370399ab0ecb4be46a4b5a5453492edf4aedc35203ba4f68a2939a08a1c18a12ab918aa2c8563d5ebe6525309ab91c29cbc61790f85301e2ea69bbf21fc6e4ff
d04eb10d96741104fb002aafc48a536cee78db0453a6c0ae710c1db67832ed2c03d2b6665048661f70ad9d1d70aa2727b59b940a70886fcbef70d80334ad9ca73be952568e00b916fa80abb5ed933f924feb0c073965bd0eeccf78fdd9c54514094a709c3f1850c30b2b85c5ea0e4970c44fb1064c7334528cee18bdcab13a
5d5dcd2a809be5ef84f905229e126198cc2f5997b9a92865f559e4414e222b75d957d41ecf3d9e3a5a9c086f6b15d2dc2aca9ac955e77c2b49376b46e793c443f969f7d80f3f27fc3bea14849290e64f552308e256df5cb2622e03a493522abf51009f521b65fe9fe31b01ddb9fdb4a03d49e3b2868f5578a7cff0910a425a
e8ea3702058cfe2d88c183cb9c3af9da09637dbb2e2a7e9e0e700503ac2c49122205277e99d59b477a26e6d2ad256f41454dcc52b34fbf71e033c7a549bdf9060cae632fab237bacc078542222ce547b90950e7b7cf9802394ba5bb6af25b06f8da0e39f674a2e9ac3f75fec07ccc6bde4dc5b8499adfb0eef197ea4668793
13fefbdf60224a216fb3312c45e45ecc31aec05e0a238175f860531f8a63951598a801c6ebd9c98a9247a4e80ca0b4abbc5007903d2f4b59a3c82c18f72cc37e6fc81be2d468e8684292409392dacda82c910b0b2ded16c2f45cff9cd31c7455dd2480faaa6ba870e3ebc8cee5f32c42aff1a8797b93bc31858942298154b1
c083571a325fc96e49ddad670810abe54a82edc4a8531a7fa22366d3b474675cdfd4996f801adec6ae3843ff339b407c62166c48cd63e0860509a53a74589a91e9202e65b4475fa76ec45ae087b8e16c83fd29daf01cc2c0b426c2b139407a35d28e7bb2b4a83e257a61d86a3463f99198817f8a706c31198d84b8b3822e46
c61c62e9d3492f6743b00499b7f4b241aac4cc95fa053121afe77ab0ac6308716cae26f3aec1cefc0ecc0a4f4c17f456b112b58f0a0af3e322dd7b2eafe59a512445ea3ab2ce1aa8cf3daf5719827ee42b34673069441ca1ab2005dbc534b5d4a3a76587d846d49132dd4dda528ee92bd998d0b87716cf9e1cc1e52b30ac0c
2049d75659e9a8b2c73a6dcdf9f5f922724e529666198c5a3e48db6a9a100499f9d099cdeea5cb733984f6467478b46542e0f2ec1073e221f3ce343693bbfd39f6ad3ee01b0826b941483166c70a41e0d3b81db6bd963df511c04dd878af733ed5edffee30611916a2d738ac6756df2204d0c05883e7b2a9b02c1a0837548a
1bd59df305ab55b18dfdbade342f33477a689c5f3b2bfaf56a4d84bb26a3e356e094a7b1a881c064a5f0b14eb3d4398e4c7fbdd233476225de9df27a4a9dcb795c5599cdcb188d86e93ffa15e964ada97cead75c6b977ec0aa753676823922eaf433016d22c9802769e78e573af26a3ae5ec28b6fa4ee5d103181ca27aee2c
a496464be4756c49049659275e5a8841cd98d70066211007bae791bf1a92892e2410652c7e3ce1e08fae479f1dbd915704f506d1101ca4bbbd6798907b5301325d9919cefb264811a4a3c85131e2aa35413ea084d8db0381a2087a6a38c6447a26959d9ae4a30f3c34e70bfc8d6546c6344dc10351cc49b8619b03bd3cf939
b7b9d7a1e7beb1640f512350683c91ec40e933d80072a4b10a6cea95670db8c4f8a82568a4099005c0a1dad903170878b5cba3504f8216d554f16d975a81cff60b478bb5ca6b85c40e5dd318e5e74a47d63cbab498fc199e8bb3a09fa5f1dd148b1da42ef40505edbb1313c4bef001f45945d09904354acb30d4bcc7502b98
3c69a863f1efb89e682de58f926bf967431719b65b4642c49bd1c4a172c6ecbd05ddb05133e2a9e0fa0a5e7490110385f172f9ac396c4953a8df35d51510fbdd1caa0adec05618916ed9bff7014f73ca4f2b08f10e5db10e2f41b7557e47e7899b28035defe9eeb7c5427be900af7e14ede6e2671a43b5b73082b2d46b6a99
a45e85c47dab6c014c679feb75a85c48f08ddfc78120f768f6c3e2348aef968fe0d5142216849d1eaac7c0c7464ed5462988169adc57c626abe38a761182acf67f71bcf79930ac6fb04fa6439ca352e462e75b0817a951efe723162dea52450d84c9cdc977048c42f808c66c1dacd5474a507289197901918739dfaf67d605
a6f1431437df72bee729930dfeebdb7563e5063fd82dffd96e4cc0edf200b95af0e0739b338cb3d828fcaa331505f8fccc551d3e2291878720c3f6711008da8f4067c07f87762cce222170ffa857c414f7b95a5dafb903726334259ff9e29ed7ea5a1a4a7817a861a779444b6e3fbcf8623384a9c5bf27978765f500ee7871
103d4184461ffb1bca3971e08458810d8faf13c13269b27ad1c1da58d88f8fb4df79a3b57599eda71b80d51ad68c428ebd0d30e8063c0c6f3f9138ca128ff38394813f17942db93e1fe1c76a467b69750bbf55e90b39a13650383785ee7221d8e9203a36ce9a20587ea897afb4e46e0f1e15d18042124beee42acb2d666430
c41b431955207edb4823b614ce7ca66a8c230d5d5115b4f8128b5da883e28572dcbef1a8c43ab5422c0621864126dd8bb6fa26771ee4f6074787de3e8ae6e2ac5589354ef53c1a1da870b90d25d8c0ba02a80ed35731c27e03753c310968bc91e1ee924cdfae176776bda42f1c52b26d394cd38213b804d16e3060488dcbb2
00b08b70db679d3deed8f3366b5e9585fc7731c04cb6667d576a7459380ae97f16835141ec53dc634cff41b3750bd96eb5fdca75e3f51470cd2952f4d4f6815969284d58984f4185233d10c9512f23a123641d0ee37b26aff739ed98b6e359b13708d19574f268586f3fffb808cec131f916265cadd2001b91a939b2a481e2
651d041b4dc65fe01f905824321c42b0d579636bb86ff1ba31b6df0ca56198de382f90ff7e82fb97e513b52ad69903ef98ed0d484f5ed5daceb2e18870a0cb82e1977970de95f68626e7be959716f042e3452504d0edcd469435920207320824ad296c7aa6e7a0ce1b131d3a40edf30ac8c9b73cc897379538fbcca9161628
8e0b6978fa630a01150efd79d73dd0e73d1b6b5459e1de3f4dc4ab824bbc84693adaba98d2e49315b43f41805fad3d4ac03ac88efccb445a2d7975342a16539e9d61e59898cdc1a734313d8b08b7c596977095d769f393221b5e4154ddff68e6dc38418af3e70712ce509113602c66065fdcc767ccd557215e21e840f71f75
ab833e43ddd80e552f47ed1b46ed31bda30bb5f4a276ef2dac700ff1eb6c13a217722c1c3a8fefb13d546a699d283d6ba1baba17fa0af1f4cc25b1bd1198ee4d072156c6e72593dc7109ee8844c5f6273675a11c0758ae2263c4ba526b699611e2215196d24c5ac584192bb4396eac46ba5dd08187f26f4693516956111c68
def02cd43751a527808f0bdb2fe5580d3e3d3fdb935fd5f2726ffe2353691c0f22a8adfe5d2b0c16819d4f6ffaf283e121fd0620014efa37c39951ed1d478bbf7e112500731d8b835f2cf766c4a86c5383f063d1c4e30eb2c811f6417731b8d0bbdb17ea03ca4d685e183e79d15050b436d8328ccc60ef64ba035f9eda202e
c7e9d62bdcbfcd93cf30702e76a94fa8818f10a43a48205dc47135d1ea05dfffbe1ee29cea42b47ee537d5ecce44ae20f1e2bab7c255e7494e551263869fd3edc905eb10a29186762b4952cbb0c9f422cb097dda4dea10871ef31ac1b436001adb71d5c80dd8e4aaf62b31940a0d18d0141676f665f58df9623fa3b1e2d80c
6e5d8bd3a9050cab7970e48f630e9362ff45c56e49e2fa495bdc7d790e867db911312ed601090c0d5c2ccd085004804ec1b747e220eae5bee7e7f4d037399719cdc65f2bf17fa14e8690ead9b13e488304154818bd8f2b9b68254ad88a09675da76470ef8674b723c8a422399928936075a1b998b052a688cb75102381693c
9b16261ed7c90efdb5d47022658f972f7eb631acbb2225b48faf81890cbfd3b4bfa9f1b8e48d99574eded040a2e7ddd33052f8182fd615d09794c3a168fb548c42de2605760176223367801204f8dbd2915cfc13a0415681bec7a486164953d86b62cae9a411a5c52628eafff63d5c7096f9dd23ebabdbe722107682c064c4
72ceeada7d76944faca2e089309b378a93f620a862e1ca0bc8c03769337278e68523628e828f50b8851760d23e0f841288acb4644a267706ee3491bf3883fec51e49ca869a6b83533ecc9db6d59985427db6c33dcf76baa33468451024748521f5896dd13b863bac918f0bde74f96c710d0016a124adb8ae1bb1293f8867fe
d28877d8970e01eabdfa32a53e8cb568562afe6f86b6e468239acee215aaf5bb762652793ffb1c2d282d0b59b6af1c07e27a7804a8217d4046f4d6b1c691ec465de100b629df18b73eaf57ed0e09c6017eed1d7b715c85f71c6688b4bed83fd2480b62f154d09e01b6082c67592b5cce2f76e9726df1af3eea125745cd2444
7dcd8d1d590162e7639ec85e01a78fb8b983049ac98dac6455d9a0ddc9a1e0df1a04dd22f51acd5618738ed0dca809ce7cc6eb3615793e8a35a70405ad949a660abcbb38d045be539eaa00497f57ec191bb6fb679d572f302a5fa7a0f9b714db1aafa46db5316acb9bf0d7afc7f766f0a00c49314302a71b06b05dd5e1701d
9b636a7f5a0a4ec3142181bb273c8a4eba873964a08bee3debc067dc619e6f821f6ecf79d21f143ae316a0be99d347505c0e36e5b2cce89573e07b516bf1e455164728600c0f77fb02a42eacd46ffee01c47156cc9feb15e1b8d00a2d50fe5d62752426faa30d34ac27887fd3775ca4fa46511d46b46f6c3f32545e5cc0fe0
f654e22b5a5bd8e145148e43d71e0c6019b9beb03d4fd5aaf9c8d61b7bc7bad7daba693ec08349020401ec1fab98d2b5be94a5a0c63f889df76a1f39be1686aff6c6b555dcb4e522b2b2242a7e69319e79df4d6b6c4a2522c1975b99a24ba758d6a911d57028f47d75855d7ebfca53253fef497d091fc64df2a078802edfbc
c88e717c3bd9fae01a7311121ead65696cb7ea433faafc87f2c5b85a49175f2b4c495089add94ce075819727af7bcb54ee22099f740e75162ad686e1ccf4daf400575cc6251f24ac99c282da7b6a657ad8772bc8343954d00b3d551b6f8ba1146941f0ce007714c7d077b6a23cd20dd50e3f95fd20335fb79935694144de37
bd7ce43ac62d64abdc976b99b02262ab2ce84ae9c5b034354fa1c3a45414f414b3748bd2ac9eb6abf90558e63a9d10297016fbe44013a6769c28ef76de9d48570df85a6b013b12f3d6b2d52fc14b222ee3989e8e9323344841004e4f9b479be9c5e368219c8e3806180d1c13c26bb66ca689033aace6da980dd6c9f88c2927
0f3a30b7fbb4c7ee5234128e1a8cf0b6f38395702d89a9742aa6a1724d235c42438370fa0a8e616a2bd508ab156f3f511d189d2407f4f7a04e963ea3e686c6bb41c73fd61d31e496fda38f0cdf6e5d2c1ac6a5facb1cd6fba97da7d4280ea4df4c0259a6b59f1f2fe8fc25714732c86eb81d960db5a7a406ede5901bca29c4
63906e473a43090fb395bfdfd7437f3cac5eda934f299d8948e16e427a8e731bec7faeb81d70a525c18855e6296ba3133e3580e650e61464fab97ab799d1bff93016938c7866320aaaac634dda4c52adf722cdaa95e537417fba49301e2125affb25c313a710730b185d466fad267b95d3a77d0dd75b2c5da35c0590185cb0
00e8d71830ff4095b422627d47905052d330ce03e1f97662dcbf589821fd89b6b4172a6f874ea6c184a920897434c6eebc5e3c991032328907fb79c961deec09ceaa5d1f84c3b61e91779fc444440664fe1671c1a8fcb192e02e0c176000cc0bf8707fe1f548e95535170d45c50fef4527d0206b17039e1b19c75c2a02ed75
f6bf47fa74d709cb842aad625a30b7df0934a6bec1ca73548f05dfd18d6ca14ade4a5f7f8f5ec5c224f26bc550f07c8629afe432fb5e30705f6e1099cf073502c652df29c5f9bd1be12d7eda4ba33b0f77512bdafead4724d80cb086f19fb08ac3229078cb29332b6d1d8b01b03221a206036f24ad857d2230bab8950c5cd4
1fe62b459b82f595f22c5b6c76c1c855485489a6ba638c243a62b1a6232efd897970e44afcfc14ecbca4ff46bfc880ccdd1c277c5295e79f8879efa1f048c7fb2c9fc0ad62eac99332f40d6bec351e326e794df7b4cce122dfded9755e38ebac4327d8a9ec57a25967e3bc6f681ea26167c0b9a9dc4d2cf7f80e13ef18fb3a
00ce50d78b32cc78dc715c913d9b39b26a069047852cbb7fb34b16f6593e5b9dd27cdc64fcad5d4ac833e9cb59f088d7b55747e9ce00781ad3c4d45a54f00e318ea7bef68dbfb74fdd16b2f6833b07a4b8785514a2d4750f17f492de15e9c2f04360bca10992408d7903735148c77b7a3af0f80df81de1f153e21136364bde
bdb91b9a9f36827137750f5a603402b43794d24cf14f029d9c7384a5adc47cfa78da99e4f8901c2d124d1b5e6aec5d48c409b8bd99997e90a4e11518eb46666f3e7d771f094cb2e93684fcb6dbf36dfcc5f06d09103fed94c1d857f99faa0589f139d5f414db1286aa4f07e78170d508e33d45340742a3ced9831755462578
8133f5d28afc102101596e7bb1a0ed37f306f7ec612225cf969e6de172732dbb2cfeb2024b23136283df93f382228b81fa5a87e94fb80a3587bd91bf1e22a37f618577e120f9224e757a117dbfdcf4409b7ab466cf57f7f49327fb50dd099a0832cb1e25cdae4435b8cdfaedd739b59e01e05a7b98ab3741b3bd5972a2165e
1ba5687bda23c929986955c8ebe50e2e433c58e37e0938d82f917135780c57667f740757e47ec7a93af233c740c4ee27ac17e685a1e6d01e7939f34f762a42d5ff2cf9b3b8148cd6d55c0717aabb3bef6bd07e92a0f2d39bb9db8cd72569dfb0eedf3cce1665696becacca879029a95e78a7f4dc689d31846873437fc0fc80
c73f643c0c4d06148164102c99d593337b70aa43d448db59ec2c9abd978e42559860b69be3307efd2300b3c1c9997e4d0ad4e85223bd4dddd7c58c7f01b5ba99d61e93a4614e982828e9b3ad26d7a1cc85fab94ae7eabc255a0fd4c789835234e4ecce5437999dff5bb8e433a71d76463e579f99e12c8ef0e3021f82fb12d0
c5ac8dacad19860dc24ea05ac3896f56212a11b0704c214cf4a6f892ff8c2c318f4b7882fbe1b566ccd2c6b5a8f818ca25dbcce72aab4f22c50fe8d4ca6dd9be859a635d048839eac6d9ecd5989c7a104de49bef26743e615982e1e5547f57516d0246105181cddb88a2ba0c9a55c1b06a7be4b42184a5527525f50b1d510d
782b8c4440b640984e9106809175c4d378dcb538394c947ee616e0f6d0d95125e7e17297b9827c98db686be24672ad9b3f3211f977d27ce6293c66bdcffc26215b7bb623d64cf0dc2c575596b9e27f4d6d0a0c383b3711943a1131fac269b6357c58ae9865f3fdbdd2385ce60e28c466215a9894a3a388767469c4ff573f60
46f347a77a1a87acbab255e4219d6d406c875ce33f303501e148b0e03876e47c3c5571fba7d9c90569eab70f3dbc567c5a94cade7bd34a528c1f9709b41a95d19047c3da5534ecc9161442ff541bdba8b76d63353a8b26f02166eedd64fa8100dcbf25c18dc62554482060ffe9c262151d60ab6677a75040c0647b3652a4fc
a3ffd9e5f1c1c97339a2f68a6404994c8437bf2a4c1af8ce2a8ad0785925cd33df1445ab39b76f6a9456fbd1eaf9026cd224f23a4cad122b558f30f76fcf5b29cd84799d7467a6a155bb7a52166cbd8ea85d73c8424a3299a2393dbc8fd7328c05709f48bc0873397b93130f3d262f0927a0f2a112c13c3fd73450a6f00a38
e69c116ace09f4a717d0507a7209fda652570304cedf528d1732e048611977c06a28daea97d341001c7c4a84eb963014860da612a52d6ef9ebb4aa53991a0ac2c2f9db1f149945e6b50ef8c532130499a527dc717483414e24eca6ac2cde63cccadf52a2698c3ffd732b5e6094d288bbe47c51a3376dcbcc95690f1da46c82
5d59314b5491f8f4aedef09c58d0c55816d0816092bc2ede32d688af30b642d5a8e7a8cb6fdb749a3d39f78528d5ef32df0b9bc3607f71756549c7507c7992fca039a419ffc6cb6ec4c8a0c9ac59f3be33668cc0ef81f1b04ce533813582bd47d1701ced9f158f6d6579fab547570ea8d95031c5a2cdbf7d261c586d6164b4
8601afd61e70abf772de81cdac4c42c422890725e113f3b45b2ad4cb62350db738bf254b5c77024b4010031db8b4888766355f18a2f6c930ca119e53040721599eb6c2110a056eca48295c6c12bc33bf3e77216deb1c710b7d6d9a49d1f82106fd496eefaa1971e990354a76d9da1e559ea0e68026f8d7152a5c2679c7bfc6
0896358708fcd2d83c8b749c8c9d552d6480bba22468aa09cf8249af82aab46a79fd9466130afe35792935c57ed646967cca72c3de194ff639c04f9e8c52ba4acf76f80830eabcfe1a3cc79771fb5c50580545454b42ae80753b9b188edff5135012121200830b2c67b1204acbe46a4f1624a31bebef73b6e116b0a8f295c2
101c7e46c48befdaa698b86fe046a185bd6a94c7cd0d79bf14aaf79e122b67f6da828520af03de1c9bd7fe6ca3777b50a1b7448b2cb2f61691b8e061dc79e9bde20ef0f67d148c9fceec78f0e608a919f1941f17d32ce0dbb25968acae1c75b4b91cd5d386879aa36114c4cc28774ef710299168242b1e21abe168149cff26
8c9c9e35fa4d315fd35611f4f3fba5de59d601e6270cf180e7fad603899cca8499bd6157c6a6a943c7f18af827d5c868813e3127c0eb6e2c6a4a249d2afa2e1db3248836b02bf1feb2195c588f1f8b0d780928b639a0e8465ae04517f12c40d127b2a0288025366696ada6bfd1212aa6758aa3d89f6ceaa1df6aa93fa92b36
f2da24acdb450be113c3529f2a1bb78208788a53b4fd2525b025b20b2465d4cf1de897351f632685702e5ef6118dd4bda8bfa6527c06c7c9ac3a74b4906dba3c767b12f8dc922604490f85a05e6024e51c529de4c0653a43f22197d0245592d7a10fdd41f23e2077909f23e4a37311b08f80f5cae9e541d9e4278af8c11bc0
d428373724e98e49955ca385c40edb07ad2e20ffefb273983c8ce17cf85ee9f8f3db4d3e33e639fe1fe1500a6c3f99d063f947c8db131391be1916a5828f708478fffcc694064f94197c6d905754a23b6f506d843a6919f0c831c4e618b94ebe9e6e2c5546fe5763ef29ca4894cce3d0099a3432251ba44528cd48c3791afc
8a1b9e6a71eee87382ea654fd56eab772ecb77cdf604414f58a40b76559fb1db92354f44f10adf44e697808950eeaa5ba0a71b0104f7eb09b478d20909d02cc101dfd989599a4a9931e57e370f1b848e915c9475766026532e3d2f3733017968cedc0281a4b6899d1d986ef161efbcab5b277f8734d5ae3373ecd99a5d6afe
5fc70e56d469ac021a006e1bba384f026a226886715ac8238f2ec800a1d14843893adf3dda432c39279901cb925e01b7e44655e5b3e7c7af148d9266ee616bb1e4ad1fcf6d93c3c6aef252cd7e1e8d16a6b70bf8d20522961cbc0c6ef093fa6c0af58accd5a0dae12d02986a4a34eabb04acc916797c596e78636d60682527
ea6acfa9b7eae3885be29f9e7c3b99c59e1803e8a929d2256c61684ca3e331ff3efeb86ffed6351387cda9a615d278365e520bed5f1fadc9b52163dbd19d6a029c7088ffb5205526dbd5678f24ff1fd77ae2bdd8fd11c37d14e6a7eb64e810f77a4b5a202a34b8230fbd8f1547f4fa83e8c3b02a6137a252386b2887285192
33f99fcfd37dafad6d01b049ad35c9da521848ee9cb1ebc158b3b9bde9d1a5d1b1c9e516ca15fc16cbabeaae683eef365fc8eaa9189bd13993088d93274e33f974814e0e9a81c5ff7f14dd712857b3e42baa10b6eaf73f325acffcfa9d5e1649adb250ddc11b22803d249116e7003f77bfda5758ed4f9c8dd1d806d790c6d7
3a77f66ebdc4249af768ca2a9d0b6398836bc8ace5cba9ad3f02e3f2fc75f4dc19dc3c5dbda0e7b0ce6702b782c63bd52ddc582cc3bf103429136d543b382352b99420b73a80a85538048821974d4f9589fd75b40c559c7aee0a505f7caa4fe89360bc6ebca0a18d7746e9ba7eec9cef030045d663d2fedfecd9432f99f107
3a807d44f8f1b146056d4ac54e0602063e815a94fb7cfe9633cd0ab725e46c2f46db86f538bdf58465977d4f15ed63ece7709847a1d2eb3aa9cbf859e48a6217736d5574888446a79fb0ffd0ebf16dbcad7fd7ed01f978e10c549f357fbae802ddd372874b70465ec2d433fef75b19e20cae21fb97e31b5ef91778b07a8c11
c5d6f6fc9dada09715626d55a6a95c8216db12a6fe7e8d7b9992004bbdd8a603b121b2aa3fac478169f08192576bb5bac7b709d76aa859110482ebec5b25569c8edac135d59d998a511d74d591b5b2a9ecd1d25c9839cf20c706d8c4b87133007a67d766a8d6b3c0c63decc74880c846e2cefbd457f0020e6f62d360686990
cc1f77670f41c758fbc2bc5dec91eeb0c2334ed82480d322f80a180968cbfc6fccd9d0429209033f4043c6c5b97a01e7a017fd5aff52de563f6e15bf89a25401e5d4186d4f56bd205a305e390c5e3c860a92be5a33e027545b66fd9a7b73601c5dc15b279f1a6eace6314104181c51f28a0ef0c5cbac15e0989fba8ccd9ba7
5f41160fdd8bac28eb449805fe8d7c732c3446ef483cfbab6e6bf831c860695840ad9c929774ed57ae16644d830a5141e3b5389f2aff9323fbba2dcc1af804b43995a287da058f3b64e9c44bc4df6eb19350d8d875cc8040c36d4d58aa1c58e060462452cbb42026a6119b1bd95544bb5dd0ee75f08a6223e5915a73f57ff8
126be9efda147a8d853fb6a9606bfb15772671a20fec194c17563d768e72bbbb238905dbb8fbca7fc6545ec2c2636e6f57fc3ffa0f5fddce558c567e673ae283aac3d05515025fdbca4c93a2d84c035ca570ba2ade6206caf8122b51fef5dcb1043aae9a822886aecb1af3dda77db7630c0e4a8b263b127cd5b5cff8ca3dcf
80d4d0a12b4f7af34bee7c27fb908f3b62b3426782f491253a56abf97c180f15ffb6ca9881ce478457e48a892168ea6ef10c6459bdd331748165aba9271956dd8cc4e404f55cbfbb0186c526e17793c773a11b4dcf39fd3b83e3373018e1b9fd97e8ad680e02647f6b9a6ae0d3a39af1a1425657d228fe6ef43d8ca7f394ef
5a07cae23cea265688c3477a679bdda7f3df8b8d6b5d1ae146b83e3707f7593981c3d7a5d821327c7f497f34eec91cf71a8eaaaacd052c8bcf4df358c0ed519ac3758d0dbc5e030b4f4803ac7f98a81b31614950289d6dc5598a1d63b7e61735551fa0aeec855246a6104f2855c1a729cdc25d0392a98c2058177e4379260a
be8c2aba10c46af6eeae994e084d2b42522152f11762ff8fdf06b4e9adab19de6fdfc4170fb3ee2a61de427d1e781d50be735ebd45978a2b10837dcb4068f9affb3b0d503d90d8e5e2b5c1080ce776c5b152c90dae9e22d8f8053feff841525b1652be92650f33a2d9bbd9add9d9e50582d0a9c94750cdb8d94f4ae68bd27d
e7250a7541e9f2b6dc96117cef1c21c41d1c0bcb536e0c44faf5db0e7805a7c891644ec9a18af78d61d65d98dde04a8b6272c7952dda486e699b199cdb0ce8f1dc2a5e7f30b478808f9b46e737f68eb114464c18e50140f0ee869736ccb7f8985b8ef457c78f8a36ae3f7ef3dc46967208c0e04cd2b489228feb898cc45ff0
bd44618e35431adf99a12001124fa3c7b4a9c4bba0b06d7966bf8b63a08793be855571f31d67ea030b82f62a123abd1a2fcb88f645ffda6931665326cd2669950cfee95b4426a38ff199e322631ad3ea2ec7862718ee776072ac09ad88a7109018b9bdae240892eaacf750ca701862857f68a9ca1d74222450e97446e0b80d
fd45471af93847b09777f0b0b147b29956a3a39026ff602b61e28e7a44309b0249f6dd06efb7c3ab98e112eda1f1386e992e78702e858edff3e8a0c766f50de04a5adeb0ddbab66a143362acffcc62cbfe7a84e46b59c745789db468dd66149beab322ebfb95c63f5815855c935ef29e1d74b18ea699d4138591d327bb1dd6
d9567f3c1ad4816ded30ebadb799a448252029bc6300c400f109d6ae535302ae959bb69f902ca6d28cbf2fecdd760d8718b6d42f25e66d352e809ac456a4dc22ebfc6aa895df9967467d936db942ee3121cfc9e1b103c46f849574282b8ee71de8c42af063541fb9b0a102f3ebe7e152dfae47fc39f0089324084a951c32db
bc42aacfeb312991338751484e8bf6023a9e860555fb5e18ae8a572d7789643544929d8d5a1bd935349fe2cd868f76be27e6e28f0e76098dff01bf23d4ca5f789ee4ff92c9e05d53f32535cef0817e5e65a52030b0ab9a6494cb39bab2fa32ba5b2e812e8b1ab7e7816abf5d88ebf24b7e6adfd7cd317df50b2f82f29d0edd
db5211c90579af8bfbb85912de3f158526420a16cb589f64553478305aac8a93ded2903122c7e94107155aadee267cef06a9c69b3bd409dad972550c728af303a5bbddc5e8ab6f5c98095ced26288617da2d6c059191a576145a0b9071b6423cea6e4c391d2f8b4963e6fa2dae848b57effee11cfb4982be5a0395c094542f
70d6b600cdfda33d8ac076e353f88b362c488a92c342b7b7cfe5a22fcce270f5ed71d12cde805e6aa6f6741f7100b859706746fa3b8d06f7f8226bf63d9507f0878d93cd9727891dcba5a3d5ff2d910f340a52b83f8c305bea86ecc436a668101857b3e5f29082f1091d68c929525b43889a7b5d34b6449d8eee92ec42eafc
54ab32e82045f0a5f0ba869cf502a8245d1516fd9af202fd5620816e0e90ece1d4ca01b528d85d1127b17fbff9f53eb3308efd6bcf782f7f39965a2609d1e962865d528bba66b1656bdb9a207fcde6fd79fad143ac54be273b67e471848483f94a3284e510ff094885f2b85b27887bf7d515574554af2982d7c99c7c5f3066
c8c0cf0ae8b7080001b5ba578391418ffffe4618592701c0664c21cfb7336a6c6f39da0e301338d5bd2aeb8eb71e0a36453fff3c8b47f4d5f0edcd7326957932de65bc506a88ba30b0e31f5f83812808add61f4ad7fc27d8a5d3376f9f7b61a7da55f03057c95656c62429b9923748a239abc765a07d2daea11504b32b4bfa
7e4726362dc628bde82bdff675cc539b30cdf1cf6721c752c89e26bd9399934699d025d1a3d42a6ae639ad114a1197c3c0f6b85dffe16c6d0838e9db6b5282ca1c00a56acdf8a80a019ff44c995184a5e93daa4cb702bc4141d7287ce299bbe97a09ef2a50d475eeb360c46af9923e95714a649e4a03edf92dc0348edad158
b086c38271e44576959c1db5ded16a4b22b3858020ddf5874b3e89f8c2d5af2229b02acedcf1fbcd1736c8e77d813fea8162651a83900a94f4d56b56238d5e48bfd79539a91b42178a36e9a0ba34aa7ac7f44a2189321c00bbd070171c3cf6a27d5d3f49eaa2f271da6b6a4f4972676dd10be058dae442194b0ee3a4dbaf6d
4a32740841e7b0c7495598027f4d726208276bc1b0bcca6b2b33e919003a1e5d56ef2d5e9e6e38cb83ccf5a87db7025e34873bcd9879048cb1bb5932bac5398cf91a9f277dff5f24ec36e68e024f3b775438a40d11dceef1e70538b2a876207f0322c12d5c3cf6653a969752782c5b968412e8bf8c0121ca70a227f4b275f9
44a805cc1415e90e2dd36bac5b1876b2e321dcae6ae515e42377612e7b821f44350fae1f81a129b2eb4cbab7bd5fc3a03046d00504c65a22eda1481b745393f0ac6ff3ad29e75246b6e19d6179678f62635bc573d4bf86666a30a72a738daae93a478de679cb3b348a3aa8fe918a5264a7400dc03e9e7e0d5ba356cb13ebf4
fbf662acf3b3d3d3bb08c0618adbad3638070cdd57430626e47957d2a4cb669da76c5c36f4206b1a6dcba6cf4bf496b4d6d91123285c06bbe89494176094729289f8a9e713463262ffac989a060ba78c138fde08de25f08b7b6e391b728b612c7c0afb2cf6e7fe883ad893120ba2a2978f8a9d462129eaed2013f1bd3271ad
cd2afdfba82228d6c1bce2d974d96ce220a6103cc724f46489c1a3fe57b355c6c407181d4086c3bc3bff0c1972008728dbc75b7a25a477ca5d47532fa7fdec7aa0218f5caed98bd3d9a0e7d59b8a1bb041f1a26fc3d13e381577535d749baf6f1270d91eab2eb478e0a930d90cef78965e5424b12867aa3ddcea9d7b352a09
a89e32f687483bf4e61da4270f309b134bf1dcf314d9885db9571634c7a746355fd0c82af0374cd768a2fa1aab64dd63fa1eb3da9546d8fec02a684012e9c9ca9c5534f694858f463cfbf2b7555a05e924b857aa3ed99436fe7f955f13e3b98c24e2f482ae4c98646fe2bf9724c1125660a5c9fe7275e7229fcf49d87066ef
d79af3ac00686ba858e3dd547d1ea7e1e049461645214fce00e24a6abbdbc1b2e2f44a0b7a92c93f329636f38919d677d84ddb1d84dcb95adc43277e6acdb97fdcaa9928b51caa5439ccb5c02bdb29b92bb930f9e40e072e7468838ef6e5ca9916e006f35bc21bb4b3b16b8ba084108916961f54fcdf13cae16743fb5e74d2
6146500d726dd654151c3c1c5aa479fced3e239c18de7a2576ee14d3e40f41abe305bf81085ac166e3fb98a10f4ad34948e3ef7902490eee26f7b1ee79124b7b39e627e936ef8692fa3596b74ccd974caba51b358d71222930356e498ff585ee50fcf48c4c14f2917c4215c6df7f1bc30586a7dfccdcbf82e0649c59ee57c2
354b7e8959c8d343e57d1637402ba2bafbb58864ede93d09cd865d1728456c6f5e1c61995f4c1c392ecf76fa05e95ce666d126201afa1c110ba644b85768398a01a69b276246eae60790afa7d00d734ad5738535431df282a62b88c5235ec55b3c4074264718d6bc6f3d34659710f870e369908f458bab6cc8e7c90e27459a
2957df53688e4ae00bdfcfd70e27f808438f4a01e32d0657383fe532674bcb13d69debdc337d0cacd8ca59d33c65f41dbe58c71d94008b7f6b165049009614d2bed432640b33b16da4697484ae3e14c0ed7ffdaffae2e6348bfb812833958cf0cd0dce28c04aea2cc8f5a87714a148dfa17420264f20c3cc1155b499a2ee7f
3ce7d734a14f70c484d8496447d8b9bacafc877d472b5539b3f3480cb7c543c8db12daa8264320ed00385c397e6b6bbe19120d9fc7f1b9c0663adf30096ee9064e5f390dedcff952a9c8b25afea83665aef6ac26925efaed1b726359a54fcda3c314e96e15b96f58140d198ffbfc1f885b9cd6a7d8e1ca9d4a8bca25ae7f22
dfaae42432567f850dd14c95cb3df3c956fbb2207d6f19c5236575e5222826d1f12f1f242f8db6c003808929bf886a98eb3b0b98e9b38cfb2aefa4ec2d59fe87f10138a64157afffe57dccbff2b41d0ffd32bf53b0aa81b59c7335db6f1abbe13aa6212bc63ca515ff8f1078abbd4d7deb712a4bfcb5a41094d4abb0ea50e1
0a01b33a638a8919533fcbe4bae9d27efdd22069330133bb48e82d1a97e4dba83011ee7a336a68ee78d9d0f65746b87856725b39d96c8b6d257636b85d41d9c067be2ac896a8f4ee493bf774fef14a2790cfd9c4a060b16f69e64558afb0cab1ca5b5dafb3c0f32296d67bd17a0b60ecdf8957bdc7bc56821dd86cc78dc6c4
5ca48ccd8c341bb6dc121f50656c6ea7248b362daa832a3f737afa7e711e0656d1ff9cd8295cbc6541be90801bf91337e9d95b0279903223efdb568df0dd064b97f033f57789187f1ed1b8f670081e0dbeff5489247f8aef461eb58b6154237ab6ad2a1091687df93516ad9504e7ae5b4e524524c5c08859202a513fd1923e
660916288fee9978aad1d6ee44f7d13bbaa30b2a4ef1bb23254a36a8e680a9f60fdeaee6403e2a4f99a68af75cb3f87eb83cdcdf3fb58e9e4d83f1c6bf0e62f0ae574629254a9dd05776a8320318fd3ac1154132eeb2b50cdafefd732036c1f53250933444a4a6275d346a11627ed1240ac86b618b975477b91ca39ca88e6e
69c24466a63050f9f4e84f871b9fe18f86d24d78afc43e0891542a407065e2a43848f000dd756ddff49336a2606ad45d706747c57dd6d6f316315c70f12248c8e20dd4e00155845fbb2f15a004af4c3261691664f0df8e11387129a57979734cef6adb0c7ae94d4942ac128bd0f0fd6df1b9d687746c4e78e1dd871a9b9ab9
02497acf97f40e42e8bb9724f5532ebee2724f66edd95fd86a741e5f61dc3e28f3917e52837e761b9517f9ee4faffc4a87aabdf4534c849a472a90e2440d64995cda59b498ee48caee61a5e2a387c313694bf5a586ac50f63db3f695df6f70c96be51fb989c5694282de4beca5efe43ac623b5d5f062f917f7cc8681cb688c
e4ba47364ed1efedaf89399b38efa90e4c966e112f147a8342482e78d0d6ca0a0e7b31d214a343fcd61ecde0e54f3ea3eff8d6e3dc1ad5e6c72a0dc4ed4346ef7af9842a7b187b79c4d266993b8a6d079109fdf4a4755e4ac1ee052ec3814c61e7cd72323d507646af1929af69216516ca2b4715acc6ae980f58ea0849dc2e
1326958eb903ab4b2659e58c2bf65717f84fdf80588f09cb93d389418308f1ef5f9e05e6ebfeb47b96baccc643360d7782ea0ce5d6f258fd85094cefaa68cec6ca2ac680f6571005f9313a60916dcf212ec5e94ecb2ef74a76f952ed2899da25e65f77119f85f6a940bc141b8a4319aa412d8c767516c928bcff9a38f23777
e9e98290d4e56f1e680b2b360b2e97735ae92809fccb36f56ddc0fed608df8f3c7bbfbba39b2b4ffa64da60c80e86901a62fec0614db21093708d9a786f3070000d624c60fc7852798d149137ac8d520f9e8152c60c6433adb35dde7633fdc7145723d93e8cbc807f707575b9d96c1a8e6cd0e078a25b3703857cbdd16e331
cae7e0f5d870291fe3f0cdac6f26ffaa755e1a0769f866050f39e9d002b8c5cc9e2429b38469c03db2c2cc0149c29a3d7c5d9db620b9e713b7e2f1d3fcb648d1676b6eca3768f54b628b0c8304cf0eb27333309360e302c9b4e9b93d7b51e7c9cfab0bb56ad7d1cafef6ef98588588062df7cdfe185ad7ac14326452e4b10a
f8ba0eae0169c65186d9a1d2e32c044ed35187939b3fa9f460b3707873715dc425be0a2b038ebbb989c8ac01f237e92caaa5bae3e53840df41057fe89d885c92060077158f2a6b7139537d91445de7f6f791cf997a8433115c045e8204c0e6c8d9357ea04cb6a6de67ca9aec0fd9bc3df43ab25d7959fc4243b702126da974
444cd0dad482e0dbd54367b9aa25f462399933063e06ff22008fbca2ad082e0a604f5049ee4de379e3bc0a5170aa380a30ec19af1ae382015aafcc8ebeb4a1def64360edabfde99ae88990cd780b061d6a70599dd87016c89564672eff88cebc151d4a9558885d792ecceaaf784b1d803060e3d766fa1dd16053ad9f201b58
6c57a81333c0b6d0e881a4b42c9aed706097eaca564afee7a65b18366c33413f80d02c2ac6f103a950f81357fc310c4932c1602cad3d6833caafb04e498bb665e944b831508d32165cc7d6e4554eb272f86b3d83621732c8de3f9553e76f16df05de4f2badcf9c190fc6a22cef1fbce5c4000b5e960f3b3df60fe1b4ddd1e8
3ee30b4da1833f5b27f9bc3a0b8cd7e74847a29cbd618a5aed4c37e0da64cfcc239f383cfce3c07a0cc116413d61f35d3fe8c1568720c6470f161f76aa7af6ac218bf01051101dcb404a448a92578daf279b50d219a292fd4a8aff2ccdfd3f954ae5908f1a9894632f0d81086c7f4c0561633eb0fc5b921971b328c8429762
6d21e0d050268ff63d903eb1f1977acc3a1846652df7d620df839f58a95b3b82f49c1a768377e2189da7277c798ecd7419c1d0443cf8c3d1dea175f7a7174e17acc8143b1c9545969e218048350137abb743fa600aa755365acc2e9bb40cc762c27daa1ebd7453d62cb73ab39bb17c988864f11762a626dc8a3a7201cb1366
430df8958cf9a41ebcac8d9bde0221f8c7958144e15bcabf5e07b66b6c178b2d38c832e4db65bf78e01b461bcddcf7392010e60a85330293ee0481eac8e425706abaa30dc71d6a468ccabec5437257d168493f18c61b3379e9c10d4f06d86e3e76b37e5cc7dae61834f9343913bfc66b56e9a0a73cff682a3e4ecbac867e1f
b3ef409e705d99fc00856c82b94a48934a9b1945aa5ba729b97fb5e372283ced0efbca357037368743d26758d070f82a06e825e8fb42c837bbc9747844f923ef720e3c93bf5e3d5674ef84ffbc0de6a6ace8a0cc362508fcca275f62459249bd16137fe3d789a435ce74f7937833116d2494c3dfdc93fc869e5b55c9398c3d
db717bc7006348817c0d9e830134f1836c078313aff06a673be5c69e8123a8ecdae95cb9e98d3c13cd3f9c9dcab75724af8859f92c16c94c472e7e868ade22d4226549e8e693a0b6e34347f5032d1f0a486455b9575b3f50e0d2a158dcec0c7df6f3dd5c0848b4a02fff63b2cded3e7a4a35a566190f925bd3db1894e0eaff
34beb799ec16a7b005b34c43e418773b800532d1062b2ce7eae87a051b6d43b16500de6af28cbd293a0af7dfb5d47b19591b019f9d8ee44680c86bd90cf5c4e6d2e330ba980bcfe9383d5ac9797f98b5e39701f548c71dbed268697a30db172b8aca89d7b3e3ea2d9140ccb4870d66bbaffc1f487481c301d9510976c696c5
5003f1cf530a482bf3e553fc68fc2f95255e1e8ba1130f44b38986a5aeb4d50f2a7d789760dd3de986e1506d24aab33d8d5870c78113d7b836ca29711ca73665260263675dd853586f8ddb0bfd8803f6d3bf1a40d1ce79f38a8e352de1ff2c46bbfb372ffb7c198e3a5b3f01191d8ccae94977c93aab8325f64d84c6a20b17
4663f56bf3094838e97030f6b31a6aa6cc6f4cfe821c241d411c55013085976eba9739886d687ed6a148e9b30cf59e0ff86f5b664ec4f1fd605cb4851aedea471041fdabb7c297cda97e4e59be8ea6b99ff3cc707e1dfc21214d2b9ac66e4cb91fa05050d7c148cc24f8ea4c7985dbd4913e839d72f855df846a7f90863cce
03ce766cf859d929060135825dfcd14f1416f1f6c23be2d3ea1005ec5cbc7b35b81f482ff1571f2add4083f8aa2835b906e423ca6ec460dd28c6a209369592a037e46f9ffca2b191a1de902d344af3656ff293ed5e289fedc5cf3a8b743f23d5f013ab6fb9dd51c41e40d30139f28e2525ecf45818b327b9e282edc6f36c8c
c6eacc171a035c1206ad1c2e7238b2ddb730d016dedec8a1331c57999acea9e8b2e00bbd28f779c875deb2839a193f32001edc3c34449662fb8dcb530868641132d82f35fdd13558c5325808f38d131449e87db9e2da245f7ebbd771444987f967c3d3c6c77d995b535d24181624567173ead78fd7828e90b3c67171a95435
ad975a870f6b7c757e59d96b0af5b116f95668646b5ba4cfb49da333a23c6f19785744b2d01430458d71c1dd9573d8c89ac97328ed1e71738d6c5170f63bbf57a32a712e34e2fdb70dea695919d2e9b3c4e3be6fb3bb83899a6202fa6391578d1cc18dadb4ac5946412b6c7adc1ce22a85a3bc6a4ddc62f36e65c55890150e
e61492a914bd73b46c9ceee1f5d45e8f18df979106e362b7265c7aa8a9cc5d7a9e6da91418b46f2a82d724ed4eee2a2bb2a313f735c25c0a1992ae9b440fe151e5a8108c1004cd3710e62c3035b26e1cbae6105120a85f89129505600a7649e213b48166343e2a172cf016cbc4a52a99fdeb2c44f15d4984cad452fc184615
2efac3cb16c0201be1e462d2b535b16b9bf94fffd01ff6984638325415f6a52dbb0d0bd87b0f982b24ae80ac05177cdc6279b2fb51f288a0283e1b6eddb840c0e17d2269cb1105b5c0b03fff952a4111562e7bcfa9143df1d8199bfdcee005a90944e8decbfc606270fc95256cd9c52c2cc1c8565582bc45e8c9dddcbfc9e2
32fe1a38f5cdacec0af6b3be3076173e0900b66f1ef84592b3dff8c3a351ab287ba4015995d7af7665d1b7b51b643bba0d43bcbc3b6e90fa8108631fd620fbe341c9ebee1ccf57f29af62bb9def9f588132fc6ccc47f8c32e64376b2c6f10ea82b88ad886b252caae22c784680c363d670e5d1a985113e04d0fd250d66386f
98673c95ff466625e8bb5fb60d31ce1c350ef8594ed0d13474a8b2e83572d392bf21c85ba1226f93240d0e5479dc6a04d35718588efc0c70abd25197cf332f5e114f598dcb9f56113c6646b58005c0aa5371116b8ab94db7755a275c95ecbd99b568039fc227348f0d84f7d18896edb61072f6ce149f388714f87456891da9
63817b50267423d1f778ec7156fa6e5f8ff3cb969b0ee84dfe77fe931957a35c42913dd4e907d91266b9cb9116795cc8b0ee7c51fb6825143e822aff9f9ef0c7d845999664c884e12a69d5796ae73ce3b656aaa926e791dc849f5aee63b38eff94fbd58fc773847146fa401e7e5395eb3298129292e3f3f550e147f8355032
3c2c85813b138e35e630acd32d19f543273e193457b0bd1bafde6ba78ad98d774d96ac4ed87600b2036a40f7267f21698f82389bddca4da43f4c627a4b6985bd8d6b76cfe8790e6ba3fc8c31338d27d787b7945b1215f8cd82424883bd7aea7c0aaecaab26d9ae66f7a2cd01344143b30b1cc8bfba6a41edd690023ca5fc57
8060e412a85d5864fd3a116fa40b2eaa43a0e73e8670e577fc430e8306802e9a707a2b46a1c8b5ffc29351d5d41f1f5991cab74332552d43f5b72251ab0b82faf0f13b4433836c1f95258d212c269d4fda3e0f3e8f73b6410154c3120bbd1bb76fc25837068a9147f8c36b00f83b3f2f4243e5539d2ece49f978c1253d99b2
811f5615f3e610cf97af31c5f532c3234711c4928eb4f833b4810a9278e525672aef0fa3516be0006698e11869c01d7babe576a629f2f58ff46681c9638140702ff0fdcffd19d5a0fb2f37dbbacf9fb6360d62fe4b85866ed1832a9cb69ca35e05d6c6974232905e882ee878073a6f190ef7e321d545ebab0c4efb8106337c
7c9fced1735059e76b8f41a2b16286a28034af5f89032062bf57b12d486af3216dac0195e575bb030b4d0c4baa2f9fd30cf6198a1a058878072a82239e917f1c5e411619230aaa9f1db2537f31cc18afbf3494a3ca84897b8ac60534e8d42f7191aa9117bcb2bd8625affffc70c5b724743a94fc9882614b0cf9909e0f7ff8
9d3803c5a332e372fdb0e9aece735f18bf7d7ed8ec9232faa77a3f167dd0e8729b84c0373bdfba95e265eff33a6330cadb07281d1a7b5ec98b90ec8a3d8a6f5c14d690909b60f2faaa329892b32e2901a2d64c6be5280fd642b4d968614d701ab2d882f3834315f54a537a179018f1a9b81176254b2bc4301944afa26a5e88
fe131823deb0a0c553200a61f58c28ac9640f258fe5e7ebe028d449e3119fb05409f7dfb2e2190f6c36bdcd10279cff08e2cd83d6cb8e6de18a93751b0ffd1850cc66535b4ddb90a0d8a9e05b314676809020f692cf43247116de42e666711d86b502db6d043d3443022a16a52b8605a0204eb380a2fb1932e9926d702c7c0
cd3267d9803df0300e8507650cca5d3ced506c16c05355c92bf07d2e1a28a01c8631966f83819232ce3cd765e5776368fd36a21fb1d24bcdd07bb890bc1dcd5df456484f1f5a225cd29768b80bb71e38d4c7bccf5e3786937cd365beacbf52dab8f82b9f8fc6ab183acfd632cdb17b8527effc707fd66d1f7f92a36fa5297a
76110ac39917bc90bea20343901065d1cb677610e68322541abb3f2164035b66eba49f7c23d7a90cd8668f816f9e9eed934aa7b5d561761c9422d55d09d9fa5abdf14777344566a0fb7d33661deeed9b9cb984fc7e47f64fef8400a97565a597e5c32ed8a1f9aa09d9ff84367ed39394a7c8222d553aab30e82a2364df92ac
72f064214ed347d5a57540e4bfbb88f99e39a070518fe6e8847cbc9a94c3514cd019e549c746c20a101dd1c377333d9cef701d89eeb806fd5988dca991999e6a4b30ab6c114b8f9a9c8d0919ab2d8fc4be40bc45816592debd0f43fb7a731a7bb3f173b81859fb96631bea5aac7c0dc2756f8ba26457b881d5868ea2c9c05b
4cf03d7ec0f09b4f61264c708b76ecd65336cdda0176ee070529e79b782ba2cc3560e23d99b57e24cbe6a3f2c7cc82791820bdbd65dee6b1f2c8f945a179b7b30cbc60fecaa92287df47b65ca61296d63d47230233b649b7907db04529ef7bc1f11d955ed70cc72a102ab4ae70aa1ce979289b657a11a1fa81298e10e60fc5
14c27aa9a2f644929a036b96e18529375d67a9b2b12eaecb3e0e8d90249ed2b29575788093723f9f0caff3a3141e2774eb1068b6e18e0c9b91dc3cdafe913456049eb0a4880e8d29e6e8d2a70a19bebfe4380e5cf28eb7a56217214db0baf8a899a7d407aae05f1ed2bdd1fd6edcb073f283dcc1bb18939ee0dd8946453fb8
d25740ef0d70c5acd4147865e6685445c4bdf31a15d1450348258c5a1b269d3e20e6c1cc2ab065c92a026b6f0c4474d469fb9f7f34e1cbae6376f7c1f532da60fb01b20fb83e0846c85fc863c6b1e71e1de1f00329e6a06e8f54efa55d75fa30a68c71d835991365fb5aa61bb2dab377840b4e09d3da57684854107b1a5df7
8b7a1f71b094ebd39267d8d796d5feaefb8beb23763d2384340bc080a11f7e9bd838f44b6b4608a04540423b624d5515bbd9973cf6db0162a8e205842d61d3389648e1f0663b7ded2c979de72b3cd3eb06ec51767abb4726b5ba89494c853f8a22d1672c83acd7be90dfa8f6e256d79734758848a4203a9901f9ed43a469d1
2cf0f7c8873bda9e4fe0832e9946b5f0635542ad46ff4eca27e60e8154584e1a9adb63781408a524be0a3f7cbb35953aaa83b6c91434e3c047b0973470749ad684d5aa0bed86463990246c60dd553d7c2df2a80d2e2b584c8d7a0228d767f99f5a3273d0340077bb08d3dfcfd86086dcb3725ab432fb7cf5a9961e2d30ca73
5068675fb803bbd2f533d52df0e46ece9fb684bb658870fd04990df0379770e9b76bb392781821540730bd7d2439041d5a2f4fa62698a40cdb14d34ebbdbcd3c645c5de107a45fe8d0e227c7437d8870f9a5c278d411942d6a1d75bdb9ffa2eea2b8d2e128008532a36dda26102852364359a09fab017027417fa778d9a9de
bbd3d7340a6e81d39bd53b496afd1f13a33421638dd878739c3c4adbb0ffd6c5352acd0adebe0beea19dcd2895ff2fa0b943dc7651fee0ecf409666e2e018504e82301796e4122a6b07acefa3a6f9f6609b8a7403da1b7ad0255486d16e60e069bb8994c811f15454b95c2ba302f567180b28437bed1645bf367eea2d844fd
a6b7306b2bd50976ed5a2c7c28c4e88aad138bbbb6587efff9ba38fa07a8f7ff04c1b175f8a75362f9de339d30e46a64fb6f2132a5c4f50bfb911eff7f86e5eec1d31b50706e158391cec9f7da8a0942383a607987cf9ddccc41d506f6006c6d21ccea3fa5b8e42f9a452b677221da73be4140c9e9645d5563e8d62307062f
e37a22cb76ec4ba8a131c1da54102c867db55a1da0311a598e07adfeb483d67b8fa880eb2af0c6f51f3312318222656deb7045555a229b6b70be07289a8ba049ae70bb72f06829beff0876b7468a3318198a0e93d7ec7b6bb5e759333317766644b5e29d8c89d500624052cb0a03edde2e53fbb9dab9a5a716bb215a9d351d
cde63544bb3a02dc23b7f61c60e0105dee72d34ed2e1cc1632f3e187c2013cb9d5140d62a7185f44541383d4861185fda5735a9ee56c880f0950e7d0d5afdacfdc4bf57f067d030a6ca269917a143771552e1ce51698dc816a5a30d7808119ce0562f20cfd4e8cfdaae03ceab5a8aa374bc7bb11302f0594446b58a42b8f43
aed342cfcd86c08dd5ea9848009f356a1179910baf2772e7ca14f5b7d852d363f10c04d0305407b80eefb6a6cd30101f7bf631df0961ac2327f072a93d7a93cb4a9163676bc27294753eb346cc984d8216b598c973354e0ef74f5bd6bfa7b125baba75e3668afe8ac87942762887fe0ed9052332f641326bef82906affcc07
01b88095733687bfacf8996c4f428bb2951cee096aa74469e62d2d4e0e3f3acd4568a9f1553c0f06572518b6b327199d7950e8e5d313baafa2ba9a18aa9256c28432eb36c00cb85d04c238cfbde0c6174bd7adeb138515cc11fdaaf463a460680e7027f9134616af7d866185633a241abc86f52d60d1eefce1fddb5441861e
90470ef9b209f7e9d31f87304cd00adf5a939fe280013cd99de7e5e84daa874d030ab28b7aff9085caba81d3de1b08bde9ecb501dab675887eaeaedb49ac57e189d8ce25e99536d239a69d10512b36ae763c4a7815e85cfc6341f3c168f7adad9c65826bb31c3076f75303ac388206fe256c9d8b0e93ce17b3dd2e4bc6abf1
e98cce44c4e4fc4ecb3713b48dea6555141c94a0b20989aa617892ca0e2e08c94898a9e78fb0809d15d4ea4fe70a2e15722df7b877829b7fe9a9336f7d5a64b4aabc7036c817778305401bfcd95964088f5bc2f4db856fbe8b7c866dcabdb78f63e7767bc13850bf6ee2533b8162724cbfd1b1bcde5227cc9f92db6d7e12a5
bdbe6435746a7527f656ce5feecaa0daf36110993b8c6c4edf6eb9bc569dd1622727345ad11b50311c297ff02405ee63febad9a59a6cfc34841b6c6bdcc02b356858f03be1834f0eaa61c5e6d9a6a352849f9dd6e9ce61d4f58fcb80e5991aa2011c9e3853d3cd8740b72940e7e080c1bf05af9948e20da50b3e3cf03e8769
0b61161491a2b7159613b485239db2297db135107080a934727623930b81b91952e4c100cae29d7346df286c65ca3c48296321643fdfa59766c33ad81bda80ee3f4fd6d24d15b4b31eba5a1cd8a6eb166466d73a78c576341f5307f5d0d76d208a7016b64406408ce095ee3b4a7cdb613f0a3c964e6537827506e1cad558c0
f6948569403dfd8d09a567b66a5874dfbd2f6737419df7de40ccb37a96bec1de92f237ece64101e588bafe72cde0f00333f4852a2b6926e0df64dbaeca37ae4aec2f786ef75b7b7cded3f74b4ff010ba868e12f93a2f278e1b89e88398f70561660099201f0a7c3c2882b4ed1c23b428f1e80e39d69fe931340bbcaf69dfc1
5c91f77b1f409d676d3bdd6bc25a6e5c8dc122339b1860b0d0bc43e2006e2810e167cc3ee8afe1c12b03cf6e43647c019ff017b08308f68829087aa4e149a9fcffb1285b0f9c9184f97207b8841844d5b46709f3d2d1ff1c49814568bd54cfc28630571388e321dd62dc2bc852fc759df95de45a1d12cf44840dcc24abddd3
62d66f8ae7412dc470f4164525d4c324ab68b499e828bd9adb000361ea66f0e69d7a8f9769584835c0722289aa676410992cf5da5d229ec2362b228c72b5333f727de39002402833bbeef3057af2db7b1925666c60c8f533ec402c7c6c02f14538bc85d29e438db5b051762adf3c72b8751580c5c8d17d6422291b6bf54e81
1acad049a579e5f5a425688ec0ed6070ef41c4b292f279d4d73bc5f9bde2ba15a625d7ade4679c0d42a65afa855068bb23925d201c1bcb62807f31b49216e5a3a36e244dfc212348f5ac535eaf6b0c4393f0ca27ea720690a43bd2579115def95ba9697eeba670e81939096d669233da467a6b196b081b387233cff8c3577f
f0582e79ac819ed07e5733994c8d51c7b36c22a6ef7c1528b938fe8918fa6d22aa320834cc8b6e36fcbe2ec5479e1d99734a44babb954e09b99766da7996b9d884e6d751f3c2712dfdfbef517d29658ae8f4111de913cf610a8d79242a3d0443c9eddcb6ff2b155f3d1006a87558e42c887b194d487fe6a03b60421b4f69ec
ea5934399becde147ea72dd755c29fe166906cd9008a129fde5f263fb6aad779e8008b227803de93434b94a70391b345c8033ed3a30d93d436a14afb80e65f521e594020876af7fc467acd32998585295ebd7e3ae2da6a7cbfd564611af4cc6044b60b7b82ae6dd9b833eb998af14e8cafbca0f645749d88cc3dfa3af7c2a2
48969e1ccd604f0e61cc5ebbf45ab29f77617a75dd79c679cfd0c27efbff80b576ab8673fe1e0b39f8a1d835517c2cb0bc43deceb367055683060841abb32289487ce3694a363259b2a36a3fa8f8f25a4e108f46e4a7b6f0fca1b66510878fb0e0978016d17f2a533425c52802b1e011c8cafcae33ef4a78e91f6a4c59c4d4
ab42133522ac61385a0c3bb51a332eff1bea10e803af67cc5982ec301af5d0b9aafe21410024bcf744fb077432aba8da43f3f1eb96f3da392678f3c3784fc04881ccb87454694728411eef07460ca2aaacf8a3b87da5f211ffea21bc7f4bc5f6470d1cb79db3622b1ae2dab490eb297b175bce200af7c8fa89f902d987cca8
8cdb6a4cd4a89769435fc027e1e982ac777a87ee3da190519e57a6687d8290891d909e81c18a2df77a7dd63a1b98f9a02d1fc77622fc8022daafc6346b56a6071f77bacac73aaf1f852a9f235342967fb8476fe27212e11153eaeab603c3824349b9dd65d69273d3213222fc9e2ff8fe41a9c55e5412c953e53fd3c2f8235f
de4b206027315673c73cb929c7187e1455de2f90d555f3294b42760d8efa2a9ae7b2daef3fce4e3344398e08b691aa876442532674e768425800750bd554e390a723b1ac232639acba465093136cb8c0b5f39e2cea0577d6b63e120bfb77e865e1bdd7ee206c3056b28302f263cfc9c188a0aae21452a73781e4b3adc4f4b7
f208486042f58e1d101885dfa43acda02fff3dcf34b88637c25815f67e0ca415b5010668c84a093651e21db8f5b5f19444aebc092b45e81f13b9e6cb00b5670859b67776a408685ecfc922a0f28fc368dc0d7a2926733811eb9b9aebe0758c72d78a9bebdf8559f8b3cdf5e2fa009d036794d48bc9e16794b0806b6cf20800
452e35c00dc881550955ec1db9458aa210aa25ad7beea9c2c378b613ac2d1c6a3cc1d2ecf4732ebb9f8acdf2488bf89ba6999de48727acf3c37b30b9a26a73f954bb0ad8591626fd457544d9f06aa8ca2dd155c346863fe3db5bdca05c563d12ae037f17a4ac50c5e1e5b4d756615e58adab50180184a6098bf561c51673e0
4f6d5acc186516eca685f469c118ffb4ad621f88ddd018835e5ebe7ed1eec303bd4c8a5db760fe5fd4a2eceb30772f051e55311352cef4709571607e4730c4b654a60168bcb6f07f68ce9adb3389676ab85696fba9e5e96fd5999f0b9c72c35b64634f772e16cf97df25b41ac2feef09628f529224626263ba866f562d4418
9a781a3a069014506ef5af7ea626ac28698731d35b3ed5d2d406cca0bf086f28775c428f9276112c99d4848f96ceecf0e109974a3ad93ff791dbb05fb55ed4eaecce38a8f8d496e6645f59bc13df8682ed1ee5477283fb158db62a36c9f80c58b38dad515b4129c823d45a16a9d87c6684624fb897a17abf5b2593e1300577
ba98f27d499eb403d1bb313744259ddb766e8aa41df6b0bce5f8d960ef1fcd14271ec93575b3ec7372b59403d8673592af6bcf7f9569636ff17588bb0ce3ef073308af7f50e97fa10eb24015a440173e980fe315af012f10fe2d2444a7ce18d6e18de98c0b8cde96ff022412f008968fa344f7f1242ef4d446ebd9ea074ca2
4121300e083dd161c20749e25cb3ee8ad2bcc8fd7820015d40692eb8adda6f24bc568e99031d02532c0795f6baeb0ba740ea79735c8d94088325a0fd8c272e8c3917eb6bd076b8c4903891fb00c54ffe62d86be7bf4053deb13915a21fb00e8ef42a3111b45a587b141b1ed39a8b93e8e7fc670945b8e303f2ebdf78b64f57
d5d166c9f0cf67f54a920910a6edc8828b64e85e27b88fd3a95e3487d5008dd2e6297dd8d41399e98d19fd2a2ae1a9fde7f8092e394466c63213be1dab8098ed75d85bcb68d20c7478deb00b046c286ce4fe127e91ff540325f8a9746bfe3bcc53820fa8c95054614ab4ac4b8f9ed5705f1e5413c6a080464c7d10b9fee428
5bbb093fc037c5f4b2a835f78cef64c3df0b7ca8afd9c7c29a9b6436b5f1ca9006b3541288f0c9171b152bfd62e024f6ff7fd92b659a67e7ea7096fa4a93dda0ed7bb2f3c73286f47e8529e93d5b24dab417f789f40a337faf04c5a4e7179323d9e59fe1a4228547771dfcde6c75ec71dd423a8e6f048e2abc243665180cd7
24538ce0d523e2a15dfe6b77210e115dc64309c38283edd29faf1f0f2d3ff9a629fcae4b9162ddfe7728cb6caea0c401d7d5999cc0805537cc59d761344c326f7986fcbca64a0e668de2047284d450057e802849cf2ea444fcf528c3ac6cb68d96f41ea9021e94d890d3238094b066abac9dd5c8c7f67c4f2e4f724f154fe0
cc0e1f9136773723dd53cc5e6b17acb50c680ce28c4765615841a0cf3a263ba3b1c068212613dd0726117163b7002c349d3d6d2df588e5b5677d902dac1bbe321b526b931689caa1c355086dff595189a580d90c21e8d0668180c9e7b9558309e6eb9134daa53e3df2a2b092ffb44b64b22bc59c6fd4ce5f5459dc2aa0824b
14a722dc4c782b45f37111f1fa4be9d4c2be8359f8eb340bfddcb332319d77bf98fc03821628cc3cee50f5f37117fc155b61af715da22ccf2077c826b0615d2a4ed031eb0c22cbd96f307537fc15ad1c836194d4a8f8fe4fe644a4b4d73ba1ce0bc455378ee797877690343bd322dc7937f2dac95d570425583a1cb2ecd846
2ad54a7bddb2eeac1fe9b82884e2fe981eee59ecdfce1cdce4acbdc96819693a8e21eb6710ed8a4e430d7371d829aa71c1a89657451c6519fdc600637e28f6dbec0c99157ffc3564fb74395da1db054cb020fad387c1a04b375ee08bf2f08a6991f1d20187772885c43919f7db6e5444d7e62d8c2c87f12fcb0490c691a922
9f67686bb54c122e5d24e89b5f5bbb37a5ed2605aa9608e6c95c92e0c105576ae8f3c1b2696a649d81f06d6a1b5faa5d694019ccf1feba9d81fa4110a9defba63b3143b7c9f72461ce49e958c2235b92fec052c5384a3e346529bd208991b4b6885593e205aec825f4aba22cae511c40e3220761a6a57b895936f40e6126ea
4be80e32c01e3b40c2850d8ade13e4a165ea9f7d42dc2ecd50fc9ec4e9d9dabc7b753dd3d600b2d56dc7b2e8ff43d036248f34f74bfd4271ae2c36e1f39330d4b8855102ee8bffcfb93fc333f9a30f94fb73ebb406630ea44d49b54d8ce576bfe285c6a99bb594ee5c4310d4fa4af24b5db97baaac0ff0ce2f3ab44532591a
e117e3dc50d27b3553cc58d2570484ebc592fee5341c3ea62f8157f376079be2c503cf8f232f8f32161d94ed5127c62a827bf3ecdbc6a3c415db69da47c82789962b71db7fd8b79c79f2c18ad37c85b76466c863042de9b6aefdf69899a999f725ddbe1af279414064e5f6a44651a7c985fe8c8e4d9e73379a99b341cca296
8b7accc1768ca38f274c3d87eb025041a7f1ea9db6d3de1d0884465717e35de27b5a4ef39afecf7e37c4dec1f1783ae76735e973ae9d5915a1a0d06867f5edd2ab6809d3ae5060143eeffb15d22282ad5812acbc9e9a246fa0f31ce2c1d7ad332222fd4a4777ea2a9cce2c180778559a3bfa84e8401b50a70cd3b638362eb9
7e49c5a9435fe03213793bc0caf81efcf89a076f11e842ec66f3d17136083e5153e407f4e54a60647a18048e6f326dcd2c684783a98983fafa3e860b8f45643ba1d79cd1149f79af3b525d1b0e858a4cc921edc5137aa7e37a122ae45dd296399291dd714b18d265729ec01468ae0433efd631c85eab86d9b7f331a8ff32e8
fa6a2f2b35a3d5ff1e2fddbc5a1a67742fb70820022285808f9a91d0a52fb1c9effcb443dcc27d1083f7ec3a9f6ac002ae117f65670a94e95ccb2253aa9556d047390976b1be12eea089a36fa71bada13547b9f42325b3d9a63bae044e6ab6fae7f3e8ea33e176c24ffbed94a82426cfbafb3148c7100184eb36330b1adc70
d62286cae090a4753e6c8e8c912241f5360e5bbc96ca12f77726d6995d56d3443b4a80b70d460c7bc585751e59ab778e1b603a107a8869511ae9cd91548389ae646226936a7a6d63d74991778ae03e4104003aad39cb44240b425d745ed110a7293dd9cea6e3b25a8a95244a7d4737101a17deeb628a9c5aa0db34e3753bfa
d474c9550714a8fe273add438ed08fb4690387e23e1d54c4188d022053d86ed82037ce6e857a715d75841ce01b974867889e4cf9498dce0d634a3c6ce1de68433944346899f35952fa826e8823adf65a028f75370c48954ec4b25e704931e6127abad9dc9e1e4f2b2c7a2826f558a1e52079a3a5fec4e4c27630448c05a142
ba9c8786705bd28bd751c5efff46850c45ff712643000cd876f5faa34cb629f29d5c3daa5fa6781905bcbc0a815287c11c5cef4113732cd229e340beab2654e0a13ebf29a0e25f97f9c9580b837e9b8e54098fdf4576685d12e4e5bc04e65289caa6fddef33f01a43a96fef926ab6ad72a6ee8646da94c829b834be39fc994
ebf48f933f5b1b70276edb085898ec1b31e96ea5f5b5b3c7e63a9bf9ddd278d52d59536e8d916bdcb2f1b517c8240b755f99ba7ac99bd9c052cb46f80d9fc527e26ed55deeed817e07bc67d0d0cea1d0abe988405a1e55305744a46024a52c2a68bd394e20f4ce457b1238bd5e005007e125319905938e658cc3a7260bda9b
77c05fc450c52f35bcc8e78bf45f17b951af363114e79fa2fb0f1a5559fedaa478447c5cdf29912cd81dc315debe91a8ce6b9cfe308cff17e583713a9c5118220689709b16521198ba779a7d556d116b3ea14aacb2ea9e02b830edde586c079617bdef5dd65ac6babd60136a2c248dce2a3048e0d43006cbfd25c4bdfe56c8
0893e568cc3cf77151d7dfa66a8c4a008d45d7c47835556b4ea08dcd38b16393d1c18d8f09bcbaa091a3397e8710df4c25d57d14c70db5b9cbdfe5d1a350e0b44b8a089e27d12e0584a047fd472c7cf875c5467acbfaabc3679d1629511693ad57afcf9e4bde61240054fce73c5e50f63dfc35d4c2018a3c99faa92a22289f
d189e8ab435795dffe3309b019e00aa92358eba627956c6960b059a92378041bceddba076381545e4e8c3e54cda76a499056527c38b0d4b128cfdd26dca0964b4edd4df87c45382a59348132657f6556039787327fea3359288d9536d496f2712156d5ece381384f4d82896152eeb99048aaf50aca99f9cc7efcaa364f2d8f
d3bef5a6b7118ef3c05c769fc7736b2a14dc7e1e9e50a5d3a36b8324aa470aed360a34e53c7266fa28d616def2b984af685c30d13916e7062bcc43df1dfd70fa10471cfa573564d4cecdbb4cf98f5d67c821829b227d6cc87b0de65e60eaa233f1a519da21104604c2e0587340d38ae1ad950a36296e64ea0faf0093beda1e
d76ceba51b4aa3b743d83b22d87154f0351d84e51ab73600cf6877d276484e4ca832399c3138f73588c904e76e2b6a524fea4614bd71ec714cc93e29afea1d9e6f5753b4dac748514469a2429ae6f5a95c4ae4261a99559ed5f1fb79ea66b44ec01fdccb176328ed95d267843c5eaff2924455f1275a0c8f3b3bfceb3c20dc
e57ca5150f1c907d5ef99fa90191e753f113083879d51c23b035a997e881a7b8249efdcf27b572949ef51eccd033939a982a681b4be7905eba8905b31cc0e2c93418d89037edc8066df9351531fce657ac0215fdace9c70cb838ab5ab7218ff1e88f222dfd7b5d732ff5668cbdaa3d4a178ea00240686647ca296802ca6fa6
9be7892748b30c4b024e16bda136e70f1e313ea561839596c696276747a53e08dee5452ac72a3596c5332cd39cf54cd4f49ce6a8c86a46f868b3a21141c613fd815842a7790670e45f0c3d8011c584026b0ef11731f420a0f3a8532100f198092dccf0bcc6f0dcdfe0d56a987e2ec89b2078c8ab432365310c13b020b3cb0e
79e40c34883e25c64e4138c5ad9322c8dc226d8378dfe37cb97127682bec177b342fdb6be0a3b3590b2ddc504e36c37d86469e4a33572afef55155a0a0544be956cd6a91638b2551a82b07f23ae6b1ed1211ab89bf3da01fc37febbcfb8b2a423a67e8238648551654e62176e97bed46223440742f0716b62ca396986c5fd2
0fdb5bbc7ed98badf1ec140e8078356edf401a2b80799578d5b672bc1e168d6387074f236569e893eb5d0e6f4a603e516670b1b134ba51126ebc9b80af9d640de80f02e27ba51cf69a2eab07b464e60cd41140b3742c954df4a1c3e4e5a10c6c1331879d59e755389c7d3b2357fce6b81befcee2ee37a202a4126f8f5ae342
f8badb76b239a16551b4f09a08db626db42c5287f373c95bc1c3ab4874831d731fe60b8f0c6006a11310ea70d09feb082cacbf7a26dbec2bb8786198afa7c745341a6ef0d8f1883147a65765ebf6363596d8359b11ba1093f9a74ea33a98406e04be8d9345cd2ecd107480d59b72dcecc50ac387ad82cad44f13123dbc837f
852a9bcf959c86aba23009a7466c51e9ec03be4b8730eca5cba2092caaaf8ef08b49898cfe10f7e4b4324a350bd149e2e7683da9b6d9214e7d725514e57c822eb90692ac2aa652fd3a8ca16f0cd033146e2d04712101cd7cb6fcd47c2cbceeddf0832d6350949bdb1ece2b0e24c099877eb3570a072c807efacb76ba8260d2
3331879d84d841f17ecd1627d119487242787f0e9415ca91af4c0de129566d0da4ebe850ffba66f864462f53b3622130f4f98efee546e8c704cd29a619c3ff2817199f90d9d66397d1c138c8c743d13be2a887d9af5d9f560bd6aab8adb21261dda17f6e8b1911481391b1f43eb9bb3e8f4c8a0ea64a55dc209d2b5d0ad6bf
e687750ffcf92a9cdec9ab2b3b11cf0885c2055c2a859fa99f5ed866e541284b4d4fd462b59d4bf58cfe5c5f01d93c9d0de5b5b38640ca13d85339fc681f7e9dea4053025debe94731b8b3f6663b5327bac9470ac3b8b0872de86dd56238b83674f9005a56430def7e448c5a49da2e19be6d028b6c47f34347bf11e62794b7
6be45bfda957f48c9a5abe11dbec2082e7297005290a70aba8d5291a125d637a0e907dba46bd8bdb2d69689a851106cc98e52b003fbc080d86b79ab6716ee3ebaffd2e45e799c6559ccfff29a0e8986129052082380a6ee891deacdfc00aa4787d41a7d9696d9a3d1cc02706dca8e5bb9bf44f60c1b765b9d5f744a8f23ef7
c1beb0d8e80de248f395d41e67d28b3a8e4c0a03379887b6a4e779e4e8fe23d167b13e4b3030386f5b0dd22b4d56c10ff88c4a7384ac8f2c09fd43ef4b62e39dc624eee32d7fde937c0362391f1b488452702352ca4daef3225fff2c414251cfd52920cb53625f41a8d42f3d888f947168bf19d7af5080e9d2a20964659d32
b798551c172685027825bd3c8ed427845d924cffcc955d825b92b96884b3d65775ba68c9817a001eb66c8b2a7ecf7a9ee99b70c7184351aed24e8113fe928c7754a84ec7de1171830479de13f4db3b0b126c0f9fac9eb5ecdd8e81b5c350a4daf2c246792148211ec023185a77a3b6849606c52856a78135a906cba29a65a4
13068f8e6dff87210c30c9667c318faad558632d01c5208442a8c0213871562da9f0ada6970d948d3a4147fd9d4d60cfde334c67c067fbb850df0f2d861e985fc64b96ad83363e481ce24fee8296df6747a1ff7e80e4fd559cadd81d91f2851116e07fb03d28d2ef8d2efdd88cd499d5f0113ca75133952a51223b2d025303
232f6abdae3e316e8a4778252a52c6d7251bb9c091b067008d7d24de64145796335898661b2075cbdd4504dddc8d8a95af137d670d130e6def01e8cf31c5dee96a8660f504c71dff917dad793f7b18348f7043aefb6fc6cbc2670bffd43ef46a4335e3cb9df39e26b90a816b5ab3da67e39a2244f2ada24ca42b0db8455915
d90154b5ab84eebc9f3929b692d62e2ce8147f47ca8071fab40ea53138c42e0ad0d23ca53d4c2db71b30eee6dbd18769988fa4511948607679a9943baadc2621a1694e19395ec30a7e46418ce288433d9238ffd1762b20ca464d1164453b0185f6a6ecc578ac4e60f1c0110a0365f4a6d7ed6a2aa198e3f99934fb30cc38e6
7c6c5db0197f81c649318e7e5a5019b21e2c55b5c69d32c5e7040542ec567dca8aaa4a9b2e84123c87fd2f76f13ce696923a600f4f62875cc5e051a0d9df2919a5c8cdfe749748488d276a34810c4e09783813c7bf924c66b748eabf0406558a967a657cec96cfa9ba5dd0e154f07bd672b323e97a8a95af79cd89c0d570ee
2c99063570fecdb4e98a7bbb4d1f80023c11e758332e558563ff86cc28fd552785f5e3b8b48765c7c32e405eef7b3e5e61660157261cbe79718ab200272b7d9e27fe5f23d2d7c00cbf10204f73986840b0441a2ab47c0ebdad9fea4a362b7c1bd6abdca5cc5f3bb97dee89c95954015f430834356400a36a019bb0ceb8f64b
923e884aed60dfe6ae29c2763e2775fa2a082a1ec26d1c7dc433a4773097a211dd7d94c08c0ad91c7968ba288afa58b176536aaa010b1b648761ea1d8b90c899b087ef8a34b90b994ac7d9bed1f416fd5bd51810d424780bed983c5222d7600f82a6dfb2812f48974b2d5ec0e4b00d7ef209d93c9c2ed096a0d27a2eef6f9d
30a05b9a01b635f3c5715c036c1f8c8eb43cb48bdd34bad863908b7ac51378a9b6d02962ecae83279920d16ad8641db59b124a81c2c4c663156313a8b6865c896ca5069fbd2110d96d5cc245f5531d6dacf441026a0d580d562851f45a0b6486385d1a6e4b259c3dabbf8bd953ffd3f49b2be500612f03e49a62a65fb06b03
54098715cb0c78a12cbfe26aa4f356de6ea00719390af1816743ebec6165f3c0f695b06a8b9e51100e3d929c9d7b1799902f7ae7b4fd6db6494fc3303236e03837b4c45594756bf5f81b7f5ddda30cb52f80ac8f5351946895b806da7ebed2ee03296d9abb6491aa773fa4245ef08f6979f58f2ea132a4adc55ccab1ea8e38
b8086c18e5f9068e587a401d42c43573d2ea3c891183ba1966552aad65b20bae7c52d9bde393db32b1e39e141ee96f262ef61f9986ca3cc47938b8bd50bbcdd65440a052a968a2eef9971f33653ff612f4551e9850e27a10bc543e95d48cd66e69005c5d32432098c5365465d3a7514d7b9e5bcb1c7eeb7976a582cdf68891
8e1ab401afaa73cfadb5df7e59339b15d8f69769068646ea6819fced37716e662e9e7a8ee56431249e9bb601dc75080196a49f87c0ad94c166fdb46ce4c58fade01133b3764c8e727ea15f00c6c8c785b697dae0b29b5b0542d7719cf33a92d2dc51b782111187cf1f44678f18a2d843b63461044f457470a7dc3186182e45
3eef3de6a951dbcaebf3e0509e45cbef08de546564194a92c7e1ae96a7792cd49b98647f29d3f4b879a7a38f4e0ed68c4edf1b874b4f735ff2cbb462a2284834380825a4627c712c2111f1df10a2e48157be142addc424177df41dd601589eebd6e4a0a3e975448f1f20c2d7ac206963c4a87f0a939c17f5d9c12560eebf1a
de508d657a5507ceb7416c76258b53535b68f7bde160b0662c0e66ad902f0c8cccdc39607b693d6b4134467827afa57b0c686d074e1144d9e276aed0c6c0bcf18d7604d3ae4ef45b9598b5a69e37451d84e4c92ee5b569fe22c995235c65d4007aa7b2644f85bff9a3110581e80cd3b478690939e0c4eea0998b0c99c0a3a5
a9f9e24e972d06693d03e90dd86746aa4c9560830debdd939da89986d1703fff96854d4dac00f05e594f75acf3fbfb4f66a4bc6068a56a9a77e35513267ae8b815a67a333970a5bb1bb84981ef7ac4fdcf9943b121a17b990f81f2a31fb0a8ee116ecec558ca2dcc8ab6b25c4c3802b9bd1571257d819d261bfa992040be61
3f424abf9c14f013bcb3242f12be17bf44adb9008c5c0e0b2b88eca750555077ec114b9f29e71d9dceb59212eb408c67621976c84657ed224dabbed21727069538fb4b64b4dd2ce588e7abd6988c888cc436924f1163c71eb13549afd53c88ac4b8d779c370e9ef5921436d5c2c48e57d2602c6aae4b444a084a1c07f73d73
30741ed6ac91741596dcf6b2f85215855cd46921b59f2a0c6da27c026445fe6228040bc2b03208ae37d91ac80ab4889c3c0e00b267855fb8889ce6d66109768169d340bf35c8880d2051bcec6f42ab856712a154c1e6a520a2d17cebdbd8dca0d859bc57a229bad3db7bb596d2c84e303a7415d56a674ba14b872e0014f877
59915484c6f2850184d545b3a00ca8188c458be09337736dceaac802120033536adf0ea2fd64f9a46e3b58a22da9c8152947dd7418806ff5d3148494715e7f649025b628c54cd78501fcc8d354d3a8be7c66b3588c6c6d95930b0c21af2d29e5289afce3fe0983738a98ecc8a94e3915735a15ad5b8ad17981cd3d457742f3
455ded1bc34b68ec519edfb0c4be89121f67b46d31195b49a20a88d7e681eaf800e9beba46694c9f6eae14e2aef5a9c7b54541af364e79cd434223147858028fa95d39026c96696aa7b0b1fb451a45fac85bce97ebc5401629e21cf2e1cd75d5d224594bfa401d41f77050722204ff8bf7d56db88029a8d64b69df1d794ab7
34334fc86003585511243008dfda1e95ba47d3acc53e094d1fac1826ede6d99ea39ed0399203ac6d10f34e486adbfa5db7d37d43db8ff63d18a35ef227653c839cb75c7bc702d5c044c2c746412f36007f1b0a7f09173acfe572dcfa02b84ebe9ac060322ee052f0d2d943504a93b0fb717b58d9d1b34eb4789ee5c025e3a1
ba8ee32e2ad7c185ca73d4e258667f240acf8e3029eb5e628c366eb53a6f0d9be51e515594310cdbc993cf181481a9c6103d7b3d289821d4e7fe9637e9a9aaee51cfa8d470ebd683184134f2dd8ed6d3deac83599f040bf723c253fe3c7606ca95dad7ec036bc56b3a79fbfa53dc8897117061f14b24e8ed2a5bcbf14e570c
e9cf0706edcb8d43886008aec62613725dc048d62a8eabf285c3f058b7cf835440e99276896d3ba0a1a1c604b8919c235690ac8f994c9f37a3766dd9c8ba5508cae5b9952bed4d615bb8f4154557d5278c9788aa429c6a1241c9956cd5bee9064a292d4ff7954418a0f370e145c4d670a56026581e63ad3364ca4bad92f98b
5d6b291872803766a4bd19185b00ff3b1d2a180f57ab9462fa5205805ff84a9480bdaf68d17ae6d15622550111ccda294f81e19b368f300990b072dfd1888d6658a5d86c8a1049fcd30727339446d9abb31b7777e118f408460af2122f641ae11cd73f6586131db5711c56ed982e4c0118a78f2986bed992087cff24d20416
23143df31c4bc1efb7e170c8a236e9360b5d1c9bceadce87e7cb3e7b58086793cdf1ae4485d5bbceb006ba524cde253cefe6844576d7f53ebacc5706ecb3eb5c478f49f0597d48c38e53eb5fda46fabd18859961c6c0aac8736631bbc46c0de7d4138f1756f6ec85702ac3ab57087fa7c0f99cc70fc730e6570089a754c95c
b9cc93b187f958d84cd495bbb7b96b89ba7526020264d65f71e691e91a419647c5855e05698717f87ae5e872334e1860783331d34a7f8af02fdb8c2fc91e5d29f1442f6351e45f858a40fb9a9217c5aaa2d3d830feb2b6f2f47d135e8c1beaba819cfc71803058c906a0d3a9e39396b89c3d6e8e96ec9e4a6e2f0018f1709a
e1601be87a47be8bb7623dfe0364c2e5fc47965dd81c1b738ac15d896e2a0063bba8cdb116836f7faf8085d3e08660ee12bf5e6aab377c7ad1436b2d8c41b89caac3070bf34a82dff659ab382c3b4dbfac0721e79e40abf641d11b74cdcafa81a2ba6a71e0bbd06e56670763f08441406d03e93553ec8782e66cca3c327269
5d7543da2cc1215b90bb41a4ab0c354bd6379efc70db6ed1693021a0b15f1ace3a97d4b8867397c37a2dfc11bebe305190d27ea02f1133af1a194d56d5b2dd5a03ff39d9b4bfd742447c2296f850d94a5b6377552196d796c37a6c8c301ef07fa4c53733aa3ed0599203562a2de318a061b287554f89cba53793773de24b97
ebdf68c8dddfe180082214f256baf883e8388bc38543f09383deaaf44aa0b8d385fc884ce29b6cd5097d8d018854b83490bf0b5edb8d2ca7ff0ff3ff4d38917b46e2164c5d7d6ec37af4505eae58b40cfcb4a69cfcc73efb8982d3c8b7f195078c7c8fbbd067340cfdfebb792569de4c90d16612aa47f38d2d0762dff560da
1c2247a7bbdbbd69f207ac4ca6f99512495da4ed6c3e4053f40aefe48560b258f2690369a89ac01520f79c0816bb5c0caaf5b410d7434c9ed13b32517e587795d7bb24e5c40bff8a1a000dd4a0189a9177663f90923f9e02a4c7749fefcc3f747e49df2b70365e5be7c13c2c7ffc193181145db4dc695c0b3a16e23be02c0d
9f48d3f35b8efce92252a183da8e50339d1c49d35205fc22b1b08510e1420fd42193590920acd9b903907e5e9b85890b0240ddd960f7b858b484f7b16b18da323f961ebd86c4de9e138d757de44a420606aaf3045a0660106f89cc6296d36557ef6da30362d5d90ee8f7bfbf0eb08609bdd2244e36c64ca64e81e68e69635e
b043671f4e1e43bcbdc746bcafd6368516463742a8b4e653cb854b32e3ce97b8f9ac8ccdf29e6317e83278138d54d078bd2f15367390397bca598fe8c40afc4482f4842f93154e3445f6900f32cb59d4e397f9f454ea93bce0f3f70531643ee9689dfb74b462a2327e527d1529bfc9b2288a189a18b9dff0e5fcd88220551b
ab039f40e3a5c4bb774d330d7d53dfbefa0d64643fc1a9f4161a4ddc71ee2020e0ccdd8d91e60f61e6d259ed6d3dc18fb70d3efc6d1fc84bc90b0ead391abf8270c0fe15b9a754f2fe6c60c17ec1a9741cf3444d27c061f76ea0201824a749579f4bffa29f51fbf69b165cde2c12b0eb2c5a9eec03fddcb0cdb83a07e28765
39e277ecb0c0994740113cb03a1ee0001603d64eef308d27bb0f220b9f0161335ba73360e079524e0015b216b77754a7bbeef7a52d68df473abe848879a7fe9950180f2dcca3117026e9277ce2cb64266502a7efa9dc7a500d757a2c011147216db0f3f168fc941886f27a9485a564adaee83ce0b2d60f5434a6be98bdf131
8d8d60d8e9a783e088fec5aeaa761627d3174678ef662c0f35a3917c5d4ab12a2a14e832337a0c4e1d39b51a9860457d3d6c610b7eb1d579a05b49d1eebc3c9e99e789074ca0d9b9231cb14cae7298e64a4946a26b8300c9d35fb7cd1911d04611840897f582269fc1008fbac0b04a395444e74f6a7209840f7fd769cbd531
c23dd16b182d4f876724415c5e7159ae5409d09f7207fa29c5bab0109ec2846442b9c31c95ed3e8162470976db899d4c67720c2bcd06d8acedf2a49f59a00c084a38ea4dcfe4dcbbbf03c900205c6473d08cc1af8f9e63bab6384474f8a0f13971d9d5ea94ebb983fd0e0d96111ceab3dea7d64386311d22a80d481aaf1fb4
c120a2ccd4a1aa98331794b376b9a5ca57665da266cb7544a866649da0024432c0db59764486c395b67ac36fae245700bc4d296b70daf5d09a6543cc11b7a9b62bcd4efec1cfccc7a83bea395ff8ddfc02be4d800be40a6296f8511598c28e41845461d9896325d1c1235a1a75b5a8fd2e03eafbdf57cc13d6f5b009e9ada1
b46f1e52a6779f459e439482032f83e395ea63b33f14cb1aec2c634d71f70406ca2fe02e20f756946dcd71627991a04b2ead07c8ad1d64acea2bb998135542f2836119cdbcadc1d615a6af2eb1c6676560f9046a64cc3392321f554150b537fa584be9128ab3775eb32f6ac2c3b5594a34a97efc956947766ef6c078aedbb5
c851574bba37be764252295e9ae908fcb6607bdb4b98e3b39f3e6a2dee5f3d2fa8aed6b374247162f402a735192a4fd06a8f30037ce2b143bfa4eac0215c2a20002eade3a266389c312f30710bfc03b7a008efeda03312a95fae35434c3cfa0e2d3f5e1d8037941f57a36003c784912e7b1a6ab78983c30b417508d6451746
ce5a03af404a8667cd5c48d2f2bdb72a9db1ea94fa2f14e241d9140a45e32e5706df3d38e0d1f5341204e5df8ddd6df21b58d9b06737d3e103891d0cc42f8887c406efd0cc4c369b3dc88a099220a65e0aaf014a04f2a7472e6b42eadb8a749a65b5105bc36f1932b9a72506b759f43c8c18f46b08f098fe4975428428512f
21fd507ebe7974440f37897534340f537b10e433972469b0ee7cd20b6e67cfeb84e519c3a9cbd4b90f228f8dcb5b7c9476e5dd34878c9cd86a0d6eb5117e9431db562a959578eb0501041f9d4660e0008905d935779cf16161119086e033049fd8f04189bf4779cf9ef4df72f7abd47f952d2bbf9027892272341fdad9aa74
42adbd48eb958c3c3be986e4770d76db27401f2097019a095f64729371cee596dd3ef7f6601010ebdd4fc44ec688a4c98cecce9f927b83cf4b1dfc92064e85646e7fa66a40e970976db87c70feef167886ba8fbaf033447047a4f9fff90d0f03e8ff9df071b75e6349b1b9506245100819575422921dfbfaeb884e88993c34
2bd7e98cceba133872a6da2e4d60e44e618df448a1ac0c75d8c878f51eabf3b3c74dbe834ea580c6fcfe5f34411b83d2c483b69fead5f58b815848c6557d81b2c5927a4b90d9317d828fd04b7193a1ab0970003f9357ea76d93085e099af5e2be61d76586750563f61c5ff95ad90d2552ef4c24052f15a7e7724622f919214
7827bb501c63d11377f7ba384f1f07aadbb90ba108525d903a3384b213cad646216f00b7b5528a2c0b22fd8fda0179c4ff2d3174be678e9b4ec0ef0125ca6e1a05b46a7d2614ebf88b8b6d92fca5603bca82cbcaa639fb797062d9a1c32af8eafa3cf3eab50583a260e8f2525e82708183ea339f049a91075357c355d874b4
0068f9924f1e31d8d69054d4786c7e4670b43a361abdb9691202cdc07185cae1e0789199f156480129de095eff37a9b9a7a94f032957c9d601ec0f985d11bca61ed1d8eb704417ae2bac0975bc828d78c9918ab5228991a96b3e27028148f34e1e3cea7b07514fdfe0c5cfa2e190231f14a15915ae934980d86bb333a65e49
e15cec8e8b2cf6ee5ad01b08f503b96dd97a8fb1c9aea2945edb1b7fefc7f444e7ddf6044da922c92fd54e07a5aa49134ace64287a5118f4d9e8dd01e3b80bcaea3e0c0ccf8a134b250c5d8eece8e98cf702e733318a9d841b6a29d03b399d320e588db8716f33c4384c97bf7d6cf4194f82164c65ce3607a7b354d2d18387
03d6ba575c27af4ff68e2c586b05b97ea3dc23972cb58dcff1cf896c9485f5b3e4d254a3eea2f97a94e644addd492ae1f9afe89f234dcfeb8aa65a39591ae89934e39a32d7e80e50ab5baa551803095d20e55ab8c42029a60920147f674286253760b4ee159ac5549f1dab06529b972dd886d44e636fe29760cc7e75ecf403
a2f413bd10d714eea9cbe78c20103264b9aeeaacdafcf873068b68c9f6181ecda2d385ea58ae16bc47c2f6d56ece64829a400a42eddf9022c07de756d0727ef78338dfdcd9cefdd882a7c4e9672c4296f755543ffb86dd1e5c4e510cd350033d4436d7637d3d9325a7b7fa31e2f489e45627db66fddf0faa307ee28fa1399f
744f2c115e81e4e91e1cd21339d65a4c62c540b8cec7ac181985f227486c80e699815a26ab11c1b9df5232cb234637834b876f80a0afa7f167fd922798750c34c48afaf945a674e58e72c6f786157adc7bfbdddc9e8420333cd79c9fbf8e1b0910e5871658cc9d7a47a7caab688c43dcdecdba3b7997d1c172dab573a0d2a5
56450f4e357f2afbf8d10dd9fb25da95e981c57f073ea4f26a9fb6787853668aa358a05788b51918ba501aef01ef8de0d38aa9c2508eafa02bd1db0add5482d1daf8a36f552cc564e29eae3f6031d79d0b61711f3b3e5faea95a248597954e202ad1645f0023e150c6573071fe17216419bab0488711616dc96a9acc255ea2
a9512320cee8bf86554d6ca124ab70ca439adb25ffddd466a7b78c896e8ae6febb32d0b6b05b5d88210ebb6b9d6da325e59d17a532e77aaa9bd00d61b3d522b71a8d7e4b1f25b299c47031c8c7383774da0d020ae33d1f508aa4919b8d3665f2f609502ec80f1f618a64e09f4a932e456ebece2720c0d5c481a7cb696f7880
455a404e077cd398b844d44532e5b2170da08be9d06609a40646037ab13607644cd04e22eee4ae36c7c68139f171fb6f26f61827a7e1c8e491a2fcca5ac8a06c56db41080eca2d9f79875276da877c1628c0d51d23f7dee433393f92fea3b32954300d5086739b3aae589d0cf2a9e20093bcbc0057a45d270222066e50574b
7e1312b20eee9c1534ce7f29d0c9df7ed43945271fe9e6498a780f800c768089f797bd3f0f1c6e422691532199a810c193d24f3825abffd859d5343a0a1839df8ce46a7eeddf176e2a8afe77bf4ddfc94895398384c39b9494b7d9e08d064ac76083f6d549271d2691202e2b8685295d7b42e52eb9303f369ffc0bb6882230
ebb611ace4c2b6e50114a76d030239880f4840dc73e02441893bb2b9ce2835faaafe1457cc4f36da0a4e73474140c069f85a8f8133a487df6ab917a1452c7a79997b8fcc8cf61df2a9e85d78b424cf8b4897b428392f3a6a5e6399ef72b6ac0910ea6ccc47d6777f9984b50e1f2a012cd23797563efeb611f08e69a937e8ee
8508953ce7b059ffadafc94102bd805501948cae007330a636917544cf9f7692765970a5c2b2feab78fa9c509dca474f5700019f03afbad56ba4b6139cb5cd7307cf99cab646f5ed2494047fed3f2b430806efa4afae842ad94bfb8e7cb274ed3f52de5d25d97c0dbbde73cf3233267a59142e3a1e60cf7711f3ef8cb4f219
07fecf41dc49174121668f96b995eb74e938c92b8b210e21120e4822300a647baa6bd50e568941e66ef15b10184c942f102160f7236add6ad90b45ae9ef79b57722460b916b8b01846ef082b7d58254e3ef9ffd28956fa8576db69c543370f88f2ae93d3d12aa239b7cd0ab4afcd56e2d06b2a387a2d50dad5c386dabd1ffd
08d969b3f6e7b773906130fbf23480ffef2c11162959b18d0b6785689c67254a0a456f4c70e5656ebdc49422ef48b374098e62622969dd4e6d27eaab8613a2673b9e86b65627776b77475066d873b06333a651c36c0c2c94dda652de29b5cfd06b7275825716a937b3c5d89b0f202e25e68a28ec215209ceba57d30ed5892b
af3d1796a0916f235e99299dd6d8ca70df1183c4c2ef85cbed93df5d6ae1ac0d721c51ce34e4d0d924bf4ac1ba5fdaad5e09f87ce0128624065a72ff9404953f5d8b215ca7cd3cd1d61945a208d7a12131eca5975457cc4dad17ae64e0ecf589e9162caff8b9af01294e574fb5769201caa6687b2f8a552e15e2cc80f4a457
b78a66dbb31db232c15a512a13d7acc1522a371a36f165c94c451983bdc71a441ca1559d10772fb66e4d20a80d7c5a87aabe4631ed985c96fb6136c97f75059bd8e75c59848887a034db61e107336129f0e7ddcc825577f91bf5c370f640e58b118f663475c17b80ed509cf680a4383cac8bdc6bd3e9613fe860a728a99962
67ddf62addde48b971ee091b3b0b9fd1542ce496ce3d9bc0ad90694e3940db59983e590ab288cd82d11a566a6db772d9dfb6bf315a071c51f8c246e8c1a3a0f2a9bc9edcaf19f03dce30e7e8272f9a729d762e0d0c3d5b163a6bd814e7a45bc9961eac3c6efcba1e9ac9ec757d1a8b61808611a2ebe05a737241aaea3799e4
5d174582cc8174148d8db076b1f765e214202a75424c2f1f008ce612625c6f2662b0af4eca6ce0a373bca150827ff3ef0bc5bdefcf0b1b0fb514503bd47fe06758b3852d17d3c666f47edff7f6466d4acb13c0dc15cfb45ce9def4418a83a440928c6ce65d73484259d23b000df1ec8e75ec972d59b59167d35134df451b9d
ae08358167fc16100a2c8aa2d95c29878052948f7cb6482c45b76db9a58208818a6960a9e1d66bf9ab4ada61b24de270d5593fb26a3790f0652513321df7601f6924a0011deb27102144afc132e8377e4c229ccaed4b1e60bf848c55ec4e150959f83efb387bfbb99ce60cd4189ad2a110331b23a1864e86c9ac6df661d33e
cc1bd90750002a0c2a533a684f79bdf787a99aeac2fef3cc30f755a251a37fdb14e12c30d7ba48596392b495146f37873c03befa1f07495eb1440abfb5f8ed3302c90d51eef086752904d70f4270043f3d504471c952fe87be53446ba78903021662ff5920d146b9db1c7d86ce5b43a09bbfc65e005edb25933416441fbf73
0a15e536cdcbec8bbc27ec491a7d8668ff3f0a4782e3a43edecebfa0a800baf897d2f8ca15ebb73e5288605eb8b0594aa8e0ddcea89c167544e6eaff2648a7eb2e1771ad0182ffe11c7808f1468e24a1ffcd0d6a277d4e6323e32a212f94e42330d153a4e232cf02b3bd9d4b26b523152c766f03ba479e82f5a55a6c2b1370
fc2b3cbed68a51191ed28d5fb9ddcbfc9842b9332b878c611690bdf1739f0c82fe78ea889133dee102dce2dba812de504f83a6183c1efac89b495cc0b1d1c20cbf91983f7a82b07fcfcb469b72078911202d9bc0255ccabd4825b28d6bf16ee362c387e16634333f0aba9a64829bcd2b0043de10c12164d86fc6c46ef5aecb
801bdb7640fff9d2330e5b1c8a2dc3b6e4c53fd09646c7bc9ae8b20c3f378c5cebc6589bd4c9acbc1b639b50ce929c291ddb921ea448fc7bb38aed890e798965e5464971310a112da2ada2a1453210b335eed4fe0262d13bf9a91ea80d1ac139eb51cfb4fb4ed34120bfcb0fa5a28a617857421d086ec6c65e2d7da5432d73
eae9146b8d2ef574dab2129f3affd04cdcd92d83406a3b5259ec7f033df5266c53e5e110afb0e8ac9eeac0941718ce31cfa6b703407833bece9bbd0f8f179e5c1efc4e73a5aabe323ff8b67921ce85bb5d2fd51d324d71ccf62cd9d6504dff1465175a07af88b5ccd2e329d94a753c4cf9fc0fa0fa9af11d9b91bfa29f544a
1151a12efed836b5678447d1f49662306791df8e3326e02c54f002e347cdea4a27aa563ea05ee648fab6d5b8e7d111a2ad502a8cdba785e4c268acbe2ae6c25772b3082d6c9956e0580c070e73f1506158d475345b6ce28551df102f172a02e7e4c0c5fdc85a2d3c95562be51bb4b1d0f5e6e323f49705c65af693baf0669c
04de3d03e6fd38b050bbdc5ccbf5ecc774f750424c5f380a77d978bc8343f3f112a728f7bb5f44270efb182f415b7a038efba1b3cd829a471fdc78875562695f2a9e13252b6ac1909820468b2bdb1830c9925e09f00dc44ecc3ef2b25578e654c10ecfbe61d272877366344c233f08e7a3e23be1e797d41158307d6f312be9
a4483678a4098e8589f08b66639a0144a5791ae2d5dfb4b56a3b70ee49e8cef943d101bcaa43d1d2e1f14a83d4b775ea29c45ceccc272d666c6792bfdf3bb954035749b5ecc1c3417a810b843262ffc377fcd350c0ac32c05482e1ba6659400d08b427c6051492c9c39f31341f8be13ac3a934dc83db5294e8e2556977692e
aaf7a4e83e35a5981075d46d13f35e9887b2da2897b91d4c14aabf7404aa31298ca766a04801a6c2ca4aa6e45be142ebad2ef39732b18711bed943520dd37bed50fa18ea454f7743f3db8d9f188f64f4bd59a63caa55c1424d0aefc1fc7d346bbaee2b21c87c31b925dc0fd2f26f06f3830bdf669b9d8de2d9dfddca4a5865
8b7083f9bf09aaebf627b1f65fbcb292e4d425cf62e5aad56c029c924649651c73cf502a4dff25d52a91d815a49041ab55251b81e8f877d505009d2c00c47db0bda779ef6ea29560e3a18476bd4c931a2200804baaceca3a6d4f488299d66c5f86e0930121ca0410b2c1b6ac5ef3f677973232351752ae6c4f2c8b6bb63429
98c88bd504359c4467c480e6615813a31bcb5d20b0f30062bcd92d8716471b93188b28efc7daaf97486a06d2d80a1a56fc203085568de746f45582c23b43e2e78a28305eededf548cf941224fb6acf3b22cdb51389ba025b485bc68c6457de6f5b50a13905448dc47787bfc8b06f3bdaf413c2cbd6f98581e139b10506991b
fffb876ae7191d7ab81c8eb0949d858f6c2543a2dab35480e4f2d6694f92c1dcad16a293c0f4bd5250ecda7ab63b27656ff465efbfc66373b47f6c84305001d89d347602d0bb336063da375bca6fc7d8878316b329abb50bf9450d6cdfa73ffe8bfb6dcf234472317df83e73e9c4ac4ecbca5def4e3dd50536eabb79781e87
39e5dbf3164de49d2b1b5cdabdb9e6de238e8f4d0a4313f8c1c30f520b307c1f1431986eaa6c4e66f43d513e17bc6e3b856659fd2cad746cfbc024ee4bdf25f7431e268db292196346f6e2ea9b5d0bc5f697bc4701c708d302c02a48ed28fd6fd0e46a82fd4a00749c829d829854f93aa0690b8fb7d0c0a667aee9d13ca57f
c58800c302af9261d90d5a99d86cde8aaae54718db45c7b62668d75911f796a10e904723d07ec265a18b925715db60170dc402c9ae58604c9747ad747ed9d32a132e54ca3f057da133d7880c2d3a6a2e316f21653be3dc32719f55e6f2887c49862a294e1ca4487ce69622b1679a1a3ab68d3681867b2ec6d356cb8a7205ed
9957e2c9f1c1c3ecb7532441b4a178f43d74867bbbc0551b5e0c9795c9fcd61c7f21066a6908e86ac802ee54c339e23b95b9472c3a5783b21e6241927fccaec06c33563fd1f7a27799e0721c3d364574b5931eee9ad45e18c0cf38182213ea956f06fcd336d5823c02a351c13b75e985b6d229ec2fb404cc5e7cf0f53acf69
e79d5383704a7160f2762eaf4d6bd0d8b7a831523ba428cab2ee96a8d8f9d82a43d34f35fe8c0d51c2e07e4820eec3053848f675f4c94e6f5890d0818fdae02f5274b10b3ffb8ab7ac561fa10d2228f0bfc28d3def3a27fcbb3ae87a2147e70a1d6fe1a058c43190a387082233ab94c5dee9ce95cc864fd5b3254a833c40b9
db766326e08864080b6e3cb8f2b55b721f908fe035225e61dab466a43432cf3f0c5a84bfd4e386268b7efa87a1c45b626c1932a527937dbe7dc10fb52ddbb2330dbf604187168c9b4e89951d71e6fac88a7c58975769934072e9ce6f4ec5bd40c87d1001fe4d17edb50fd11a2f0d516d292061277db2911c5ccbcfe1936a1b
ccefb4efacad743d48b4015f9b58fe641b815ce4245aeb53d657d354e32668881bad68ab3f5c68ab1aba5a03f8d086ed1e35264cbaea4e854d8b75ab185b6917104c09fb735bfa8d7677573302ed87fa77734df19b608f97e8c84344e28e2445b99746f1f9799a2e573576ad4e031263e2549c82deb08363ea46c242386d9f
ed9d7bbeede55c3c63124bb4b9effe5c4a6b2d8f7a60e3651db610693d057a734c91f7572eb67812267e4e2b0e426feacbf8cdab076db7255ef7c3c69ac330cb9961c227cfbdb7713f9018771fedf247f83307eeab40ed871599fcf65c99920f10877c586d7c71affbff3b7818d8b0bbfcecc4908a29a91780b35364766c93
4df66e3728ce87b8b6a99ccf2489eb04375a18c2a65a249e16331e98a2eafa0885668ab9b7b4a841e394ef4961f500b0ee0f66eb031ec7b32d016c9f70dc85b000d905b8f4cdca30a59583f54d8e2063714b922f295d35d3a56ceb6189ae796ebb77358753e7d8bcbe4d42c22bd1aac62727d8323761c547b8dcd65303c513
79b5006683d4871d56b883fe53301af4ae9ae32aa1a0f3b834e172248d6891482e050e1c1bc2e3a2c64e1a9ee50621c5b8df2adfa95c0d0253b352d6ac77995c0881ce45ae01419058c00277ab1dce7e25d088740041ff453de09b866901a161b1d2b8a90fffdaa8cf04f2237d3b5b5b3130542a4a74a8a6dee5c849816e2f
66ce4b9be42921bebd63c691cef1df0c12bba700448c81338c1da89b16ddbdf0a5569d7fe1f76027f42e163c2102c79656e6c389f4b675902346fa00601c7097968bfa7c802d365ba7a30d5c7d754c5fc28bf60288e51535da706ff6174e6cbc3b1559352716c35aac8012dae8aa8e9b8cab08391e740e019780fc78d699b7
9ba5df4462635a8ffc9326fe9c20ac105594dec222b43311c9b227f6cd49ab5fba6b1d9fdbb012b95be2f76f4249cd819549661f596d2761b785940ad81f224d86b19be4be7be1475eded8aac522789d91f35d3dfe25f893540ca57aa487883b17407b7f9a11655ba52d05e7c745aa99174e508995e564c8449a1ab7b1d221
1a156011fc31d31e28c32de92ae66c4114447c1ba22f080dc367fbb3f942897b1311d8f75aa0847f8403b6ffa02e8641a0e3b75010981d29cd5e0503e24f418a814d4c2e371f2603e58c7cc8c0b9634f6289884a609947f44f7f494ce91d10739cc0764079e82e94ba5afaf703db5feba7dc2d421f7f139cacc681918e06da
b5745328407ceeea413f61837aa2c7bf2432a61763942a21a4ee129fb1d691d1f658567b5532e032fff467bffa1f07e559d6ac7ffb03eec2434138f8580608040c1dbc9f1686f99ea2b4cc8870a90f559a549b8c3e786a4fed3cf35955d98a00bb63242152956851707e17a9dea92fe549acb95920b2f4692839035ba1b763
54d6030522b7ca3bcf65cc39ef82f5c0b91e1e92cf037cc2af3d6b65fea512071e04572f0390bcb93769946990ec09773a9e68d67863b3b2ebd00ed40e0d3747d38c69e49c6277436ea5b88f0300a056f00436b568657fc85f8069c00682d92c5a194273076385a8545683b6660d628f47445d0ced72bcf1e9d526666c542c
17f8837d84c7d675b4d928bf8a5911068189b3e2ad8fef602faa6a3a1aa89504673b237d1cd9d07362b3278c3894cb719c22c40d8316fd66b4bd5389339036194c697282a4f77e1422a3ef34b35ca67e70e5a46a1c7e7ea815ad7218ad918e9dcb72f00295d0a95eb078def05dbcc6ec9c8bfad6a1376088ddb550b1902afa
fdc4a1550135e0f2c32e0479ed6e056698a90c3e5a0f44fd60b1106d51dbd66f6bee426805f1835b1ca4216a6e9971d0c89861f8d65539b1ff24c1631203dff1d46393437fa3397de100f2893fcc7204760e299b8ae28b5a2d371081a5750faf4426ad2b39156e90ad28e41a1c9297ba4f2c34b5f65686562bda260cc7e0f7
81cc76cc08548fcc86cb6c52a6e28f25877da96520e09869bbdbb8a1947d776bd658e37dfaf93e4bbd6127ce80dd141700ca27d35c0ecf6a414a893d9f53fc6f46f778c40eadcd357424ea32e1a1e52a9b2c8980429ff4936dbb07976db31331bb877ca08d8876fa2dd7c6570267956df2286d480486ec60114c7d1be7783d
d7375c92f3279d147fcecdfbd7c0ab3b81dbc6adc22fe6a4a18697f490aa81802099190d669742d3e1f72be0b27629edc5216b37a7436a694e4a1bcbc7e0ee3ad25f79c2278a50b7185b06bd3c0fb1152a08be1d2bf9214a12f757e43f2b9dbdd839781fe94cbbec70ada2f01e5eee63e46e0aafd8157a746b77cc459f2d27
794e0e422a14a1ad7429fc72466f74f74492d485685de14508e826cf249249168d2087eb91f6b1c28649769fdb7b3c5050e615eea044cc3b95a0ca0d5e31b8bb591f685164b2ac39b8cd435425ce0fb3b263da724472cc34fe1d85ad92aaf5258bf3141e8f2af407c2df5fc3e86105b04aef563d8f3ae6a6de8eb49ed47458
8e149dff059432d80fc288c11433d58d3c1393e32f3c7846691bb58679535d76648f84709e9f6a8fbf2f72e1a53b574853f86c330671041055c220167fa9ceb7e5267db6c8047b13f0954685ef14cfcb14e260c32ef14817288483ac2cf582809684336d14a9eb430d933f164ddfaca8c1868c81065c31128f55f4a9fc2c79
7a20f3cadb749896eb7356fab4e5c8178cb209f9d4dde1ddf5daffa57815fe217a7bbbcceac082509eef81765ddf4ddf3f0398fa06582874e6e3605bd1ab269ac162f1d80c2d3bb2c6c95f1bb15ac4be081ea6ab9b6415ec174389b849fdd5adecddc3a5c202d176d12b068ff69b998eb1038e16aa3ae4beaa0408b62cb1db
6dc5d9f677a099ffbbb0b1fd71d0a14423edf977c69da766d4cd817140a8af4b7bb5f88ccc0ff8fe5e86c82159756c84d9bb614a84dd032831624d523746e4380275125e089fc4685c8642c743fd77bcd57433ad4da91ef093cf3c67fee21ad674ef9968cf20fb82d7d7b25cfc2af8b43cc586222743522718b66400718b5f
ed33a15c914bac9620f85f24e0c18b9c5f429942e881953686dd882f70ed933d611a7fa42414398e71c340b5a317c437410ec7da18e47314f9b5c2b3a821ef8e9d70721cf456e88aa4a2f7fac3dc9fcdcbc5505dc949eb715097f90b6a3c5352fa33a99180ae941c084de161231d45228ff718eec4b565638293387a3e937f
79bcaf1f3530093b8e149ddf036c7e5820af462d404f1883c814ae66b2c3a16c1c7486cd0f5776347debf98ce6add0c1bdfbc35ff1c644f0ff0346f7658dd08552485b2d7984834d802c40b203cfa71215a66a2d46c289e11359974a46040eda98f6166c76980292bca179cc6bbd59915333920083d76ceff236a2375b2bef
30086360da3a0b55d6c1a0c435124ffa470817468c05e077fea164a3113c7a2332cd289224758edfa236226b7f03d5929eee3fe868e50113ec0205091a674826dc41740bc2c8a1fce56d799ee260abb86e1ba26c642a600ac80ceeedb947170079f1d9ce4fae2720640aed3af35a10820ab32d26cf381a2770d18dc044e547
777ddb0955efd42e018659e3f0779a6ec55b250ab19554a7eafbb7256957e98ededb16aa000ae5dad835a1f3d3862fdf33925d526c5ce61fe4cc8dd08951d14290215d72e84af96d8cebc8682dd1b4974dc4d7e97cbe78667c0de426a688e75614006fc4982f016aff148e5b2da2b7648f5870ec60a7fe3d42408fcb7b8216
2a5516947c067ae50eca92d3c85cfcbe5ebd1b6c839358ad2440a574c7a492dc0cb652b391798edd998dd303a6cc3d77fcb634718b7b44387feeb7714c4ceb296cab0e4685fc8036de844431a74e4f1fbf7fe81a8da5ce9be876b02ce787c9b1dc7c16b8d70521718a400e08437dda5d197ee8c7cd6593d1da16f7a63e604d
4f05dc56dccf1749eb68419029e54d1d3a3f2bb62802c411e76b6265eb0120b886e5efb85e0e46c9d9a5d347c6ef3c9f62e60c86a2c887d902d9429d871dedb145f899fa9a5d34ae3a5c908d0752f3310bec68aaf955c342c2bb9a8f30fc98f68083434d3fdafd0c9a3924015f5d02a8ba690c97ed8a18e8a7ce30b26959e7
8c34386baccc870b2e7d484f0910773a6a457028b7ab2d11ea10a68f46849a352fd347411692b285cc2cc868137bba91f1cfae7ff1dab57b642734f4a8dcad1df2061b38a7677eb6efca8ccfa147a1df9b14f915979e9432a368df33f0a372ba33a1aa01b49ab0e9bee09285273da0dddadf6c7279ee964789fa0d237834b1
ee423f6725c6a0d70ef5ae94bf4830e050764d7099b7b4b8be61601577d9b910153805dc56f6e1fe281a74929a4b1971ef23cb8e4d26f3c4da4a32ad2f92b934e941c6224b745033a3453c254667d41b08a4163e26889f3fd16e8ccf93f2e8bd1f06ac5fec182347b94a176acb5d8f9e8511daab9c9d848d53ade1e526da03
755f4f6d90eb2c4d2449676115a4162c0f51fe1b01ca3ae2ee6bd4ccadcd4f68d2910571504f39bfa0846997ea321218857f16af283cfae7dd00550401a255323930c183d9e83eaa3638e2230ea6ada073951488d7d91ed734a25e54f688633451408d014b97f97fc19ca301ac334ec458f811ca4516b5b2d1457dde8a611a
5e471d5815d868162ef18fff87f125af42c90dbb183832f8b96ca9281e5f76bee587c7a7d582c02930e53421053252b31838d0541db3e62fe3771eed7246bb3760ac97020918ac56a73ea3d9dece4c875ff6ee91b740aa66723b3fa90dd6e53b0c638381e8f17995d89c786f4c363c0f09a9b8a466d9f694d0f0e43577f917
e6625710830c7af93917279da264baf0e38ebee616a0fca8963a4811cae9cbbe45d518b8856a122b7f80a484a6e5732d6c4b00fc7c5cbee83b158274785364fca9e8875ca6bf80ab863173cbec7072bae7e61abe8cc026b2de9521b77c120befca7d9952921fd34334b87344ace65894f27365d890809445a2a9782f0830a4
5adf8177d777cdf023c53486619cae38add3d31979fcfcdbe418795cef5225efe2cac30ca9fb92e89bb8e972ecb78bdde662b6ff0a031b686061bab5e844bfa1012e887d07b54fa21e3380f6d0ef8bccc58061811385d5468bd06dd6365df54d09fdc73982dd64c89b57283bc8f0ea62c7c47df05141b70e3bc44871af6408
dee8612195f5abc439b275f886667ab8b62c98431795d7c6188776ef624c6993cd6975a83a6aab201c101157f5acc70d2083b906ea7478760218b7bd98a86c31180be1e26b6a7e9c6b98737e5b29e530b3472b45c2c40f496185bc7254769b379902b6ac28868c08252984c0d9ccfcccf930ee21693c43547fcbe6f7cae9ed
25f3a55f69887ad668b1fcf2692e1318c5998ab0018bee92a0c6435b4c375139eb045d4f486135cbfb295c2704e48d7ffa296353ee8aef01a514b66ee2f716110179764f15ebe3d0234da3840b06afe5593d47f2e35224f7464f97ef5718b57071d55a5c6f08cbf94d10323a40a114dfd4ee694b427c79c400284d8ef577d4
3f850e2c99f3b8cd266d543257cada444c0e0f7f864a12c3b87056dd1f4f7609b9a317d0ac53847c475aab914a6580acd76b483eed675af6b9e6afef3adc69e169c0f7f45706ea2b49526b452046c2920ba480a85067a7c394d8502f4e13858f35bbca72fe58892a82c25079bfe02ea2b394090a87aa89e8b5c8e38cc73f5c
022a41d7f67abcb9009eebd12e6fd135df6226a6494057082ae45c28b358e6b9fc33cc8f01d9540529dec652bf539674de7a069972c8618b0d971f96bcad5db24e58e88fb9eb998af69062354a0ca24bd26e5ec616ba3c1a9f74ae8df54c40bfd9b3a950ca61738e52178d6aa267e5472f4234148397707996feeb95d8145b
aa945524641a870efeaac13f0e66e620b5a2fcd48cf10d5791f6266e39b845ef438c6f3a5327ca641a7e22b15788e8cef1f5419611e9509aacb8a12a347eeb8a68e162ffa108196e638bee02140affee5dc8367bcc877ebaff1043cd17a084a0042cf61b3399dc8b766da3ff3318ae6c96bd3e281d9758a3019b39709deb28
1a63bf4d021a6f7ce109f8ad81ca368a5f632303687a496fa3fe4db07cda00a22b41f9bb468dd751c10741aed347427d1da1b74957434822f72e970cf620215530254a700a3e065cc4e799d4b78e71366d386928bddd8a60178e08acac91777a63608f6e0b6eba49a808bc6a184b5e46d3f5e5101694057fe5791213ad92fe
140432d16e114e99745604f2fc0caec70e8a11d4e274ba4842f25dcd9b2e59b95f6c9786488a24cdc57ebd1c2f4cc93beac582f9348ad3ac9f3b3546960b43a7a9f0f3542e9041059c5a2a87e8394348e3b42116de19b01e9c9f718a53a476db349b14cf1cfc69bd9b11b4eb0ec3dec7a16884cd08ac3a9e6e6d51be4bd57b
774138079e029f8991423d30bfd7c3960c34b2568f625ef947caa2c1d91450d8d3bd9b8d9b8e8d989fbfb0ab80309b12ffa1a04412b620d6376a2ff79a011f8bc21dbc03fe4ff6d69a62b70664db09479d0017b076ca3c003cc3cb5f9130e8d83a294dde089cf92e46ebccc112af8df3c6a268a79df0b0aee77cb393d7b60c
ce8da4fe959bec2262bf915d2e17704408072406aedfd6f8408b21b7f9fba8c30ab90e86d971692c38d919f0399a352566511c61864df25b6ba193fcf95b03cd5adb340af25f307249f2c8e6b317256bd250a51fa2e76c410e1c4c4435ac5b78272f99fb1652e21641e103b66f494e8fd9035f46176d13cdf1039c2eca2a21
0a58847d5000123cbd8718493846f933d1ec47e4f67dd95a05637d5db3d928930e06bccfb05216988689de2213646b9175e3b6c97202d07c860fce9afb1631c9d023f257a733ebd4ff92335e38f1ab851d0b43365049d4e043dd9fa35533ca501dec3d34ea712416b646b6c5ca087a2b3923a17cf78bcd09e7ea95d44dcfd5
d9fea988a05776aaddd1a27a2d9e4f9d261ff68565c714fd722177344eef6527087d04671dd3fd247469630cb98fca988ee3f4bdde5d5ae38b269cd9d52ee9d4a97a0afae18d7e566c96d055a453add6d9357b3c162e78a20f5aa342818897e21352bef06d3f470fa1a48e53570e55d92c920982a4e15b28ba5e995e31ff7c
cf3f7ebf56ad9d762f00e999df2e6524f5ed2f8a550f74375007835dd25934348e94be1b15553d4b01c1d6d427ffbafe3d4cddf068b304fb17aa34043ded4a00d93c0d7f052e8f0c22d534c649cc83bd7a162176731d16eb1212f63a94ec63dd3a4d6560aa226aafa11072faaa8e725c4a9346f465a41d1929e9f8889b5133
91d6a22a4c4751686f38edfeddcf78a127f579304a3ba2d53b109fd5aa5d1c97a37a04fe70be555da09028dee1ddb1492b36759989cfb108564c62a29c0f924eae8177ba1f41932cb6d9b694152a2ff4eede03e384f5a08c6a32dd4183518c29c52db66d3e3e180d3500799e8a5c89d708680ee54c460ba02193f2950bc639
c9e371418a4256a124641cb23666a97fc6a25b837cbcec2b934232e04804c74b6d0afcc03188bf7784abb934619fba88df95bb80dfa31e6a1882a4d16a3be046cb77e758ae9bcc7299cd1c1b390103b4e216c38ea2fab24ef05347e541a2ff323252f57612e73fcc8b9f92dc73952966a568489abcf6e15cb6d95d028abdff
326e1eff32f04e5dfa2f66a401bbce7571771eab23eea412fed680b2d1034413df47a8c023d5508d8ab549bfd872bbe06f219c77610bf3907e7dbe7a2a8a89c86c41190304cde55c8299cf88c40327b29966c973a698180a494bb8da8862683030fbe9616985feae7a84fb0a68a19f54e4f074d355cc630afb9685ee2b598e
ea78145896da1fa81ccf497151b3e2b19b7224a71665eb267e8031feba702446a53870871967f09a5c2551df60ecb5761b4f070b6bfbbf806778a7c87375d1b444b2dede0181cfa1b259463093b12939b8970aba7192b55bfeec776502eb207576963459d7047d7eab439e44608890fc4666d897a699c85387ba9a9325f244
fb6161db31f848333dc0fa43b0865612d398246a8cda03e8f9ac8b7e5c1312bb7e02aaaa1a02369df5aed2ac1a593b7e89a52013ffcf7c04d0475a9d92fc70e7e083babba405510d7a5654954ca4aebc4d983147b37bd32ad405e2c919cc10808a848744b16f8960e54806a36f21bb6765f42bd4eccbc6bb5699c429ea033f
b1cd2ead796d6ebbe536e7e3446f23e325418faabcede7510f64811aa289603a157ba4ddf1c05b92ae8bd74ae19e99fd292464c5382923fd86f2ea0f00cdaad1d99a65149898910ea4b7db9884d898e0c30ae6805930830c2547309ca1153a41a6a38ec40a2fa9992085a449a11dab9fb960a051641b182e8bbd0e0c940d09
221e1583c59a6d60ffa4119391e09f1f9b8d4b557ec6c8361460bd7c8bec087c851fe13fa5d87f5f73ef10b91348ce31cbb1380ae963fb98346f7585a509db408cb1a985e8646be2600ae4ea1b54e3019caa7a15dd5023f81fb3103a0b2cc43e41c14fe487c07fce427663ec0ae3fe40471531c227f1d365449f0934494ff4
8b6ec1f5fcc62f0ad5bcdb9830d5dbf91787edda8bb415d8d425ecbfa98b9422b69252ba149a097ce25fe388c827be2f0bc9f5063fc8db6192147deb79fcd739175ca7de53b15c7ef7f90dc520d2f9243ebf60d2205a97cd28cbabdc868921601281ae7626b0d2c20320bfef3edb35c346b4b47153e6e432f6e13376185544
99d71efd33b502cbcdf969c213e631b946694360254e3e8edc944b96b53879f20ed2ce235448244fdb68ca60a8c867203adb02c73d2e6f09dc35eca14b12cd4bbc2a6aef2123e10d868a858d23dcb9f7041acdd43b5fe8419e1b5efbb59b1db5eb64017ab4c7f873a0ee6ea452aad311248960d09bf02038d126074b62722a
3f534d5e8635e38d1becbc265eadc00254706c7e26be0bfc13023814a339923edf0dc5c284a0f139249ead0bfe97fbf9c361b5fa0306ba71bb523203652fc2ea7e5f89e9938437653403d7046a06a896607717b755130286f35ec78460b0d3f086c32df4b1fb2d9301dcb7496e704a9b5ddc9df2c529b1503c064607e426c3
68d9beb8d5bf732ff4d9045ba3b1ab3a42f04a6b366a43201ccf2220527688826f6d620a982b5ee140b343db91035caffdca431f7e057fc4872a5279248792d67fc4e8e6e61a2e953f72ed37b0d0bcc05b4cd0fca549d19ba39e1f6d8e2b9e45fe95f3299ffebd8e883e1edbceb670c31b78461bdae9fbaedec0fd447b1a14
5b8a3823ffff41bb3925418c1d92a14bd5562dfb8ec4d1b730a4387490ab8400206877b1518457a1767344f5e9e4e5d61dbe6e61beaebccf4274a01bfdb89bb00574bce878ac814deef873771b304392bf9602814849b7518b1f47aa1f4c5fa08c873f5dd5004130e922607918a659fbb30887bb66df9d68b4a3a9a6bb40a0
31cc597d4cd9cd81b0506b99c03389cdad9aa41c3e4d0f44504bb120a792dac4b735e74a2e1eff85793b5610c4c650aa3dca7a13cad524d54fa1e9d816e7ba1798a35fcbe8d2e49414d9797db51f68f8de10802f7281b01bd9034104d571ab49818276796a23728212233e2091ab78a80e8cb6777d844d8fcc995350f4616b
a1da31034c3754a6d71b0d4a177e5b2183a14518b4e337e3e182e60c6c3a9b7d2ed902ca341b2bd11ddccea76d2cf5fd96df6b473194f9dd50880dffe193d748093f155671e7559d340c9450fd4a88ab60d09185856eb080a52457ecb38bddb8d79d524166306e30a0988a95ec3d4c74afa7b13dc32313b655032c66d616e3
5c333b2720a3c2ee2da6ad2dbabdedba5edddfa26e3b707b11b15af688e788fcdc23ed2b2fd7ac4e5aae26c3ede01a731ce45aa209d924ae2db065685adcfa445400be837399e06d26eb56bb025ecf9e4a139989902c4561fc9ed1bb5ad08b659a523e9906bb194c5a03336bac167615e830b520de7884ac983f2b2bc48ffb
6ef32d9007768f18ecf0ae9042db3b74849f084b6dc7509fe8fffedb3d78a5f0c333a7e1fac83ccb04fb6a15053e5b8e2f2514a1045d8f30830111f783f2bb2de922603d04d3230d9b0e4e19a7e144a1078178af94be06796509ca9de9ed361bfe4a69c755c50b527a22116d89b76833673759fa649c00cb28e1acf4989d23
b6323873c4d3db625f6b9bdefa2ec04b60c2af71d929c959e191b75db392973eca67481d0ca37f4448adcc71f528de20b8c55525c35661ac5b79055097ddad661ba96341081860182f571c4ccd8a54e87d738bf7738acd983934ecc1584ba04d4d9dd8f5abfcdbf5f4f5c8202ebf81e77ad86c9d716ba251cf5eeaceafbaa1
76eaab67d70334edd019c0c213eff4c13850533979c016cd8371263ee519b7a811c5973cf4c56bd159e0a032c191db894fdd351961ae663f5f616e648e0493743ab219e154be6bf54601c2742b5ce83985f519368ad390a7a46466d32262c0a466ebf2d2f15d1bfca34b9a829c25d413a98575bf96b57c97af2622c9723559
40f091020980abe9da508970b2f3009324d56a8cc7764fbacb1923258c54208f3a888305847ceda5e424d6306e74753e01a745fed82020578016e07f230a0c63f75363d9aa1187df51785bd8ee981b6b9625bd9cdeeec1913de24b24ea86677ae962dcf8c6d8585fdbefa57addf54c35e83af2851e35f2501718db13b4d3f6
92cffe0ff9e90f5f9d6abc78ce2c0629a8378e1adeb4dea35608a4ec07f19f1ef63ccdd39601fef8070702206263387ccce63a42e539af5c367225896cafaaa61fd311426a233455f3f40f8e116cb312287158e3b3ade2ab5462310cbc9e14d22a3c76381be4799a620ecccd42b9fee9b4dd5093a08af5019a658c4b53f082
58c05f80904f7d007ca4492c232c772924b98e4b3ad9c20efbda30f54c71676412ad72ac640eb84e2828896385e973d301a4937ecc33a37bad94aaa6113e8f537a8904ee339f6ac55046935cb36246898d41c8e848409801eded41883360d47988830dde705df5882d32632f53df52c68ae4bf6fab4569b19dcf1c2193dab9
201d77762f4b9b769c1c3b9d22e764b9f812ef3aabbc128d8d4a1cd9db94dcdd7b45a5e15487f7e9a7b0f21524e28d812f0ba2d77a48f1b9e230b1289a99ceaa94181c4b42e09456fa8331a5022b7fd99f4bf4c11dad60ec9bea149ec843bcf752a9dfdab5770b0d67f226d5bee395a6add422fc316d09192597787d4eded1
0381b3179a26d62a8d8ccd10fc000ca24ca3d912d10ffa54a1545b936a2dca5f3f1255da06ff8f71e0081d51fdcee5e4ffec8af38a761b45dc26c5b601db274cf508c1fc5a7f60c9181aa8019835cc7ecd52f74cdf3d32d76bc673bd5e992f1f855eee5158dcefb4f12abb2b2faf2e8e0060ca041dfb15c636afab3eff5a8c
8041613ef4b5f3e1379000f546e46435135a9bbb72f23ddb0725602f3d47eb331421b53539bf7b8d388f76123591414b0e703e2b6721e7ce0e09e179a5b19d2a5b7c4ddcc1f6d21f3d66531127d0d907616d3b420cfd0bb970546450afee8aab0378664a998967b368cade8944c7420718a070c7ac45edd0fe9856647f6475
8565b69d098d6fd35ba09ae5d813853e122a7c58665c50a31a3ac134f79c6240c50a2981745532edd2e7415fc5f7f31e4ccc08cf8935ae7728b7b710d63a55f1137464272e865129581350b89e46e32b14c69eca28ed20faafca4e0176218d6a895d612c2d8c2cda2e96a84a15c305c5acbd21e347e18b83cb4bedfcd69004
a4382a3f427d01e3d0d2bf2d025fd26c927ff565b51eea2b1ea1f889662188c16d6c5b515f7474f7ca62835fdad3164b377b6ab78d2f19301ca22a34501b5b62ef4d79ce901dcb2cf246d3d72c1ae50b70f0b5c7a84e658a907904f9beb7fb9a92f5a3ce8665e528f8bc2acbc29a0d5e4cc2dc85dc6fd17270362a45f2f307
7bc5b3c37e04a0a390137a12f7dd4f7e0fb0b6b013c7760176ac8a948d92733becea46138fdbfae84d2fd9dc6d2b7d27759a7ef0f786eca908c16fce2de10aefc6de36115e9272ac959fed92b5be0f94952ceceed96f75213b332337df6dfebd65f45359568f1205ab81eba9bfeadd5334d9d029ecafc2f8a5e53a5a17039e
2941c29db28f4a71fee04126c2915308887150823038aed12fff1ccc2ea5166881b84687e68fd94ce29b9e42e363ed8f72c690619ca434f36bb64abaec385f61a3ba417fec5bb85073ac51f4537c331a5cef652055eb34b4cda8b490620099199c35aed0001c6134134193d189f9d3af0e894ad4cb20c3393d80fef9899c9b
fc6b2307f3fd31344455879b60e668ab2181c9c81964ce4dd6c69918fe65e24eff8ceeb47ffea3f6b6c7ffa3c3a1b6edae59a90161c42136e81096d85a769d25933ce8b560936556667a670dbf328309d74d46972f24328fe409af42ebff6873d11edbc6cfa5e4af628e565e04b79ee1d027f83fb5d47d798f66600e77527d
e698ff9653c8feba8eab595654fa6893109b3b0a8f4673f648271edf54f1b355c947c729c6e3e49d26f9637ad8045f0854cdd2fba3710a39cc32dbcf24d28d814907b6f8ede75c349a39fd40fc5be706ae599c961952553499fc36167351e07e21f008a0c290b3a066992140e2d48a37b1ecc999c492eb07e35a746a990c04
0201580323fe9802b1cb107b63f4b3229115d59c49bcd81b47b21cada114f89f6afc4b6b2e449ad088ff85042b2507e33e4f102756a56fc0a24f5e14674bd6003f1992d5600f243f01ef4dec37c9f0cb2bd48401310bc63ff5aa2ed36ba2c9dee767106d3ddb4b62173695ad51340102ef2ecf341145a46e4f89ea3de5acfb
cdb7b032f88ba91755cf9297818840d93a6034674a09cd9f4dbe253aa5bbeec91bab6744dee34573c76dc192892960e892cda73bb451c5e25f06adf03491e9936c7712ad26fa6b3c450516b3d0a829d986a983d878ac7bacd83debf44d973ad6fc0ca6d610d8cee37b4c543a1c383f53c46aed60b8968244c85dbed7222e80
0f05b9c9e4f6a551ea42fef37516f60ed9fd133f625ea4336427dcbd09b8eb96f0d124d3c7ea2b54b9ab5ffe33dfca7ae189e600f2fae04cd01b41836f7094bfc230fe346a49ef153b1ae963fd76129b6da67b3d3339bbd0996f492a4e8606f6b1d103d697ae54f743af61af005926e5c11d987859ff10c379033243e72550
a5257896404463aa7f5e0e883337ce48b5852639ebd26561c654ae75f598e432baee60ebbbd2fb53d1a491e3253b75b60a8956fd792f9bbdc34da1cb95e3631df374b84e7bce0275463988dc571eef20ebe36247d2611399c160a4ad601c5ba4afad22ba5e0233937cfb245692cc651b7bf28258a8cc4ae791dac0f7ac7165
fc62da65566f5c6296c3564f11345add39abd861c6ff2a617dfc5e1feeb1f79e1bd6247a3859b4766fefb3608102f028a6b0e836ce7a8b09f26508a199dbf7c4c218220a2394e514919dc0ce523fb4899d7cce1146d39357d426607556a653d064c0bb3d2388507619d73c426a15562ed53f852d8f45d363c11d0a476006f7
ae59e7bc0d2e4037760bbc6ca35f9372eda98384420ba9f4cbb609cd6cea25e22b6dac98de1212896a3d585949ae68b4e38ff8e08780a7500030aa5fae8b1180d0cdc463aca2fd9755dbaf6662b832b2c62cf6804f9365f27e157a2d9cbe5c9a268a07648da39dc5b5e7a174c77beccd89313a9f99a48f4c71809c53e0e495
d2365d5733763790cd003737b5f6aae0b23cd8efe2a4a3ccf22086586776d45f5915f9c791fe68ff24fae15b73cb441c4be9e6b5853d4458ca587d52650550503860541ca0ffe9a4015f726713e8923a7f2fa351e5df170cac7069478410173a4abf11fb4c1169d19e1f4bcd340e100f6daf5779a51fd8bca7dbcb39eae1a3
996d7975dc8c8b76737f04c0e4e8d96da50a67d84a03bddef56760d3b881c557703da8b374f92107e70e4c4d42759d0f09ce826e7a867fde56c6caef7d235a69870253da43618315570e7a2e5b48103c0bf7c823c6667aa9d849e0126c6118d2ffccd9ccbd2014e170fc1cea79d1ef906d993b3ff2dda338b537ce861187b7
d572bb35dad3d2284df055598889b9d5939c892694878e3392d4187cf2919ab639ef4dba1488999d08a3230c6ee8309557da221190ab338ee5bd41cfc0a58ec96d305616ec46b88e74418130b698abf5a0be8e3deee069d5b88c7274bb7476009d824a0bfe191b78692ef82478f2c1951f11432f37f97d092f9338e53de0ae
ba6dcb5dbeddbe964bf011f8b9cc823364fff545047d19d1dc88f7046bc6d93c58993e690cfbbf88a7cc9b2a3bea51ae8f88fe94fc76cc2b6f0ea50d0ed36224ae23089c8d050274ef73f4662b5750fd6dce6ea36a989a97c6b6b0f8c7bd23e271f8ebebbfa569fa825bc7d2a79831db0d82d4c79b15fffac7443e3111ee95
3ab0153943ff747f2364713eece71e27f12b639104d69e7a15d3fad9aab52e0494a7cc7b462bc80fd5ff95d20b3de9073b8d008f9ef531fc99e0b23a8e8592d14f1de00b0d0ee4db2625f58f9e37fb1b29eadc76e9d757c1a4b4c241cdac557655912eecb6e2e5ce65c30a8dd8ea9a23c769405a00580045249b87eade1ed7
2236847c9d8c41aff98657ceebd26ea7f5be8ee0a580f602d129f05ca63a79cbaeebe721e347851b6535e08ca9dbaa58f6d0d0d71dcec725ef8a38d5e4adfb099535d763a81939c028059001998f4747bb3144caebd8a9bc4a67b2fdfec8e1ac1ffe3940bb6d5eace870f7a40bc8ce34fa62aec575abba62646968254dd79e
4acd8af5cc3dc1ab578f5fbf450247ada64e135f1bd3998c2749ced1a2b821e4ff1798b92ce4d8bde5dae3e729d15e716ad7314a75ac0d926153c6cb1abdb5fcd92576fa448c88707a14d730d77a13c3e8744d1f8ce9c1d61b1f88ea3a0a8e5f5a856d3f6c3c8cc57530ae1e236ac80b03767db7fac3a1cc8557abaf45e1a1
ed78571800082c690c26a0a3bc88f2595f48b0483b879389dbce88daec98f6e7b21bafee8945d9c859f3245cb16756998899b7a7f1919e3e87c7a0280bfd17bb33c23ed43ad5fba3e8ac974d7f93f12b104e395341277197997cb984e9675f62fb9e8f3efbed8bc9c30440247bd97a073877bb1485f046eaa6a44a1fc4018f
3740c14334dc66ea12f9f0f2090f3c8f9df26fe9e2d4744d7c84aee677cf1b89b63c7cf56419f370e34597da59c83f8e679a283e37c0ee3f700e68a849c0f0154c2c7928291e4c9fe50ed561d738b9e7fa927ade6f46771ec5dd4a1290daec2faa60f3b7a24ad92e788e8ed141f2f9128f47944156981fe1162ca08e4bac49
39174a6d6e64ff0dbad7af1d3209b7cd92ad4e9b95e429478cbded795bbfca715ec50e9b67bad60a180b056f6d57949cc21e6f71c39d853a37d6796cdf7cdae4dbc68dd9f34800d45f23f8b01273efdd2127eb20b4558fe3c3f3f6844285bb1eceb5d66f3f032bd68ce33c3018b81f18a0c231af4df00d7c24b2678bb2316d
f803a239850219f9dcccc004a95b2512595195c09689e5b5194ae0120f792234a230ae08c94e64b6222cb021cd06d9ecf788bdf16037c4af5e194b52ecd60442880ed2bd74958a0c7d5e00ed2db3042b1fdf9c3d7ab2972ce25635268b68129317dcde61010f7067fca4b68575f7276bfce39dfdcf55ec7bbb1201ed572be4
018f20ba99493939cfaa3233e44d68f3a63b2893c828935cfd2552c1f03c5183cd22edbf731eab0b85c5e087a2d51bc78c8fc5cb000faaca9d9e3e622b9f975f24e7af744e80633ce673d660b11f21e0829b25fd3fa6f5f5a92cccb6031665b852ff876b9d0d573481b868016eef88e85c22f44842c16f995f2bbd3b5748cd
8790738c3d1b7fd433866b5789d0f41b40fb6657671e54e9d550c13eae2b707c7c54ccca1d7984e5f2b0aca24ca1f6376f988bd8ecfa5f0eae201ee1c468f331d1bd9b96da703047b5222e74f3813ecbb9dc2de32a5f985b191d57973883d3387726b926fdb680810c9ed5472c64eac8532e4db572a671c5dc4519a5bca1ea
d564b38b82ebff9eb17381d0ac74856a1f9961791d584e8700ffbf1230315d8d026dc5e08523e6a602bd191b029c238312308feabcd955bade4b4b2f01b01d0e98a9cef7a8086499de595c0eb3909c2b767de534f0d9f52cc85226a35de248ae8dcad76ce60b2457d6ce42e9c9e87b565976037a8c0031750ccfae9f865e15
77aee7fa9b11ea678b576ec9af9c1ab493fdbc33219a88b22ae8c7be2a0ddadb50ac1765b5a112d7337fb743a7fd7ca7e33d05c7b0f3b06b3fe6f27696fac2249816d1c040c88cf8a8f77ea55377764efcaf2b3004b1e401a4802223c81182507a88cb161a686cf5aa18a4806a19a3c0d7f4c047406ca7f86037b9b61fd21f
c77516ff48556c6df6090c553528ef209ecf797cd2bb2b256fb6ce497bd93cbec5a897a55c361c63881c8d6bc17090a83bb8709f3b0084327dfe2364e2727b80bcc7595c8423efbcb4b7f50167741decf816d803613919e1353b5b28d6917ebd334304f17be12c53234ff2c5e33ac66b24e178958333369b353b5f9cac7cd1
eb0415db29eb4f6462714061a0fd013262f806bc735843f33060b4766dbf01b696771bcaeb336c7d2b49c816b603dc3edffadd9c51def6aa28e8631a3fe3f6642e1f4c14dbca2d72638728b9248927017db284638146b51c2d2a38dea15fa605d526f795766bf8b0c85b2b01902bac37c447a753bae92fc769b3a8e7afc498
c16048c1497152edcf480191fbfb6a167cea8d1b7ee111f03b585b6d5ddc358983f660f8f92ba5d4a2aee366eeb0fe3bfcb4ca324e2ac8e9d46bbf8e7d5bba9381bf875ead5274502da4b958b23edad18a121e544cca21e5b625286ab1b714c32a8967cff1990a22b8da4da5ba09408f9efd177d2caa38766d3929314b8d06
babec52d3c190fc665069ed8f08785661f3fbf01d3029ca4d79b1664d89512095b10f13f8c3df43280eecfdd11304941f7d02e2fcfd1ec1663fb5c120eceecb31c0cd87be6c50e4809ba1348196bec347a54fd856d9447baf9ed59133ba514a7c44aa4dd83509890c0afe6077def3fd15ddd8145c7b61157c427b89451eeac
ce7e17c5efbaf3ac239353868f42c1e50526813296c610af1ecdb2321cafd977a9915b5e7588267fb91b304a504f79989aa2f95812e7b2a322d49a60e50f22054fc4a8f452be74d5b1cea0b486f2d4542484714eb2951b27b045b6824bf798f5d837e68b797b829a3a6328ba8751f50fdea15d2420918ab5b529724d4e594b
a10d2905b2c9dfdac20e4f85fe7699f3ca7872accc2638982cb3403aa65973830377a2792280d84fedb81a400267739d7b2822632f415ac9119cfcfe201e078a7bece34ad7b0a1af1b03ae23efd4162a071125f55918a0f20b0895379c6444a364f2632d2f80c3a9682f1535aee3e4a51aa9462de30ea4100684639125928e
2ba24f001151ead5093e1a9bdd1ab6c48b0245425fc4027d5432ddf8f25f52ee5e86614171b372a199bd1ec79534a488a6cadc5f09df08e9fc2c2a68acd2b4621f80ed8bfef1f4f6a57025413719a4fe0e2b1ba94a793dd6d58a3569da5209813973c5eb8cc9e21d3e94d042a00ea579e43afd75b346dd8a9e4876e48615f7
528df4c0e278d9ea642e24fbb9bd748ac79f2f9adc2aa59ba078d8cc6c8865af05df666f9704df4135298edfa59d7469804706388e8bea0eb7049ca5ff14c1c3d9b29021f50c89dbea9f2190ccff068efab73092fe05854149803c23e2b7c3d5dd7eed70c965ad4904b2789caff96cb19c3bcd505385c450eee7dd516a45ad
9b990b7bfca4ecd9a11f3aeff9505aa6d4104b87b87aa611cf23df5089683f188423248069a3e227811c4d85e267679fdd85c04811d6d5dfff7e54036501a7db464d8ad2f27e65a52ecbdcc887f3893ee79e68c823477a82dcb0fca9f0e365f3d95b6a5a3255cf9cb8a532b0d10fe7ce774b633354405828eca050a1ea9a1b
8126319a4ea6a11c1508e0d29868ef77822b59ce55b06863b5d1de24df3edd00e4a9f7d5ccf1d4a5739a106b7b00813096f774ca9532b115d48f6a8acc7749407a8c6aa0d678f4802321b42ae1139a79318696c0048b48ca9622d8e9d3f94fc3c6cebcac00d1c236bf03ad03386d03ab79e606fe8f6638b8e2e59663b316af
d609901e0d95dfdbdae37b7624cc767c4437b13c3e185dc623f07681653ad98bfd8e311fc0cf6ff401ff7d58663c8d444cde467cc59837cf070bef2e47e3f58025cb17b20c6c00fdec0ded0d150ca1a33e1d76467d78957f2f7ad50116c85d6669fc63d4bdbfb06b17ebcb5fd2d29026a0200a36c42c52923e6b7c8bdf5808
8b4dfe58c7b191ca6f7a368111c5d99a72c4c713cfae5cf111ff8fed34deea65f5fdf37c7a7f8ff949c90a4165f22a803704ac9649d96711cb869d96be4155169094eb8fc4d34a1292996c4b6a00e82f21019b2ffa29ef87ab97c33322710bc9deb9807b3f91644b94d37430a06c43164202b0c21f61ffabdc884b4f6e2d1e
069a056a15fb3d029dac79f1e31de4c4e14e99f8ff4a36ef3921963f20625a4d0c8a3897e0d1ec295ad6e034814b35ecdf12f8869be1e8aa5a779daa2dd1a0f6f27f0419d9c6a07a862bc4e3d27f90e07752be524cad9fd89b465f354b5d1dd5450e1418d944e098bd284975f0001bcf6be8b8a28cecbf7f3a498c38b836b4
d5b4853528ed5a9386b7c7e43a17af43c440955741228574e28d89f214af4878bce71a066e1069b02c41e171b834d155876484f2dd78e5e12eeccc0b16bb2157128d043a53cace0572bacca653fb4bb10740dc4ec254f78dc9d4a9ba83970e2955559299c44d865e6b4e38325a6920b266c6ba4bf33771a7ee7c1ff24047e9
e10f245a82587d86b41c6051bd07ac20d22d93d2f43f71c64fdfb7cd34cc40d710038b1fa4e7103770863be953e29d95fd107ea78b17ad873bc7a5d3ea1bffd68153402d9fff745cbf975314bb98c2f035d3a280b543a5bddf77e35cfdab7c959a86e8256cfe7a19c168e1498933c5670b585559349adf443e500e70e1ba68
76d1d307c2e34eed609ec302c3f295eb16ea5e177f4a85c79267020fa1762791b72b64ea6d2134db63c63642de071fe0519bba3c03c2a002882bff323d2430abb35250b78559ba099fc0743e6b4c2cb6a1d3839df353a91e579dc899da5efe0bc513053dfd2cf0542aba2b4c3c5377e3d6c3da4ee9a8aefeba24e28189baf0
0fccb6405fec1aed9d8e2703ba6827deecfc46cf78e450b30b628f3407708051300cf1720051b538a540064a8f08c7cf41c2c4cd1a6ac6223bce0f7d87f0c382a769041ff3f781e24b0d71d5c2c48ec9709268cb7e47770ed067fd9d6cc6389366d85bdef5a8e3e5d44f98e4370cef5b29d3fc1408fe386beced25f94bee94
7242066864a0765e88a0651aaf3a9800bf2fc7c92f607f9ad5eace45dfdcba26eea19828421931f6df4d4465e6002c0c5aa5c988977054171852211de74d1d31ad914c3da7d9fac1a5e49d6c799eb2de4f86401ef2be6588bad31cf5f4080e55f59fa52b80f9dfd5af1ae9058044062cb5a767e700fd3eacfa47424ec33726
9a16e5783ab7ea49011109a0c03a2bf1804731d95acdc2603702bffc0cf738d3abf2c562453c75908d8abc0343f92a2ea4b2c53a2cbf7897783c0f2880c8a9f22c68b10d6bb8d9861bbd129ff289e7bf3a9ab5928750ec6b729a04907afd92a1ff617e82109b62555c5d98cd0280c83c35871d414741b5260421fab44ff376
77915fcacd49600144db825c6684d6e24b3a1911cad2b2218c42bbe00f7fcf579f68aa0878444046c14f23023c110fbb3984a8c3316444e0b0e86a8bcb171d66e6ca8b9774f86596a06890a0c90bcafc41f292e35792fabf5c6de828b5fc62830c13fd721abda33dfa5e4383ef60e334eb8b9a19de40efab446f21c8dd1952
cf48382e581b1134085a1670d3174b6098a376ce85e2e9bcf6cfda2f81f432b26bb0eb0b3c32ff796a30d0cbe0e40a149ac213033f2659f4140b350e342e13250ccff4ac4c99661648b98356b26823f02c2de4da2fbe5d2c87aa5d4c18a781b6b63be8a135e05e8e4aa788de3768ff4d830fc86c6c9ad53d70a45bdaab443b
dd3e957437770194ed437c59a189bf33e34e1ef743b736741f88a55b7309d635940bdb5a30411c61483b9de955d50bb4526e6d294367309e9f163e3ac077bb15b3effefd95a36fa8ff35a2a1a0b37d3c7fb99768ec653043c8df6c4fd74490ac42cd89ca504023cf0b2d2e8e1e121d792089e9f1d17032bce14f7ee0ae75ce
78f038ea3da490642cdaea28e860b0f2ac6356c9be7163cf4fd7686d5a23eb132f38cef5f2fcb3d2d554fc7ee6fcc02a4ea08cd0361701ebb71432f9b8924dcb99119384d11ec515cf7388899d96ff93ecff1014a161f94b1499e138c80d12f1bb4f1080b0d812768c22e85d1dac6ae9f7dfef2037fdc3766af113ad86193f
ea0c7d43ba01b032765d64bd692732686e50ef2e5261e64c789a86595a172511f27ef664ea1bfba8eefb95f8d44bfea3a076ea9ba10db25e327e70d0738faacd8602100eebd1b084dd80f6eaad1ea2b37b783018a4e9015116acb009cb295c4d85587529a3791021f8f5e0e16919aecd81af5ae64e877de734202b5658e832
deede86b3bbb2aa85c998bd265c1c5eefdb1a0541a4c01d1f4a13a49dc2e8124f5f949d1489b347838b0de09519f84feb1938204c91fec116fa5b16045d3eaa7e0331d614b7d6f939f15f7aa1d0e044a626bb96ea4286c923cff9b9634e081ec11a2e3ee391f365cfbfb877fe413ba5347d2665bc8e5744f530d1695316022
e38c5dc4ba36bfc642feaeaad959b4a1a82f5bb80bbbb7b4aec850167a66f3ead02d6bc854cf5eeb1354fc64eb3a9733857c89b22efc36799c8d4fd11a9a761e763008b913a9dd62a56234ded7b7c0dc08f0410c6dd743ca37529b691aeae84fa22e2a1ebd1e1002c56b1a21341e49b3481ec75f7066837f3987d546802930
8ee4317885edc3cc53ac92a8dcb84f02e52799d96d86b8120da9e0d93c46a98be6153d0d01c994ce2df4f4057244ce574e24eb27b500383edb4a01db9f71606d70c12605aeb8f17e53b93834b15eae53173cc4690c793c1e975a82fc1e30e8215e864ec59a291f75bfcfbd38d77d60f1b65ef543e3e9a3463e10796bc20558
343beae51effdc6eb7e4d7fd9a49b4f21d1d695a931f2d5ce7933f1c227cc3920a1294d7bd87ca2eeafd869e52828527e89ed8d5f29564b75865035693ab890ff80147070379cbc69b2bd008c64779c9eba61d256b933768f48f27c10f6c264a9140a5f2e8848eafa6a384ebb5a5621b8d9f858ea36f944e6b2144da048da0
27709bce6504244b6d003afb24d815679a065a65357aeeada6d4390d1d4b5f1d4273a0957c5f03a4a1d094acaf66817417871e6a5cddee6258ee1f003f18020f9a88fcb3ea692963681dd33b7bead4dec1b18f5dbb025165f9afcf4183ed4a90627a8ab70a0c790c4691d927dc6ad09d3456fb198cab822769872c56ea3131
dbaff1e3b038bd347ccdeff1540e1270140d860398cceabd22a218b05ce432d507871cd9e414cb917557fd445f4474711d5c7c791b93ad77c4d52429cd441334a640d83c229187c2dde8a53cfc0819eadfb1e1c9d436eb55d24604fe4ddf5e9eedfdfe51d93f16e52d71cbc728a579d40ed9cf3535c8ec9c71b0161ecfa2b6
88b23a80ee3033cde027f19915cb34420ae8416c0b424cb3309a57c3c3d9ccf864c21dce31d486351af3b1132174709b3c0a7cf0ccdad8a56604b7d0cf5a2cce01dd991f2b131f3c7cc0096f21365b952d59067af7aaf46fdb4db44a11c122f9da9bde0af1e954f9d0fa5984bfab0a383c73b3cdfab5372682746d71b28570
81aa4451c2e717056b52935b8c3c894c84ef9876829e422a78ad1ccc31b03ac53a03e2f14dbe86ee3828431798d8a12eaa9c8feb9e3ea7ce756d55689c87d3a619d57bf440623e0874b5d02c11dd24b6cb298ea7c06ff1f40425485fc8daf21af6bbd3d5dd330ca26843b09f7eb8836bc173ce31d1bbb20b255f193b070abb
ca83a9f40dda721a602461d59b7172b85c7724e3559f8f1ac9d2bf93596fdbf531c81fa19a82faf967912453f88cef65157a124b111c68a65cb8b50961cee51f3ad8d41c55b35f5ba5a14d29138b471ac5a390d72f585e940be6334fa5e9117591ffa16b7906d1a5042397106a140e0825b90b46aee3bf48627b1c02a52198
4fc74a5d3a0dd65f2e16326bd98c13e00bfc4af21de1b1764114598920848bfa73f6800741d49ca519ce64e502c1edd5b66fc4c87c7f0630a287728cee532687d5dc53c3c898e031e5abb944e5b2bbd8567226748383e08c7187416fc9ca396023222f98e13010ed2a8aa5a557ee54fdeefe377551216a34a59edde31bed61
590eeefcc4e15e617dedef81cdcab445cf67550303fb3be28c022392bbd6258354d7456b574236af90d0b669d5174490cd400c972d3d669dfcd8e0f4139a211625778a7819546d8e34408e033533e62a47f82f0c677a187a31ec3ff05f159360f502de8651f9c6cb4563759aeb9cc986aad09bad1aa1d383e4f4095aada90a
0c250ee010e906ca716a486fde8c527b18e278fd6d40113e8ed182b40c3358dbdd7ef53d79bea182f3489afa686cb9cb0ba211e6bcec3e62dc33c420c95c71108c1f0b9b1c6c819b5a3feee60b2ab3234ba867fcb8bb6b48452b37e88cc8cd83412a928a178c4d63180125258bdd3655a98523e055a389d87bbb60dbfde49c
f382a9811df6328c4ce6e1a8adc90f92a156a592855707ab0da5990b8b4b903c37d2967846aa9eabd03dd0b1114ff6864cf41842b2b9650334c59997ee3eac0b0213f6fdd2d6fca0a0fcb33f6853f597ac4ddde2bf94ef8caa8e483844440bf545d0ca92b65cdf32d92edf77ac9a7f6a1668dbb813d8d7c2f5d68457bb401b
c0b6162bbdc3f528f7805298445355c0ae12c5496cf7d663168fee707d22de4a912e520655c87bf35fe11b1075b00ccb43eb5ec5b0b58dff2da4d2ce4c03946da806ff6761b4aa8a5d3ad04673b6d1018b61ac4554eb7429d39e884c17fd419fcb4015f9748bc7ce8606bee08e64e715bbfbfe973c8ab585c01fe2ae6d5315
99161d8eafb503aa915d3320f63a257e5c1dc195fbb8b5313f1c6833b67c9537e0592979013ce86d9b7af4b587742a27a09993bb487d305cd096526b9153df971eee9f598098ba56ef66e458b09bf7f596b7d86af7b46eed2dd87de8b222ad86071d338ef41c37fbfb603b4363d0dd92b5fd145603c866ba59fc64a4c226fe
47b3a26447db184486de2cccab1bafa6f7443d04a927f45d0597e490b7736de20bf67f0d85513408c9032a38e23a78ba88f9f97f0e6585670a778340dc40e3e92571c1812c9a23f4bbc7462ce829eec23cdcaae9d87ae16814a7d3083761ecfefd4c02a861a68adce0c11f5ea0e024f18556c30a7177401794fbab26c3abfe
5ce01a7a8386c28f46f12c1a2792dd9d812a8ee1c70980767d6a55bf9e91f50d57176add05c65c3f6167bf8ef84603dc4918ed6ce171f22d090444a0eef05cedb330f09762bb0da5295cbe7f66be3138bfda7c0fb31cd2b9666701bc415c4e02a2178bda8e6f6fda4ce02178c98cf3a11f1ae9f7f0b6222060b83835e4cd7a
e57117ae93ff2419e47a38293022e146e53780f38cc9a7c26d56e30f4d57551f147a23516f7bca0f67330a19e92e8884c4155ffa10cc854be710158a8f92d3bef3fa8c63f2227f83ec08e28ce43bedf6a8cce3cd4aa1ae2b5d2a5a3e76160eef3afe877354fd2989c672b402efc6e848ae723564818984e509cb73b8c27880
0f4d0bb74d36c2158683c808ef3cc93fb935570bacd1c54d65f1d276a5cdc3ed6ae6dd8809f7d3a485ec130bb6527ad0c4cc90777e406e70c2edabac0ec88fee7ab177865e97044f5791a9c0f7cc238858f5a27fdb5c2f3a6c08befbc34b195b616e94d474a88f6c1a4f5a1293a1ba3214b67ad9f1c2f89945f7aff6b6b508
ba23c97ce3db48eb8af54ef626b45254e422ce82054b2faabe86a251a4650a1013e30fe60f66b6aed013cfcd14addf06f94c243bec91216400681d57e62ac19acfb27ba9b56883a981c97ecaa1176a61016b5b38b04eabb6be054df05856a65a8970e1798ad674f4ee4babb05e76f0af7ffe401429316733ba99b132f69a2c
5058c0195c974e11549a0acd750c96008faa234709cbdceb1da222bacc1a793cec2e63db0e45ff9c0c1e016d3ceab5ddc5c8bca096c98d5dfbbc14db83b22ec35cc3b70e38f14248c53521ddf468fad3e159cca154a452fa6a62d4ef98fc9cf592a6d3f088ac5b86f6865e91212feff8a4b1cba99025bc3d30894b96c51a75
ba0b834a363a52a3d77610a613d0ce34b6668d9191b5864548a2e3bd793acc437029a5e297ba721f262152ebaabd55b618a1f51d772cb14d79b470baec09a3dd37db7eba8485bafff91b9c3cef476725144397e773b4e7be82c6a13083a96ceaec485f1bc3aad739e841af91fe05f133095e2a2ef26bb47b1666f1430658c4
3b6fa3d5672bc7109097fd8d5cf15d8af873d8577768487a85d6ee753d6035b6d8338a7adffff6e76c8f54430dc3993bc5e7dc3344cb624258950b10a40875ef6a3856ed6db5a3fb32fe375b79c618bd2e3554187c21b9cf1bfa80d9fb8865e087594ab697eff7974a21a434042ec78de378fb9fb0ca5dba4d0900e153590e
95e711ac14c927497a25265210d3a524ef579faf4357543be9fdb6082c14224428804b4c692a2dfebc3a1944ca379c3f3a222caa98eaf0b820fc74b710d30dcd81d5b46449aa082e7ac5bab363918e5f79598149bf1b90727732cfe7889c1fd431d325ed57f73be88d3a112587edef2f1675d4940ab2db8c8fe3fba9c8290a
39bafb99d5fcf5821d1705d7bf0fe757bb3dd6423e1377a738bbd9359017d4d43a440c6aa80bbd8743e2ee76cb9698a8bead7140db62ce9d4720644fb5a7511f22214c9a5dc692377dc2f6d105998079ecdf6696572ce207db980dfae72fd21261fb7a1accac60afd7ee5dae6670a61f1324c82a230071a8d3827937391fc8
a35df18023bd0dff903a42f3f9d1845d2b1b558969073738472af31237ca78db7248a51afd094bf66338224523645f9dc1bb3e43492460c560dd1048ca699bebeaa5e759ba5612e45b72846074c7d695d74adabe2384523d332dea4e401bf5d63cd56187add007c6728ab61998b68942e83dc643fe5327fe65ba175629fb57
44ce819528912c62d7d86aaaa8b43125b663b14d61e1445f9fb10206620bb98586ab2f43cea44e7460e9cf7fc6cee6f55fceb8a3db499935e56229cb5a1a4c6c8cc0e59ae64cd09c8c3a14e3ddb9467dcc51f351dab8e6c7074bf169e874419cb6cdfd594215dce458949e8fd76375789da1a6595c9649b2ac2792d8dfbd42
f1fe78f34fafb3323798eb9e44fdf3567a02f9b5137f8bc216276bae38044640e8ea9315d799c05cebdf1c922594c88c15bbab76f5c339cb1fde18de427c67b013a5fcbc957883d1960f1505072b1a2e7f5eeb89ea2caac00329be3a8f219df8fac0cd126e92e5c2355820b2a2b5857e08a5124ca8c2436ced83f7e9e9f87c
646dc6761747ecf183792b5ff0da1ed51260ac06ccd9b14485e4c9d38a76ce6a710f46f22950e9cd65d1c67c98ec09e398a564f96863f8ff6c832535cdb71a260762ee6860a29b62788149ab192ae360ddb459ac79b48e25cdb8eef67c3659c360423779e5d04ba4769808d77d8166917060934fbedf28fd4a32c2b8c4ea62
ef0bb00fad8c903a7057104ee6bf73c58026dda8f1235e916ef74abc414867bac798d7ce6f8a81b3923391ac056d7cd14d295c1e238603d3426eacd4898b41b32fb3f1f8519bc0245d396781bd4704c2c344d1a5e71283c1bbd175b78fa89ac4c5c7beb88998e0508d4921471b94c6070dabde2498178689a3842e262a85e6
1f9e2cf32a5bea6deed5e6a8cc1f5b88100911267c29eba11ff47074eb848e3197a90e60ab7774dedee4478c8947975f5bd39a3076d8a174c45fbc7a2a46050aeedd50eecee14a6b959831ab1c07e79b7deeddc5908e2cfc9d1c0837dff1b8aaa542a52bcbd01d9811e5169904d3caba271ff99cb927fdf1fa13d209e2ab38
497f65838bd725325fcffc8af91ec0bda9ae5f112f117ab1ebda1dde5a39d6a3d160a7cbde27d0b1b9b4fdcd1d041c2a4282abe3897bbd4e29d04b7f70a70281d82df0bdef58df856af7db33ef2c48de6995d4198ea00c2f376c631b31c9ed465dbde320eb40084b1796dfe1b15012551b05056b8d63bde5f39ac809e6ae24
6c406cff905750ef2593e899d8eb7d918f28354c051f0c39688d0ca6d09f0f3c2aca8b6051ca541d2ce44a0c1083e864439aa485d4811bfc206add2f1d50e90e69daf35fb5e84faa8fe4160eb556c8d79408fa4851f257116d1068b83668872d087dfbbd004d2c3479265163833f8b7c87659e7d7065b2e08cc09f830970f2
b5f6319775700f6ca66c2e7b6d1fb7f9278a527a8b159d43a7f2b00140df9dc9c4171654c1ce12c81ad6abdbd8d750f26b488bee330e2da561f516e30d303ec1c919792f3a468e6df2b64eabe75e9b1bac8703d3ce5c68df78af74006af42993b30562d9b6c447d203485215df26060798b43b4a77584161907c8e867417f4
4e37062d87347f6843e4c8e38b67938d5972d4ccb93d54fba20c8a6f730faaf1733fd05a73c5d5242a2782178dd63c381c02027b6c975b1afff0497d142cdca3c603ecf6a2c30e55ef62fe2d8ba342939288344c40aa47cd48f86b63f24f5f388d0c8bab4da9fb86aa17ee7c6de412ab676d22fef2c5663a2641086350d63e
c7a67e383db74f7ee54e3beaa4f927b854ef6d4f40994d34aab6dcd4a8e956d487d28b166e28f8faa69f60549ec1b0a62335fa51305012688080d841a1e3212eebcde61369d031cd204dd175814219f7e5e2cd3bcb4240f7204632e2b0b06ac449e01516b666339d1f08f99335c8b826f875ecb9138676a4468d6f67dd140d
a239082510e739c20b96e4921f01d31d70d92b914b524c63f23a94b4c58d5c4fb03aa0c8c3ca0000291b6b7fb196bea94708f45f39c9f80da177c4c2c5e34d7058b99ee36ef807a533772fa38007d955fff1ca5eb3dff9d629ce547281d36023f6f47c3140e2aa55032f9cd8a23b40dd7c1994b4d224a2fbeccb02cdc80ca6
ca698157532fe5d2b2ec4a5826a9e56cbd4861dfc41a5b5c799d8183a47579ff879ca51e5913f428c27c8f58264b17796e943dec76195cda05cf9b798f110ef787889d247fc80cb0645cf2e9f8ad4128d7e85586548dfe31bfe28ad0e27bf2f9cf05c8074f076c671c5db6e577b0d54de21809f84f48eaf8a71a7aa0d1107c
90c4bb58103ce6d9cb30a1034d739393742dac797fed26410be7c99432fd0b35b4b367bae8fc1aac00d1f4b53fc88ed5729899a70349a2d773d37a7b165ee95154da78e5dc1dbc93b09a34dac26c4ec04a5d5f9f7066b93013273f25766a06960837e6fe49138d614e08af12ef6f6e5e7eeb3403213238e124dc335c8dd658
7acee37c65d5f7487d81648a010980abe39ae2f01b9865483265ead8ae1f4d49017ef99000cf601207d6197028eeba409c43eaad47b04e5743ccdf1005e9dd14a7ee977b9964b595f10a3910fc8f6b4f91a5ed1caa5123f3860621bf6168c14fe2114fa2bc3a8d4b8db7c76575a1ffc1e0ab9ff9138f1817258826b0c03780
58b2aa41ab5896caab23ab0122accaad2e08b75a5b9a92f333b26e9e17a95259dc446d700b8b1f413a7687c5d7c92f7d5828792aace7f669d74bf4e0977f1958b9594a2e646cc325aebe44be0c693c59bfc0dd3b84058b4e3bc371bdf9efb88c3f0168e522b435ec3b24470bffb793f186531229c4e510a9bbd8037dc2d21b
dded75293192eb935335311066bf9265b29285c6d6beabf666ba545d96da5c88e3f4a5482493eb97b42ee879c2856d397373bf9d761f00ab56768f26366ec6976713c5669ef4f479dd6f09471bac69d68da04820b27fba745449fc289a49a24832a4d3bbe86e410e2cca996ccab8b065a695ceb4bccad4b3e139d6869acb36
a6a4bd761af06e0ec3a997cf75ef35e753f469c4e2d25a1922da2a34c423198babb04fafa509c55cc3b5b9e74871eeeee0ae4437bbb9ac046e3143fe8447689206e8c3165e289791f960c7665c1a2ff394cecf64f48b5e4165134bd12eab7525fe17027cbe3fc11795781a700cf2b26b2cd333ae7e8fea2995b114e497ce29
58e2cc043a3b8e18ba0fd4989a4f78f62b37f3be65bb1bd49319bcd99a756389848c734ec62064bc230cd3f5b3b0f4bee7743edb47cf3775091694a2be911cd5ed3a6ee4fed69c9150f7d790faa478aa82f936f76a122de70962a6eb8251be0dbb2fbf18f29c3e45be85ae2e4a568655087e784c9e825ebf832c2e76d6d59f
be0338f01f171178b0ee9bc353b7a515376ab650ff4feb4e5c61d4c7a74748cbefff0c0aa39764a425400e2b7257cb92bf548535e5826e01c190a192934d0dc856d5989453585351661edf9c80eb471ab9938ac7daf778328a5c58e224cf412a7b4fee885a16e72ad02a5393194c1c0bbf1bbfce33184f8b6ba05d96128fd0
821094acc0cff3559fa6f4a50d8dda24a865f1e6d0c0009573e3073f2c0c5f3c5e34a2d4b93f1854a5585141e413efe93d23955b351376dae33b92ac28f07bb053b71da437e90b4187eaf07e3bed95c686cb69f2b39b9e6192306964c2ecfadaea9728de0458ee905271ba7274a2a424e3e0bb94543c2cd50a8331a759f4c2
7ac71da17fcaf6c679ccf3b383d5e3941918b70bbe55b636932cc33787d6bc9ef028fd5e8d35c68998320677e8b67ea183d21a6c2e1e39a4a462a2b0dbfd629b6eb3921f92b8d37c6da4c25c796cccfae494b5e13a515412c006f153ac171de95e00d407b58823093bf257429f694d7bff895a6d4bc81eed162e31f770c282
6740206322ed3702c6f572bb0976f77c26cb5b15e022483209d3fea6c15db25fed9ffd75460d22aec0d98a7269dde16dfcc2778944b4860ca643993ea2f389be4a88f42dcc2a19b47be5a6c5a62ce5c1bfdcddcbac0f7eea2926e97b3603d6de08f2f9f97996de6913f088668138a0f65d0c40b194ffbc30a04cb8bcc70ae4
2998a8747b957661d59e6b1dabff675a52e056509224cffcb3b64ad313f5335f66a6498e6cf6f1f442da403d6b908a2385f5d45d6b8a016e03b14237c7780fcb4da38aaca191c0916c1e8222103892c63282feed789f303f6aea1c04882bfecc04372a91bfb08cdb2d178907d496951635eefe53d80afb43702b470057b902
27c84aa6e73edc07b8357dac5c577be7fff1a64f8a298766697a28d329f01f60d034f7669ab91f2c05d33867d7010f03a8e4c60680a8dc38c5405d06964f0a4ffc7c05958d7f8724ff5e2942bd423f6c7b24e126c380a64ef884c50cca85c11afbdd2e29e663616918f4c9475b3e0d4913afeff0ee0fbbbc74d65e7e2f44f5
b75c67d9492668415bdbf47269b96669ce4a28fc66757d0c52dffb7b75ae441ed34bc9eebbc65ac03f2898dbd2a1492110e4c71c3ef074d95d15fbe80dbae82269fc7aed5709076473eb63ec672f1ad43227ae068886b28481b1754c4e622804e89a72eb1019d6229780b46884cd5fc4305b041f7922aeecfdf9b7034d31d5
e971d4e099090f5342480bf75cfd3348d0ab209b39f1bb1683211ba346b6db3f97c2958b4860ac98a2b3a230df145bf6c691314e26143eeb80c515da4e000e36e47c074df00a089bd428d61fb1e321b342fe4018d8560ac8b824367ff51a3264fa55dbd22623ee389bff5b082a572ff90d78cd83dd6cc209a3a9c02ba23cb7
899fc8e916728987a7db0d03ae377007f9524a51534919f78c5a8290714d55f305fa4960fe80c0609369fcf51d256342956d1d58c37b5e37865616436ab3cea11520e1440498e6933657ceedfe5eee2ed733ee672f93c4bd13d3ce6d6a9b763c85efb5656f9cb5a06c4850e1594dd574357dc591b27308e8640e40674237d9
7535f7369d597f07aa18560458e6071aef44d7408c567772a347607f77dc61893b43ab383aeed60bfdd8591139adfc0a0fadf2342dd991c7c898716207a50fd8a2796163b6abc67e2b360b17bb54042df8c663bfe50422ec8319c70239dbe85864f85279a22f2b406042a98297e39f5c289acbd7eafc3eed91108c525ec0bb
07110b3e33a2b9fed083de88779343b760776087b794560d80d87a8055778ec196a649b0a0b33e76d8b286dc3f4962a47c5d849ed110bdadbc1d4d4f3fb3be07da9f0d555d4c1d39d3fccb3c8e1065a73a140708066171a3e5630f42f294444037c2cf591966930aa3ca4f2b7e19c76e80bfd99cc7921d9ff8c3e5cb5464b5
ff647de01aa876e98268bf0755ae7a0b7d8184e9b8067f09f9a23cfc9f26d2bab756a75935168b5741be866a8022ff1e98c31d55b9e91beadff6d668aaed2f63e34fde7f6ef96fd33494ca145a51af8634652a78875cd4d2d8a460912f6a632b6583ece2f2007168b849734f0d7d5cfc1fb93bd87e8637e306b9455d86fb9b
62a8cb84104423bec473bf1e489e44355f313cad3bab072aabce69f94a39151cdd4867d16d9edab7854341f8a105a969730e09729c474fd3341324aa5180c2e21e6e17cbe25eb6408857413cc6f80a8fd56bce3738ea56eb9e5828d4468b30874aa8e8073767f43593e6df203143dfb13ffae1e9aaafa1143a8ac4a1a78468
c4ac2b92e1d595d2accfbab14133e993906b2de467a9989e089a7288473618b35f42e5470bc1e1567fa453457f4fb886f9382e2fb382583a3b0179f8bb79d86a3135f712b9fa63380af9e15f20223cd86b27bcf2a04719522fde8366d4813a54a84d83122c87feaead07836f232acd50f95ff70a899689986dc922c2abd94f
87354db070399dc8248ac77dd3a2dabbbe2905c11dc4879a9b2a1d62cb19ebe59c2f5324b1e80993fae6fc53fec987c30c3eba82fc0f30b20b9f7a4d8f4d090cd572662de77c9247c4d4a83ca6bd804ce0b1b8e1f5d3ed9e6a0b034ce72efb027f8c77475104cd98adaa06148173fa4d9174adec4d8c92834511d113cd4213
56be13ed377e9a9790e093ee26b3d534cfd1518c5745315970c843b9c073bbf839efe3ebd8ecd7fd08151777946671436dc531f91fa3af78ee967d532fe518c40b470627f30a3329ae0baabccd4b11e3979a4517cc6775f43d1d8774e660d11d7bd0c21566b11336fe2c81624e0989a8e8936e1c7aec0c7eeb876f1efc11d9
3a6bb1c99aeb410b0fdcc83b2a95cab6b1e0c2915ed78a53866920969a33291cce3be83094819798bb2c3da4c7fc103610695694f9ab3fbb8c8757bda77be5850d151c3ec4b424d9e5a9054248d0ce774f585d01f6da318f4b3a6d9b708c13e12c52bfd4c4a5e7e67eff291b53c13651a3004262f31160407ce17bffffae03
e8a4222f9d2ae4a5ee1785b44c213a26e579b5d95f903c5832049b4f246e2ac1c2ea73db90097e54ab4884ffb3ff87e38ce2a1de63de154c1f6814e24fa1faafdaeb3b24df2310d5afb57f83f77621c884c6b21b3de7edac01fba097db65893031b6a88f1e54c1e8213e2f068cf375129bfba1ee855e12bf0cd4e09089c88b
d329ad4265ecc3f51e5c71ae329d7ad4814bd54064717545e4b1446631e6d7ce1929c8ee898a3dedd329bda1ef67073595253a7847eacce202ad3b6639a2cf1d899d86cc78cd065076b4d1d4c286b085fbfac6746e1a8f5b682efe584457715548845668389f5be5cfdeade0978287dc9781b73dfabbb23df9342f313fa29c
70cccc3e5684e7968449722abc071013f6a19551e7488d5ee6bdbf2eccaa77c2598363e8c4741bf4655d8cbc7d2b75a316986821a125fdb25ae8744ed6e7ffb83ab4cb8562a33324c2cd44fdf23131531c93216c2a6c7d05d192466eb67375372a7d9b6b1b58ce38d2a1373561ef50dd6ed4635a3e75d6b006d32fa11bafa9
ade77f58844ab79781f36a2d1ce666ada7d3d207d556d24bcb93087b78e698bafa36196babe461169e4c1096fdd49e17a8747aa3f55b40d2b3843c8de9deb350e979e9c704d07ed9954b13b9985d7dc2aa06c0324ce4bdb28f914592fba09b232518e73dd697f8568f6bbabe759625f4e6a2406a97cece727d2227b82f065f
2344328532462135efc403e364c840c0e65819e82f142788b8cf8eb1a3ae9ded68b6e46e945895bc1f396366b3a258ce34bada5efd5e8a5d128e27952c385eced1d278930250a4d7cf1b61d13ba72efd6227cce5bd46b3a0902679d67f1816c1c7abca92e463cc2f940029d8a440b40e2d811f73d3a266bf167b3cc3405488
c0b42a60ee461cc6381530082de2f41fcfe0febc5e161cf04721de098f0012c19b200f55ed57c6c15a9cff08af4b19b9d868adfcc23bca30179479db2341e3847f36c458b3c79d829bb443875464ddf69e2114f420f106c58dfa035247447f820f05cc8f816d04a5aa264897c7cf654ea6f0c562d80edff4ca06174f811b61
803340d8f39f055004b8f63b5f551852b61e1b6734e5af7220839dedfb444cebd0218df1fe33e25fbbe60dd9a5e34ed3f02f3a9b26c0ae96db1669bc30b3f1492461905ca9afb302e7286d470a6ba9861760a048e07be1f1112d753fa738af843c5857a34787d3db2c4d68148ea3144d6b655ae34f49e0b1db11934973b3d7
8dbdebf8299c2703418cdd43bef7a50dc44419e69016936bd466736261883174b4aba947cdfceae19959318da297a16e15185323bef6448f4b802d81a3f66dfb02670f9ba2d08b5f3c29ceaa14fe32fc060ed05305e6462cdda161ce112b803113f1c8a8b9971dafd58ad35a117a63159b0fb7899fec81946db33b6bc276c4
6b92ca9954518d399413484b1d57763da8273765cd6f7f2beae0c989e23e525ccff78354bd9e5fd5cc989973c917340573b6a68c9ed712790caa6435298400dba9a37f55abbc9d9ec401416b6b7ecc148ee9fb324938e1cc7fc8000ac26b0fdbd2430f09e14a67665d6e5bf319e48ad32adb4d53b7fbd8c6921eb2a6548360
e7baa64697efa7c13f65792a32c8517e4c0708ca0d7efe637a102ae31598805d10e2f80a14bdf05137562ec151fff8061aca3fb4aeadfc62d9681cf7ebca0726134afec48d798c32e9389d62e435193f84c07f4aaa5b8d72678ff0c7330d44bd53f0356de7a9e4c1c74e5371c1aec91e42c1d3c2ee32f1276bdc56e7feb1ad
8d8787092902037640af387f6bbb871e61ebb3a9e127eb16ff5c2d6de40af48caed65a0b74f2b765fcff98992868d9bf2f45ff4c697b49c4063c18baee1bdad1cf796aacbcc7467a67d80c30b42abed2a6828c4d7313fbd2b3fbb9ed91d2a3a7d98f41e0c4621a53e0591a5909236e0f159e6bbcad793f2b976ab1f4bfcd77
d541f4993979ed750ea29066292bb7d8189ab8872a18146909292225ebec162d67d1d0cddd1a9355766095be41648ee9a8703845ef0e242db533fefc08eb732c0235694c042274919109f9aa657da82cf96e6792458d6c626ba69f34b4c2a84665b441fe014c3088cf50303a2b0794aa2462b3492bd61aa23f6ce628e698d3
b98a15303fc26f93b8434b845f99976beea1cbcbcb7db70505dc28f69961901b0da56e48aafcda927a9924e3e2a81eaf18de94fd1b55f711263bd6aff4b692cb1982e840408ab16a6106803f8d1244bdedd59307818de56854c187789f1e1d59554a452cf68edd8e45c09e1d55243839c341a9acedb30685feb229e1d01ee9
e28ca62d179cef88ac6973663a382f3d94d2b5c1338b030ff288e9c5626f3c999aa650afb3ea7096fa4a99b7e7ec266d234fbecde303024acaf6c8595665c3c7d0705a466f3d78e5a23015b099f17c44d2534218abdc19f67dc1f34c8cf3e5133b12a6f1a7dd9e9a96b002b2de9cd770c60295ec50d5c61ab23da9f6cb1fa5
646722b2dc17deb3f36bdde44eeff61dc47b75b001d23175a94e85b9ead90ad7d19a725f9f5894ba92907cd0b1adc52ec92a22b9e5fe3cce3d89daba08ac3cf04cf6827ce0cebf883b22fc97bc9bf15d3c8a7c7ca6b5678a730db49ec43e73a92929d6efd018ab5c51701ad3bc965832429c0070bffb1e09bb1c3c23e9e9a1
3b4cb695945ff6c359cca95414da42c971c7ec490a5cb116d51ad79f7a06d939c10066215d4a8fb64be2f171d1c0676a199e4cab4df55ad25a42375daaba308d1b24b50136b147f8044ce72aed1a9e87d9d44b6838172abb61150c022abb4ac007ec7162d719373b37507a8688540dafe8b1d6a9ccf4a983aa83df7f7a9828
846f8475015276f032cf92a7bf56e9db2797f7ed6097c03627e112f1294fd0d9f92eb86b0d36d41f623ff905f55bdcd9884c8dfb06f3a2a596fdfc16d3d7761db3ead24d4041b352ad32243b041708230ae4f330806c4525a0c403b4eb2db7c9472365a16e40285f65025604a7581a6742c81b2ae3bd8b2a1b5be114b63529
4f6de65f77a344743db76fe07581a5a6bda894623669bd6a494d755ff75b3730670896cfc7124dc11683000fa5415806c2dc9bf5e17abf12a647156409141aaea315f90a1332b25d750cb963968e8d5a7ec201dd2c7625c35b0a6b74f12b9e4c294c291495efa636236cb5dd5551826071b02de23bc724db724002569f22a5
388a1648d66a1fa51ac437cc173708493cce39ecb04e98ee2d1753b3bdb946ea44a0f0bbe95990c3b4b83ed49526c7521e86fcf9c782e108e5baadbdd68a9865711919eb656646124ceb64e2dd720d57fa07e8baeae3c4a3d8963659f40a1ab91947fff8ba5039aadc278f9fab3ff960ec6fc5e2d2fe891e2ca944ba8bdbfc
a92f2daa3a61b5b1c79e8d5bf6a91dde0cb37e6489ba5cd3661c1ed6dfa615d91bffb419fc6ceb9072f890524a7bfaa82f86aba0e5d67355c1a37a67c16eacd16205ebf746f824808789d0784312f33b22bb600a744ab44600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%BeginFont: NewCenturySchlbk-Roman
userdict /Adobe_CTFauxDict 30 dict dup begin put
/$$$SUBSTITUTEBASE /AdobeSerifMM def
/$$$FONTNAME /NewCenturySchlbk-Roman def
/$$$UNIQUEID 0 def
/$$$FONTBBOX { [ -350 -265 FontMatrix transform 1200 1075 FontMatrix transform ] } def
/$$$ITALICANGLE 0 def

/$$$CAPHEIGHT 722 def
/$$$STEMV 92 def
/$$$XHEIGHT 464 def

/$$$FULLNAME (NewCenturySchlbk-Roman Substitution) def
/$$$FAMILYNAME (NewCenturySchlbk-Roman) def

/$$$UNDERLINEPOSITION -150 def
/$$$UNDERLINETHICKNESS 50 def

/$$$HDESIGNVECTOR { [ [ 0.265 0.671 currentdict /ConvertDesignVector known 
{ConvertDesignVector}{pop pop 0 0 0 1}ifelse ] 1.0 ] } def
/$$$xDESIGNVECTOR { [ [ 0.281 0.557 currentdict /ConvertDesignVector known 
{ConvertDesignVector}{pop pop 0 0 0 1}ifelse ] 0.966 ] } def

/$$$INFODICTSIZE 256 def
/$$$EXPANDDICTSIZE 256 def
/$$$COMPRESSDICTSIZE 256 def

/$$$DOESSMALLCAPS false def
/$$$ORIGFONTTYPE /Type1 def
/$$$ASCENT 737 def
/$$$DESCENT -205 def
{{(NewCenturySchlbk-Roman)(_)search{exch pop exch pop cvn dup findfont/FontName get eq}{pop false}
ifelse}systemdict/resourcestatus known{currentglobal exch /NewCenturySchlbk-Roman /Font resourcestatus{pop pop pop
true}{exec}ifelse exch setglobal exit}if FontDirectory/NewCenturySchlbk-Roman known{pop true exit}if
systemdict/SharedFontDirectory known{SharedFontDirectory/NewCenturySchlbk-Roman known{pop true
exit}if}if systemdict/deletefile known{{(%font%NewCenturySchlbk-Roman)(fonts/NewCenturySchlbk-Roman)}{{status}
stopped{pop exit}{{4{pop}repeat pop true exit}if}ifelse}forall}if exec exit}
loop{save true}{false}ifelse

ct_EuroDict begin dup{/NewCenturySchlbk-Roman dup findfont /CharStrings 2 copy known
{get /Euro known{pop false exch}{true 3 -1 roll}ifelse}
{pop pop false exch}ifelse}if end
$$$SUBSTITUTEBASE findfont dup maxlength 19 add dict begin/SubstMaster exch
def SubstMaster{exch dup dup dup/FID eq exch/UniqueID eq or exch/XUID eq or{
pop pop}{exch def}ifelse}bind forall/SubstitutionVersion 3 def/FontName
$$$FONTNAME def/FontType 3 def/FontBBox $$$FONTBBOX def/CharBBox FontBBox dup
length array copy def/xtfm[FontMatrix 0 get/mul cvx FontMatrix 4 get 0 ne{
FontMatrix 4 get/add cvx}if]cvx bind def/FontMatrix[1 0 currentdict /FontInfo known {FontInfo/ItalicAngle
get $$$ITALICANGLE sub sin } {0} ifelse 1 0 0]def currentdict /FontInfo known {/FontInfo FontInfo
dup length 10 add dict begin{
def}forall/FullName $$$FULLNAME def/FamilyName $$$FAMILYNAME def/ItalicAngle
$$$ITALICANGLE def/CapHeight $$$CAPHEIGHT def/StemV $$$STEMV def/XHeight $$$XHEIGHT def
/Ascent $$$ASCENT def/Descent $$$DESCENT def/OrigFontType $$$ORIGFONTTYPE def
$$$UNDERLINEPOSITION UnderlinePosition SubstMaster
/FontMatrix get transform/UnderlinePosition exch def pop $$$UNDERLINETHICKNESS
UnderlineThickness SubstMaster/FontMatrix get transform/UnderlineThickness
exch def pop currentdict end def} if currentdict/StrokeWidth known not{
/StrokeWidth 0 def}if/dvlen currentdict /FontInfo known {FontInfo dup /BlendAxisTypes known
{/BlendAxisTypes get length} {pop 2} ifelse} {2} ifelse def/cvlen
currentdict dup /WeightVector known {/WeightVector get length} {pop 4} ifelse def/str 1 string def currentdict
/$$SubUD$$ where{pop false false}{/shareddict where{pop currentshared not dup{
true setshared}if shareddict}{false userdict}ifelse/$$SubUD$$ 24 dict put true
}ifelse $$SubUD$$ begin{$$SubUD$$/bp{bind put}bind put $$SubUD$$/bd{bind def}
bp $$SubUD$$/pwinstr{3 -1 roll cvi 32768 add dup 256 idiv dup 256 mod 4 index
4 index 3 -1 roll put 256 mul sub 2 index 2 index 1 add 3 -1 roll put 2 add}bp
$$SubUD$$/pinstr{exch 3 sub exch 128 add abs dup cvi dup 4 index 4 index 3 -1
roll put sub 256 mul dup cvi dup 4 index 4 index 1 add 3 -1 roll put sub 256
mul cvi 2 index 2 index 2 add 3 -1 roll put}bp $$SubUD$$/gwfrstr{2 copy 2 copy
get 256 mul 3 1 roll 1 add get add 32768 sub exch 2 add exch}bp $$SubUD$$
/gwtvec{[3 1 roll cvlen{2 copy 2 copy 2 copy get 256 mul 3 1 roll 1 add get
add 256 mul 3 1 roll 2 add get add 65536.0 div 128.0 sub 3 1 roll 3 add}repeat pop
pop]}bp $$SubUD$$ /GetGlyphString{dup InfoDict exch known{InfoDict exch get}{
dup InfoDict exch 3 cvlen 3 mul add string dup 0 UpperMaster put put InfoDict
exch get}ifelse}bp $$SubUD$$/X{GetGlyphString 1 pwinstr 3 cvlen mul add dvlen
2 add 2 roll currentdict /ConvertDesignVector known
{ConvertDesignVector}{pop pop 0 0 0 1}ifelse cvlen 2 add -2 roll cvlen{3 -1 roll pinstr}
repeat pop pop}bp $$SubUD$$/Y{dup ExpandDict exch 4 -1 roll xtfm 2 div put X}
bp $$SubUD$$/Z{dup CompressDict exch 4 -1 roll put X}bp $$SubUD$$/L{dup
GetGlyphString 0 LowerMaster put}bp $$SubUD$$/S{CharStrings exch get
CharStrings exch 2 index exch put L}bp $$SubUD$$/R{3 index 3 index CharStrings
dup 4 1 roll exch get put dvlen add copy exch pop exec 3 -1 roll pop exec}bp
$$SubUD$$/RX{{X}4 R}bp $$SubUD$$/RY{{Y}5 R}bp $$SubUD$$/RZ{{Z}5 R}bp
systemdict/internaldict known{1183615869 systemdict/internaldict get{exec}
stopped{false}{dup/setweightvector known{true}{pop false}ifelse}ifelse}{false}
ifelse{/setweightvector get $$SubUD$$ exch/@setweightvector exch put $$SubUD$$
/cbwa1 false put version length 4 ge{version 0 4 getinterval dup(2015)eq exch
(2016)eq or{systemdict/internaldict known{1183615869 systemdict/internaldict
get{exec}stopped not{/CIDRun known{$$SubUD$$/cbwa1 true put}if}if}if}if}if
$$SubUD$$/SubBuildChar{exch dup begin $$SubUD$$ begin 5 dict begin/fontdict
exch def/code exch def/glyph Encoding code get def/cshare currentshared def
InfoDict glyph known not glyph/.notdef ne and{InfoDict/space known{/glyph
/space def}{/glyph/.notdef def}ifelse}if glyph/.notdef ne{InfoDict glyph get
dup 0 get/blnd exch def BlendsArray blnd get dup type/dicttype ne{BlendsArray
scheck setshared dup 0 get SubstMaster  dup /WeightVector known
{exch makeblendedfont begin 1 get
/FontMatrix exch FontMatrix exch dup matrix scale matrix concatmatrix def
$$SubUD$$/cbwa1 get{Private/UniqueID 1 put}if/PaintType fontdict/PaintType get
def/StrokeWidth fontdict/StrokeWidth get def /@SUB currentdict definefont
setfont BlendsArray blnd currentdict put currentdict end} {exch pop
begin pop currentdict setfont BlendsArray blnd currentdict 
put currentdict end} ifelse }if begin 1 gwfrstr
xtfm 0 CharBBox aload pop setcachedevice fontdict/PaintType get PaintType ne
fontdict/CharStrings get CharStrings ne or fontdict/StrokeWidth get
StrokeWidth ne or{CharStrings fontdict/CharStrings get eq{true}{fontdict
/CharStrings get scheck}ifelse setshared currentdict end dup length dict begin
{exch dup/FID eq{pop pop}{exch def}ifelse}forall/PaintType fontdict/PaintType
get def/StrokeWidth fontdict/StrokeWidth get def/CharStrings fontdict
/CharStrings get def gwtvec SubstMaster /WeightVector known {/WeightVector exch def}
{pop} ifelse /@SUB currentdict definefont
setfont fontdict/BlendsArray get scheck not currentdict scheck or{fontdict
/BlendsArray get blnd currentdict put}if cshare setshared}{currentdict setfont
currentdict scheck setshared gwtvec currentdict exch SubstMaster /WeightVector known
{@setweightvector cshare setshared}{pop pop}ifelse
}ifelse ExpandDict glyph known{ExpandDict glyph get 0 translate}{
CompressDict glyph known{CompressDict glyph get 1 scale}if}ifelse mark
cachestatus 0 setcachelimit 0 0 moveto glyph glyphshow setcachelimit
cleartomark end}{0 0 0 0 0 0 setcachedevice}ifelse end end end}bp}{systemdict
/rectfill known{version dup length 4 ge{0 4 getinterval dup(2013)eq exch(2012)
eq or}{pop false}ifelse{$$SubUD$$/dct1{cachestatus 7 1 roll pop pop pop pop pop pop
0 setcachelimit currentdict/XUID undef}bp$$SubUD$$/dct2{setcachelimit}bp}
{$$SubUD$$/dct1{cachestatus 7 1 roll pop pop pop pop pop pop 0 setcachelimit}bp
$$SubUD$$/dct2{setcachelimit}bp}ifelse}{$$SubUD$$/dct1{}put $$SubUD$$/dct2{}put}ifelse
$$SubUD$$/SubBuildChar{exch dup begin $$SubUD$$ begin 5 dict begin/fontdict
exch def/code exch def/glyph Encoding code get def InfoDict glyph known not
glyph/.notdef ne and{InfoDict/space known Encoding 32 get/space eq and{/glyph
/space def/code 32 def}{/glyph/.notdef def}ifelse}if glyph/.notdef ne{InfoDict
glyph get dup 0 get/blnd exch def BlendsArray blnd get dup type/dicttype ne{
dup 0 get SubstMaster dup /WeightVector known
{exch makeblendedfont begin 1 get /FontMatrix exch
FontMatrix exch dup matrix scale matrix concatmatrix def BlendsArray blnd
currentdict put currentdict end}{exch pop
begin pop currentdict setfont BlendsArray blnd currentdict 
put currentdict end} ifelse } if begin save exch 1 gwfrstr xtfm 0 CharBBox
aload pop setcachedevice gwtvec SubstMaster /WeightVector known
{/WeightVector exch def} {pop} ifelse/Encoding fontdict
/Encoding get def/PaintType fontdict/PaintType get def/CharStrings fontdict
/CharStrings get def/StrokeWidth fontdict/StrokeWidth get def ExpandDict glyph
known{ExpandDict glyph get 0 translate}{CompressDict glyph known{CompressDict
glyph get 1 scale}if}ifelse/$Blend[false WeightVector dup length 1 sub -1 1{1
index dup length 3 -1 roll sub get dup 0 eq{pop 1 index{/exch load 3 1 roll}if
/pop load 3 1 roll}{dup 1 eq{pop}{2 index{/exch load 4 1 roll}if 3 1 roll/mul
load 3 1 roll}ifelse 1 index{/add load 3 1 roll}if exch pop true exch}ifelse}
for pop{/add load}if]cvx def dct1/@SUB currentdict definefont setfont 0 0
moveto str 0 code put str show dct2 restore end}{0 0 0 0 0 0 setcachedevice}ifelse
end end end}bp/currentshared where{pop true}{false}ifelse{$$SubUD$$
/PatchSubBuildChar{exch dup begin $$SubUD$$ begin 5 dict begin/fontdict exch
def/code exch def/glyph Encoding code get def/cshare currentshared def
InfoDict glyph known not glyph/.notdef ne and{InfoDict/space known Encoding 32
get/space eq and{/glyph/space def/code 32 def}{/glyph/.notdef def}ifelse}if
glyph/.notdef ne{InfoDict glyph get dup 0 get/blnd exch def BlendsArray blnd
get dup type/dicttype ne{BlendsArray scheck setshared dup 0 get SubstMaster
dup /WeightVector known 
{exch makeblendedfont begin 1 get /FontMatrix exch FontMatrix exch dup matrix
scale matrix concatmatrix def BlendsArray blnd currentdict put currentdict end}
{exch pop begin pop currentdict setfont BlendsArray blnd currentdict 
put currentdict end} ifelse 
}if false setshared dup maxlength dict copy begin 1 gwfrstr xtfm 0 CharBBox
aload pop setcachedevice gwtvec SubstMaster /WeightVector known
{/WeightVector exch def} {pop} ifelse/Encoding fontdict
/Encoding get def/PaintType fontdict/PaintType get def/CharStrings fontdict
/CharStrings get def/StrokeWidth fontdict/StrokeWidth get def ExpandDict glyph
known{ExpandDict glyph get 0 translate}{CompressDict glyph known{CompressDict
glyph get 1 scale}if}ifelse/$Blend[false WeightVector dup length 1 sub -1 1{1
index dup length 3 -1 roll sub get dup 0 eq{pop 1 index{/exch load 3 1 roll}if
/pop load 3 1 roll}{dup 1 eq{pop}{2 index{/exch load 4 1 roll}if 3 1 roll/mul
load 3 1 roll}ifelse 1 index{/add load 3 1 roll}if exch pop true exch}ifelse}
for pop{/add load}if]cvx def dct1/@SUB currentdict definefont setfont 0 0
moveto str 0 code put str show dct2 end cshare setshared}{0 0 0 0 0 0
setcachedevice}ifelse end end end}bp}if}ifelse}if{false setshared}if begin
$$SubUD$$/@setweightvector known{/BuildChar $$SubUD$$/SubBuildChar get def}{
/currentshared where{pop currentshared}{false}ifelse{/BuildChar $$SubUD$$
/PatchSubBuildChar get def}{/BuildChar $$SubUD$$/SubBuildChar get def}ifelse}
ifelse/UpperMaster 0 def/LowerMaster 1 def/BlendsArray[$$$HDESIGNVECTOR
$$$xDESIGNVECTOR]def/InfoDict $$$INFODICTSIZE dict def/ExpandDict
$$$EXPANDDICTSIZE dict def/CompressDict $$$COMPRESSDICTSIZE dict def
$$$DOESSMALLCAPS{/CharStrings CharStrings dup maxlength dict begin{def}bind
forall currentdict end def}if
/W 0.265 def
W 0.442 278/space X
W 0.44 296/exclam X
W 0.574 389/quotedbl X
W 0.306 556/numbersign X
W 0.306 556/dollar X
W 0.65 833/percent X
W 0.606 815/ampersand X
W  0.5 333/parenleft X
W  0.5 333/parenright X
W 0.673 500/asterisk X
W 0.744 606/plus X
W 0.751 278/comma X
W 0.631 333/hyphen X
W 0.751 278/period X
W 0.146 278/slash X
W 0.306 556/zero X
W 0.491 556/one X
W 0.306 556/two X
W 0.306 556/three X
W 0.306 556/four X
W 0.306 556/five X
W 0.306 556/six X
W 0.306 556/seven X
W 0.306 556/eight X
W 0.306 556/nine X
W 0.751 278/colon X
W 0.751 278/semicolon X
W 0.744 606/less X
W 0.744 606/equal X
W 0.744 606/greater X
W 0.352 444/question X
W 0.469 737/at X
W 0.648 722/A X
W 0.793 722/B X
W 0.695 722/C X
W 0.682 778/D X
W 0.934 722/E X
W 0.878 667/F X
W 0.769 778/G X
W 0.671 833/H X
W    1 407 24/I Y
W 0.772 556/J X
W 0.863 778/K X
W 0.775 667/L X
W 0.555 944/M X
W 0.71 815/N X
W 0.566 778/O X
W 0.644 667/P X
W 0.566 778/Q X
W 0.752 722/R X
W 0.811 630/S X
W 0.643 667/T X
W 0.803 815/U X
W 0.605 722/V X
W 0.455 981/W X
W 0.493 704/X X
W 0.635 704/Y X
W 0.541 611/Z X
W 0.531 333/bracketleft X
W 0.765 606/backslash X
W 0.531 333/bracketright X
W 0.744 606/asciicircum X
W 0.629 500/underscore X
/V 0.281 def
V 0.625 556/a L X
V 0.459 556/b L X
V 0.384 444/c L X
V 0.511 574/d L X
V 0.47 500/e L X
V 0.447 333/f L X
V 0.448 537/g L X
V 0.579 611/h L X
V 0.771 315/i L X
V 0.692 296/j L X
V 0.653 593/k L X
V 0.766 315/l L X
V 0.566 889/m L X
V 0.58 611/n L X
V 0.343 500/o L X
V 0.477 574/p L X
V 0.461 556/q L X
V 0.633 444/r L X
V 0.553 463/s L X
V 0.658 389/t L X
V 0.597 611/u L X
V 0.558 537/v L X
V 0.532 778/w L X
V 0.557 537/x L X
W 0.387 204/quotesingle X
W 0.266 333/grave X

end end currentdict end
/NewCenturySchlbk-Roman exch definefont pop
ct_EuroDict begin
{{dup findfont /InfoDict get /Euro known
{/Euro ct_AddGlyphToPrinterFont}
{ pop restore }ifelse}{restore}ifelse}if end
%%EndFont
end
reset_gvm
/EAKJAH+NewCenturySchlbk-Roman /NewCenturySchlbk-Roman findfont ct_VMDictPut/EAKJAH+NewCenturySchlbk-Roman*1 [48{/.notdef}rp /zero /one /two /three 204{/.notdef}rp]EAKJAH+NewCenturySchlbk-Roman nfEAKJAH+NewCenturySchlbk-Roman*1 [12 0 0 -12 0 0 ]msf215.482 183.669 mo(3)shEAKJAG+Symbol*1 [12 0 0 -12 0 0 ]msf245.184 183.669 mo( )shEAKJAH+NewCenturySchlbk-Roman*1 [12 0 0 -12 0 0 ]msf251.77 183.669 mo(2)shEAKJAG+Symbol*1 [12 0 0 -12 0 0 ]msf281.472 183.669 mo( )shEAKJAH+NewCenturySchlbk-Roman*1 [12 0 0 -12 0 0 ]msf288.058 183.669 mo(1012)[34.6464 36.288 36.288 0 ]xshgsave
438.48 210.669 mo
208.08 210.669 li
208.08 3.0687 li
438.48 3.0687 li
cp
clp
EAKJAH+NewCenturySchlbk-Roman*1 [12 0 0 -12 0 0 ]msf431.28 183.669 mo(3)shgrestore
true set_gvm
%%BeginFont: NewCenturySchlbk-Italic
userdict /Adobe_CTFauxDict 30 dict dup begin put
/$$$SUBSTITUTEBASE /AdobeSerifMM def
/$$$FONTNAME /NewCenturySchlbk-Italic def
/$$$UNIQUEID 0 def
/$$$FONTBBOX { [ -350 -265 FontMatrix transform 1192 1075 FontMatrix transform ] } def
/$$$ITALICANGLE -16 def

/$$$CAPHEIGHT 722 def
/$$$STEMV 80 def
/$$$XHEIGHT 466 def

/$$$FULLNAME (NewCenturySchlbk-Italic Substitution) def
/$$$FAMILYNAME (NewCenturySchlbk-Italic) def

/$$$UNDERLINEPOSITION -150 def
/$$$UNDERLINETHICKNESS 50 def

/$$$HDESIGNVECTOR { [ [ 0.207 0.726 currentdict /ConvertDesignVector known 
{ConvertDesignVector}{pop pop 0 0 0 1}ifelse ] 1.0 ] } def
/$$$xDESIGNVECTOR { [ [ 0.219 0.504 currentdict /ConvertDesignVector known 
{ConvertDesignVector}{pop pop 0 0 0 1}ifelse ] 0.97 ] } def

/$$$INFODICTSIZE 256 def
/$$$EXPANDDICTSIZE 256 def
/$$$COMPRESSDICTSIZE 256 def

/$$$DOESSMALLCAPS false def
/$$$ORIGFONTTYPE /Type1 def
/$$$ASCENT 737 def
/$$$DESCENT -205 def
{{(NewCenturySchlbk-Italic)(_)search{exch pop exch pop cvn dup findfont/FontName get eq}{pop false}
ifelse}systemdict/resourcestatus known{currentglobal exch /NewCenturySchlbk-Italic /Font resourcestatus{pop pop pop
true}{exec}ifelse exch setglobal exit}if FontDirectory/NewCenturySchlbk-Italic known{pop true exit}if
systemdict/SharedFontDirectory known{SharedFontDirectory/NewCenturySchlbk-Italic known{pop true
exit}if}if systemdict/deletefile known{{(%font%NewCenturySchlbk-Italic)(fonts/NewCenturySchlbk-Italic)}{{status}
stopped{pop exit}{{4{pop}repeat pop true exit}if}ifelse}forall}if exec exit}
loop{save true}{false}ifelse

ct_EuroDict begin dup{/NewCenturySchlbk-Italic dup findfont /CharStrings 2 copy known
{get /Euro known{pop false exch}{true 3 -1 roll}ifelse}
{pop pop false exch}ifelse}if end
$$$SUBSTITUTEBASE findfont dup maxlength 19 add dict begin/SubstMaster exch
def SubstMaster{exch dup dup dup/FID eq exch/UniqueID eq or exch/XUID eq or{
pop pop}{exch def}ifelse}bind forall/SubstitutionVersion 3 def/FontName
$$$FONTNAME def/FontType 3 def/FontBBox $$$FONTBBOX def/CharBBox FontBBox dup
length array copy def/xtfm[FontMatrix 0 get/mul cvx FontMatrix 4 get 0 ne{
FontMatrix 4 get/add cvx}if]cvx bind def/FontMatrix[1 0 currentdict /FontInfo known {FontInfo/ItalicAngle
get $$$ITALICANGLE sub sin } {0} ifelse 1 0 0]def currentdict /FontInfo known {/FontInfo FontInfo
dup length 10 add dict begin{
def}forall/FullName $$$FULLNAME def/FamilyName $$$FAMILYNAME def/ItalicAngle
$$$ITALICANGLE def/CapHeight $$$CAPHEIGHT def/StemV $$$STEMV def/XHeight $$$XHEIGHT def
/Ascent $$$ASCENT def/Descent $$$DESCENT def/OrigFontType $$$ORIGFONTTYPE def
$$$UNDERLINEPOSITION UnderlinePosition SubstMaster
/FontMatrix get transform/UnderlinePosition exch def pop $$$UNDERLINETHICKNESS
UnderlineThickness SubstMaster/FontMatrix get transform/UnderlineThickness
exch def pop currentdict end def} if currentdict/StrokeWidth known not{
/StrokeWidth 0 def}if/dvlen currentdict /FontInfo known {FontInfo dup /BlendAxisTypes known
{/BlendAxisTypes get length} {pop 2} ifelse} {2} ifelse def/cvlen
currentdict dup /WeightVector known {/WeightVector get length} {pop 4} ifelse def/str 1 string def currentdict
/$$SubUD$$ where{pop false false}{/shareddict where{pop currentshared not dup{
true setshared}if shareddict}{false userdict}ifelse/$$SubUD$$ 24 dict put true
}ifelse $$SubUD$$ begin{$$SubUD$$/bp{bind put}bind put $$SubUD$$/bd{bind def}
bp $$SubUD$$/pwinstr{3 -1 roll cvi 32768 add dup 256 idiv dup 256 mod 4 index
4 index 3 -1 roll put 256 mul sub 2 index 2 index 1 add 3 -1 roll put 2 add}bp
$$SubUD$$/pinstr{exch 3 sub exch 128 add abs dup cvi dup 4 index 4 index 3 -1
roll put sub 256 mul dup cvi dup 4 index 4 index 1 add 3 -1 roll put sub 256
mul cvi 2 index 2 index 2 add 3 -1 roll put}bp $$SubUD$$/gwfrstr{2 copy 2 copy
get 256 mul 3 1 roll 1 add get add 32768 sub exch 2 add exch}bp $$SubUD$$
/gwtvec{[3 1 roll cvlen{2 copy 2 copy 2 copy get 256 mul 3 1 roll 1 add get
add 256 mul 3 1 roll 2 add get add 65536.0 div 128.0 sub 3 1 roll 3 add}repeat pop
pop]}bp $$SubUD$$ /GetGlyphString{dup InfoDict exch known{InfoDict exch get}{
dup InfoDict exch 3 cvlen 3 mul add string dup 0 UpperMaster put put InfoDict
exch get}ifelse}bp $$SubUD$$/X{GetGlyphString 1 pwinstr 3 cvlen mul add dvlen
2 add 2 roll currentdict /ConvertDesignVector known
{ConvertDesignVector}{pop pop 0 0 0 1}ifelse cvlen 2 add -2 roll cvlen{3 -1 roll pinstr}
repeat pop pop}bp $$SubUD$$/Y{dup ExpandDict exch 4 -1 roll xtfm 2 div put X}
bp $$SubUD$$/Z{dup CompressDict exch 4 -1 roll put X}bp $$SubUD$$/L{dup
GetGlyphString 0 LowerMaster put}bp $$SubUD$$/S{CharStrings exch get
CharStrings exch 2 index exch put L}bp $$SubUD$$/R{3 index 3 index CharStrings
dup 4 1 roll exch get put dvlen add copy exch pop exec 3 -1 roll pop exec}bp
$$SubUD$$/RX{{X}4 R}bp $$SubUD$$/RY{{Y}5 R}bp $$SubUD$$/RZ{{Z}5 R}bp
systemdict/internaldict known{1183615869 systemdict/internaldict get{exec}
stopped{false}{dup/setweightvector known{true}{pop false}ifelse}ifelse}{false}
ifelse{/setweightvector get $$SubUD$$ exch/@setweightvector exch put $$SubUD$$
/cbwa1 false put version length 4 ge{version 0 4 getinterval dup(2015)eq exch
(2016)eq or{systemdict/internaldict known{1183615869 systemdict/internaldict
get{exec}stopped not{/CIDRun known{$$SubUD$$/cbwa1 true put}if}if}if}if}if
$$SubUD$$/SubBuildChar{exch dup begin $$SubUD$$ begin 5 dict begin/fontdict
exch def/code exch def/glyph Encoding code get def/cshare currentshared def
InfoDict glyph known not glyph/.notdef ne and{InfoDict/space known{/glyph
/space def}{/glyph/.notdef def}ifelse}if glyph/.notdef ne{InfoDict glyph get
dup 0 get/blnd exch def BlendsArray blnd get dup type/dicttype ne{BlendsArray
scheck setshared dup 0 get SubstMaster  dup /WeightVector known
{exch makeblendedfont begin 1 get
/FontMatrix exch FontMatrix exch dup matrix scale matrix concatmatrix def
$$SubUD$$/cbwa1 get{Private/UniqueID 1 put}if/PaintType fontdict/PaintType get
def/StrokeWidth fontdict/StrokeWidth get def /@SUB currentdict definefont
setfont BlendsArray blnd currentdict put currentdict end} {exch pop
begin pop currentdict setfont BlendsArray blnd currentdict 
put currentdict end} ifelse }if begin 1 gwfrstr
xtfm 0 CharBBox aload pop setcachedevice fontdict/PaintType get PaintType ne
fontdict/CharStrings get CharStrings ne or fontdict/StrokeWidth get
StrokeWidth ne or{CharStrings fontdict/CharStrings get eq{true}{fontdict
/CharStrings get scheck}ifelse setshared currentdict end dup length dict begin
{exch dup/FID eq{pop pop}{exch def}ifelse}forall/PaintType fontdict/PaintType
get def/StrokeWidth fontdict/StrokeWidth get def/CharStrings fontdict
/CharStrings get def gwtvec SubstMaster /WeightVector known {/WeightVector exch def}
{pop} ifelse /@SUB currentdict definefont
setfont fontdict/BlendsArray get scheck not currentdict scheck or{fontdict
/BlendsArray get blnd currentdict put}if cshare setshared}{currentdict setfont
currentdict scheck setshared gwtvec currentdict exch SubstMaster /WeightVector known
{@setweightvector cshare setshared}{pop pop}ifelse
}ifelse ExpandDict glyph known{ExpandDict glyph get 0 translate}{
CompressDict glyph known{CompressDict glyph get 1 scale}if}ifelse mark
cachestatus 0 setcachelimit 0 0 moveto glyph glyphshow setcachelimit
cleartomark end}{0 0 0 0 0 0 setcachedevice}ifelse end end end}bp}{systemdict
/rectfill known{version dup length 4 ge{0 4 getinterval dup(2013)eq exch(2012)
eq or}{pop false}ifelse{$$SubUD$$/dct1{cachestatus 7 1 roll pop pop pop pop pop pop
0 setcachelimit currentdict/XUID undef}bp$$SubUD$$/dct2{setcachelimit}bp}
{$$SubUD$$/dct1{cachestatus 7 1 roll pop pop pop pop pop pop 0 setcachelimit}bp
$$SubUD$$/dct2{setcachelimit}bp}ifelse}{$$SubUD$$/dct1{}put $$SubUD$$/dct2{}put}ifelse
$$SubUD$$/SubBuildChar{exch dup begin $$SubUD$$ begin 5 dict begin/fontdict
exch def/code exch def/glyph Encoding code get def InfoDict glyph known not
glyph/.notdef ne and{InfoDict/space known Encoding 32 get/space eq and{/glyph
/space def/code 32 def}{/glyph/.notdef def}ifelse}if glyph/.notdef ne{InfoDict
glyph get dup 0 get/blnd exch def BlendsArray blnd get dup type/dicttype ne{
dup 0 get SubstMaster dup /WeightVector known
{exch makeblendedfont begin 1 get /FontMatrix exch
FontMatrix exch dup matrix scale matrix concatmatrix def BlendsArray blnd
currentdict put currentdict end}{exch pop
begin pop currentdict setfont BlendsArray blnd currentdict 
put currentdict end} ifelse } if begin save exch 1 gwfrstr xtfm 0 CharBBox
aload pop setcachedevice gwtvec SubstMaster /WeightVector known
{/WeightVector exch def} {pop} ifelse/Encoding fontdict
/Encoding get def/PaintType fontdict/PaintType get def/CharStrings fontdict
/CharStrings get def/StrokeWidth fontdict/StrokeWidth get def ExpandDict glyph
known{ExpandDict glyph get 0 translate}{CompressDict glyph known{CompressDict
glyph get 1 scale}if}ifelse/$Blend[false WeightVector dup length 1 sub -1 1{1
index dup length 3 -1 roll sub get dup 0 eq{pop 1 index{/exch load 3 1 roll}if
/pop load 3 1 roll}{dup 1 eq{pop}{2 index{/exch load 4 1 roll}if 3 1 roll/mul
load 3 1 roll}ifelse 1 index{/add load 3 1 roll}if exch pop true exch}ifelse}
for pop{/add load}if]cvx def dct1/@SUB currentdict definefont setfont 0 0
moveto str 0 code put str show dct2 restore end}{0 0 0 0 0 0 setcachedevice}ifelse
end end end}bp/currentshared where{pop true}{false}ifelse{$$SubUD$$
/PatchSubBuildChar{exch dup begin $$SubUD$$ begin 5 dict begin/fontdict exch
def/code exch def/glyph Encoding code get def/cshare currentshared def
InfoDict glyph known not glyph/.notdef ne and{InfoDict/space known Encoding 32
get/space eq and{/glyph/space def/code 32 def}{/glyph/.notdef def}ifelse}if
glyph/.notdef ne{InfoDict glyph get dup 0 get/blnd exch def BlendsArray blnd
get dup type/dicttype ne{BlendsArray scheck setshared dup 0 get SubstMaster
dup /WeightVector known 
{exch makeblendedfont begin 1 get /FontMatrix exch FontMatrix exch dup matrix
scale matrix concatmatrix def BlendsArray blnd currentdict put currentdict end}
{exch pop begin pop currentdict setfont BlendsArray blnd currentdict 
put currentdict end} ifelse 
}if false setshared dup maxlength dict copy begin 1 gwfrstr xtfm 0 CharBBox
aload pop setcachedevice gwtvec SubstMaster /WeightVector known
{/WeightVector exch def} {pop} ifelse/Encoding fontdict
/Encoding get def/PaintType fontdict/PaintType get def/CharStrings fontdict
/CharStrings get def/StrokeWidth fontdict/StrokeWidth get def ExpandDict glyph
known{ExpandDict glyph get 0 translate}{CompressDict glyph known{CompressDict
glyph get 1 scale}if}ifelse/$Blend[false WeightVector dup length 1 sub -1 1{1
index dup length 3 -1 roll sub get dup 0 eq{pop 1 index{/exch load 3 1 roll}if
/pop load 3 1 roll}{dup 1 eq{pop}{2 index{/exch load 4 1 roll}if 3 1 roll/mul
load 3 1 roll}ifelse 1 index{/add load 3 1 roll}if exch pop true exch}ifelse}
for pop{/add load}if]cvx def dct1/@SUB currentdict definefont setfont 0 0
moveto str 0 code put str show dct2 end cshare setshared}{0 0 0 0 0 0
setcachedevice}ifelse end end end}bp}if}ifelse}if{false setshared}if begin
$$SubUD$$/@setweightvector known{/BuildChar $$SubUD$$/SubBuildChar get def}{
/currentshared where{pop currentshared}{false}ifelse{/BuildChar $$SubUD$$
/PatchSubBuildChar get def}{/BuildChar $$SubUD$$/SubBuildChar get def}ifelse}
ifelse/UpperMaster 0 def/LowerMaster 1 def/BlendsArray[$$$HDESIGNVECTOR
$$$xDESIGNVECTOR]def/InfoDict $$$INFODICTSIZE dict def/ExpandDict
$$$EXPANDDICTSIZE dict def/CompressDict $$$COMPRESSDICTSIZE dict def
$$$DOESSMALLCAPS{/CharStrings CharStrings dup maxlength dict begin{def}bind
forall currentdict end def}if
/W 0.207 def
W 0.47 278/space X
W 0.596 333/exclam X
W 0.686 400/quotedbl X
W 0.351 556/numbersign X
W 0.351 556/dollar X
W 0.703 833/percent X
W 0.734 852/ampersand X
W 0.532 333/parenleft X
W 0.532 333/parenright X
W 0.684 500/asterisk X
W 0.772 606/plus X
W 0.784 278/comma X
W 0.639 333/hyphen X
W 0.784 278/period X
W 0.77 606/slash X
W 0.351 556/zero X
W 0.519 556/one X
W 0.351 556/two X
W 0.351 556/three X
W 0.351 556/four X
W 0.351 556/five X
W 0.351 556/six X
W 0.351 556/seven X
W 0.351 556/eight X
W 0.351 556/nine X
W 0.784 278/colon X
W 0.784 278/semicolon X
W 0.772 606/less X
W 0.772 606/equal X
W 0.772 606/greater X
W 0.387 444/question X
W 0.518 747/at X
W 0.641 704/A X
W 0.852 722/B X
W 0.741 722/C X
W 0.733 778/D X
W 0.988 722/E X
W 0.936 667/F X
W 0.814 778/G X
W 0.726 833/H X
W    1 407 41/I Y
W 0.981 611/J X
W 0.822 741/K X
W 0.828 667/L X
W 0.607 944/M X
W 0.749 815/N X
W 0.608 778/O X
W 0.706 667/P X
W 0.608 778/Q X
W 0.879 741/R X
W 0.97 667/S X
W 0.739 685/T X
W 0.84 815/U X
W 0.593 704/V X
W 0.409 926/W X
W 0.532 704/X X
W 0.626 685/Y X
W 0.715 667/Z X
W 0.562 333/bracketleft X
W 0.77 606/backslash X
W 0.562 333/bracketright X
W 0.772 606/asciicircum X
W 0.654 500/underscore X
/V 0.219 def
V 0.735 574/a L X
V 0.501 556/b L X
V 0.424 444/c L X
V 0.654 611/d L X
V 0.355 444/e L X
V 0.502 333/f L X
V 0.499 537/g L X
V 0.631 611/h L X
V    1 333 2/i L Y
V 0.98 315/j L X
V 0.584 556/k L X
V    1 333 2/l L Y
V 0.613 889/m L X
V 0.633 611/n L X
V 0.391 500/o L X
V 0.521 574/p L X
V 0.506 556/q L X
V 0.711 444/r L X
V 0.528 444/s L X
V 0.56 352/t L X
V 0.65 611/u L X
V 0.547 519/v L X
V 0.576 778/w L X
V 0.504 500/x L X
W 0.795 278/quotesingle X
W 0.304 333/grave X

end end currentdict end
/NewCenturySchlbk-Italic exch definefont pop
ct_EuroDict begin
{{dup findfont /InfoDict get /Euro known
{/Euro ct_AddGlyphToPrinterFont}
{ pop restore }ifelse}{restore}ifelse}if end
%%EndFont
end
reset_gvm
true set_gvm
/EAKJAJ+NewCenturySchlbk-Italic /NewCenturySchlbk-Italic findfont ct_VMDictPutreset_gvm
/EAKJAJ+NewCenturySchlbk-Italic*1 [102{/.notdef}rp /f 17{/.notdef}rp /x 135{/.notdef}rp]EAKJAJ+NewCenturySchlbk-Italic nfEAKJAJ+NewCenturySchlbk-Italic*1 [12.0007 0 0 -12.0007 0 0 ]msf328.475 16.2687 mo(f)shtrue set_gvm
reset_gvm
/EAKJAH+NewCenturySchlbk-Roman*1 [40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 2{/.notdef}rp /slash /zero /one /two /three 7{/.notdef}rp /semicolon 196{/.notdef}rp]EAKJAH+NewCenturySchlbk-Roman nfEAKJAH+NewCenturySchlbk-Roman*1 [12.0007 0 0 -12.0007 0 0 ]msf334.271 16.2687 mo(\()shEAKJAJ+NewCenturySchlbk-Italic*1 [12.0007 0 0 -12.0007 0 0 ]msf338.268 16.2687 mo(x)shEAKJAH+NewCenturySchlbk-Roman*1 [12.0007 0 0 -12.0007 0 0 ]msf344.268 16.2687 mo(;)shtrue set_gvm
%ADOBeginSubsetFont: NMOBAA+Symbol Initial
ct_T42Dict begin
-0.164 -0.297 1.063 0.824
 256 array 0 1 255 {1 index exch /.notdef put} for  /NMOBAA+Symbol
Type42DictBegin
[<00010000000b000b000b000b637674206e538304000000bc000002146670
676d61177010000002d00000008d676c79661592889b000011dc0000027e
68656164c04f3b4a0000036000000036686865610cca0566000003980000
0024686d74788fb04e29000003bc0000031c6c6f63616eed6f47000006d8
000001906d61787008ce018600000868000000206e616d65ea92aeab0000
088800000145707265705ea932a8000009d00000080c6764697200000000
000000000000000000ee00cd003b00870289003f005600c1005e01ec00b2
0193008b012d008900ee003b00ae00b200c700b20037002d006003a600c1
00fc00d300b800d3025c00cb00c100660031021900c1004e005400b2009c
0202021d007500c1019600c1020e023f01ac009e029c017f00a0005a001f
042700c100f4005803b4006d003302a8005e046a02850700007302a20075
01100073005e0242024e0902009804f600370546005c00bc00b000a6036d
02e7075e004401f80075006800dd00e1003502370062008d0262008900be
01d301b601d701e3025200cf01c301fc01cd054805480548056600000017
00ee05c100b6021b007100b60000001b003f030405480548054805480000
001f0029004e0029004e0066019305cb019e008b015000ee00ee0031009a
0091004e009a054800b000310398002d036d003300e9004a004a00290398
039800330583004a00c3008f005205d3005a019c0075067d006003980398
03b601b200330398058301c70398039803980000001201e5061d00390421
0227065e008700e905b0023d02d70077008302f6058301b400df058d02a6
00750112059c02830162005e0242024e004e0552008b058d001404f60021
058d005c002d001f05f4005201ba022d001003a601aa0075006800dd00e1
05c902e7020c0646006405ec01ee01f8062f062501b205f80200008301c1
0635003d01fc063301be0639060e00680083006200be7b857fff00820030
4007060504030201002c2010b002254964b040515820c859212d2cb00225
4964b040515820c859212d2c20100720b00050b00d7920b8ffff5058041b
0559b0051cb0032508b0042523e120b00050b00d7920b8ffff5058041b05
59b0051cb0032508e12d2c4b505820b80107454459212d2cb00225456044
2d2c4b5358b00225b0022545445921212d2c45442d000000000100000001
000045e0bf5d5f0f3cf50101080000000000a1cd888000000000b7426995
feaafd9c0881069e00000006000100000000000000010000059cfd9c0000
0856feaafeac08810001000000000000000000000000000000c704cd0066
0000000000fa00000200000002aa00dd0400fffa06aa00810639006002aa
005e02aa00600464005a02000058020000890239fff20400003b040000a0
0400003d0400003b040000330400002b0400005404000039040000520400
004c023900a002390079046400600464005804640060038d007d02aa0054
02aa00540400ffee03d7009e019a00a003d7009e0333007903ae00ae0464
005c05b4006d0464005a0464005804640058049c009603f4007f05b4004a
0696003d046400230231ff480625006605b400d50464ffe30400ffec0464
001f04e5002b080000d90464005803f400060156feaa0652007104640058
0464006d0464005804d3011d07e5007307e5007304d3011d085600ac05b4
00370625009806250098057d0252057d008f05c7fff60556003104d30035
04e3002904e3002905c7002b05ee005802aa003905c7003f057d001d071d
003f05c700270529007105c700560625002f0473002f04bc001204e30021
0585001b061b004605c70019065c0002050c004604640089034a000203f4
004803f4002704d30012042b005e02a2009c0464000e04640023042b0000
03f20021046400420464007d04d30048038300540383ffcf049cfff8042b
003304640014057dfff8057d00460200008901fa0083034a009306060073
06060021060600cd0606008105b400c90422000003830014062500250625
00250464005805b4003705b4003705b4003705b4003705b4003704d300b2
07e5004407e5004404d300b20856007d0544004a05b4003704d300a604d3
00a40625008d06e7014c06960050057d025206960127031200be031200be
031200810312008105b400480464004a0400009102a2003502a20035050c
001205b4fff604d3003d0383006d05b400310312008d0312008d03120025
0312002507e5013f03f401b603f4005a03f401b603f401b603f4006603f4
01b603f4006604f6ffec04d3022d0800ff7f0312008d031200be031201fc
031201cd0652006206520062071f01350652004806520048064a00c1057d
005e065c003d0464001f0544007d05f40062020000000200000002000000
020000000200000002000000000000210021002100210021002100210021
005a0097009700ca00ca00ca00ca00ca00ca00ca00ca00ca00ca00ca00ca
00ca00ca00ca00ca00ca00ca00ca00ca00ca00ca00ca00ca00ca00ca00ca
00ca00ca00ca00ca00ca013f013f013f013f013f013f013f013f013f013f
013f013f013f013f013f013f013f013f013f013f013f013f013f013f013f
013f013f013f013f013f013f013f013f013f013f013f013f013f013f013f
013f013f013f013f013f013f013f013f013f013f013f013f013f013f013f
013f013f013f013f013f013f013f013f013f013f013f013f013f013f013f
013f013f013f013f013f013f013f013f013f013f013f013f013f013f013f
013f013f013f013f013f013f013f013f013f013f013f013f013f013f013f
013f013f013f013f013f013f013f013f013f013f013f013f013f013f013f
013f013f013f013f013f013f013f013f013f013f013f013f013f013f013f
013f013f013f013f013f013f013f013f013f013f013f013f013f013f013f
013f013f013f013f013f013f013f013f013f013f013f0001000000c7007a
0004001b00020002001000400007000007e800ae00010001000000090072
0001000000000000003600000001000000000003000d0036000100000000
0004000d00430001000000000006000d00500003000104090001001a005d
0003000104090002000e00770003000104090003001a0085000300010409
0004001a009f0003000104090006001a00b9a920313939302d3939204170
706c6520436f6d707574657220496e632e20a920313939302d3931204269
7473747265616d20496e632e4c4841434b442b53796d626f6c4c4841434b
442b53796d626f6c4c4841434b442b53796d626f6c004c00480041004300
4b0044002b00530079006d0062006f006c0052006500670075006c006100
72004c004800410043004b0044002b00530079006d0062006f006c004c00
4800410043004b0044002b00530079006d0062006f006c004c0048004100
43004b0044002b00530079006d0062006f006c00000041ff0280010500fe
0003010400fe00030103007d0003010200fe0003010100fe0003010000fe
000300ff00fe000300fe00fe000300fd00fe000300fc00fe000300fb00fe
000300fa00fe000300f800fe000300f700fe000300f600fe000300f500fe
000300f400fe000300f300fe000300f200fe000300f100fe000300f000fe
000300ef00fe000300ee00fe000300ed00fe000300ec00fe000300eb0000
000300ea00fe000300e900e80064000500e900fe000300e80064000300e7
00fe000300e600fe000300e500fe000300e400fe000300e300fe000300e2
00fe000300e100fe000300df00fe000300de00fe000300dc00fe000300db
00fe000300da00fe000300d900fe000300d800fe000300d700fe000300d6
0084001d000500d60023000300d200fe000300d20023000400d100fe0003
00d000fe000300d00023000400cf00fe000300ce00fe000300cc00fe0003
00cb00c8000300ca00fe000300c900fe000300c800fe000300c700fe0003
00c60064000300c500fe000300c400fe000300c300fe000300c100fe0003
00bf00fe000300be00fe000300bd00fe000300bc00fe000300bb00fe0003
00ba00b9004f000500ba00fe000300baffd0000400b9004f000300b800b7
000e000500b80016000300b80080000400b700b60006000500b7000e0003
00b70040000400b60006000300b50032000300b40082000341ff00b300a0
0033000500b3005c000300b30040000400b200fe000300b10064000300b0
00af00ba000500b000fe000300af00ae0076000500af00ba000300af0080
000400ae00a00033000500ae0076000300ae0040000400ab004b000300aa
00fe000300a900fe000300a800fe000300a70064000300a6003a000300a5
0064000300a400fe000300a3005c000300a20064000300a100a000330005
00a1003f000300a10040000400a000330003009f003a0003009e00410003
009d00d20003009c00fe0003009b004b0003009a00fe0003009900fe0003
0098007d0003009700380003009600fe0003009500fe00030094003a0003
0093007d00030092007d0003009100640003009000fe0003008f00fa0003
008e003a0003008d007d0003008c007d0003008b00c80003008a00fe0003
008900fe00030088002800030088fff00004008700fe0003008600fe0003
00850084001d00050085003e00030084001d000300830082003300050083
00fe00030083ffd000040082003300030081008000dc0005008100fe0003
008100c000040080007f008c0005008000dc0003008000800004007f007e
003c0005007f008c0003007f00400004007e003c0003007d00fe0003007c
00fe0003007b007a003c0005007b00fe0003007bffd00004007a003c0003
007900fe0003007800fe0003007700fe0003007600640003007541ff00fe
00030073007200450005007300fe00030073ffd000040072004500030071
007000ba0005007100fe00030070006f00760005007000ba000300700080
0004006f006e00260005006f00760003006f00400004006e00260003006b
00fe0003006800fe0003006700fe0003006500fe0003006300fe0003005f
00fe0003005e00fe0003005d00fe0003005c00fe0003005b005a00640005
005b00fe0003005a00640003005900fe0003005800fe0003005700fe0003
005600fe0003005500fe0003005400fe00030053007d0003005200fe0003
005000fe0003004f00fe0003004e00fe0003004d00fe0003004c00fe0003
004b00fe00030048ffe00004004700640003004600fe0003004400230004
004300fe0003004200fe0003004100fe0003004000260003003f00fe0003
003e00fe0003003d00fe0003003c00fe0003003b00fe0003003a00fe0003
003900430003003800fe0003003700fe0003003400fe0003003300fe0003
003200fe0003003100340003003000fe0003002f00fe0003002e00fe0003
002d00fe0003002c00480003002b00fe0003002a00fe0003002900fe0003
00280027003a0005002800fe00030027003a0003002600fe0003002500fe
00030024000f00030023001b0003002200960003002100fe000300200055
0003001f003a0003001e00fe0003001d003a0003001c003a0003001b4176
00640003001a00640003001900480003001800fe0003001700fe00030016
00fe0003001500fe00030015001000040014001100250005001400fe0003
00130012004b000500130096000300120011002500050012004b00030011
00250003001000fe0003001000100004000f00fa0003000e00fe0003000d
00fe0003000c00fe0003000b00fe0003000a00fe0003000900fe00030008
00fe0003000700350003000600ce0003000500fe0003000400fe00030003
00fe00030002001d00030002001000040001006400030060001b0060001d
0080000d0090000d00a0000d00b0000d00c0000d00070001014c858d0173
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b1d00>
[639 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 404 43 <00010096fe540477039800330057402e0031061a04070f092003100c03a7
101d177332079828342e22312520221a11140f1a08060f14062c08002c25
313410d4c4ecd4ecd4c411123911123911123911123939310010c4e432f4
3cc4ec32111739121739300114163332123511331114163332363d01331e
01151406232226270e012322262706151412151406232226353436353402
3511330154394a769abd26282b2d2b010161586768012f9d785a76170283
2e282f290806bc013990630149fe010bfd605c5655531c081312727dafb1
b6aa6b68132781fec11d282e434c12c9524a010c3c01f600>NMOBAA+Symbol AddT42Char 
1 0 0 <00020066fe96046605a400030007001740090400060108050204002fccdc
cc310010d4ccd4cc301311211125211121660400fc73031bfce5fe96070e
f8f272062900>NMOBAA+Symbol AddT42Char 
NMOBAA+Symbol /CharStrings get begin
/mu 43 def
end
NMOBAA+Symbol /Encoding get
dup 181 /mu put
pop
end
%ADOEndSubsetFont
reset_gvm
/EAKJAL+Symbol /NMOBAA+Symbol findfont ct_VMDictPut/EAKJAL+Symbol*1 [181{/.notdef}rp /mu 74{/.notdef}rp]EAKJAL+Symbol nfEAKJAL+Symbol*1 [12.0007 0 0 -12.0007 0 0 ]msf350.004 16.2687 mo(\265)shEAKJAH+NewCenturySchlbk-Roman*1 [12.0007 0 0 -12.0007 0 0 ]msf356.919 16.2687 mo(,)shtrue set_gvm
%ADOBeginSubsetFont: BJEBAA+Symbol AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BJEBAA+Symbol gcheck setglobal} if
1 630 109 <00020048ffe904d503dd000b0024003b401e0c220309b212221b1e03b218
b01273251e1f0f0c06001f00190f0619152510d4e4d4e4c4111239111239
310010e4f4ecc4d4c410ee11123930013402232206151412333236031e01
15140023220035340033320433323637330e012322260398bf9e8a9ac09a
9493177271fed8f0e2fede012cf932010f545251032d034a61143f0185e7
0113c2b1d8fef1af02673ab97fd4fef4010ccee101120e1a1b644c05>BJEBAA+Symbol AddT42Char 
1 112 95 <00020046ffee04d503b4000b002b00564036181b160d0017161e2a061303
099b131b039b0c27b0211b732c540454085b2b6f2b69296c0b0616172b0d
00101e2a06060c170619242c10d4e4d4c41117391139315d0010e432f4c4
ec10c6ee1112173911123930012e0123220615141633323601030e01071e
013332363733151406232226270e01232200353400333216171303542d8e
727b8f8781758601574e153620224e2c212d0627404145502551bd80c3fe
fd010ab68fb5254901e9d3b9e1c1d1ddc102b2fece5098455959332b1672
6f6c98897b0115d4bf011ea8a8013400>BJEBAA+Symbol AddT42Char 
BJEBAA+Symbol /CharStrings get begin
/g109 109 def
/g95 95 def
end
BJEBAA+Symbol /Encoding get
dup 33 /g109 put
dup 34 /g95 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/EAKJAG+Symbol*1 [32{/.notdef}rp /g60 /g109 /g95 221{/.notdef}rp]EAKJAG+Symbol nfEAKJAG+Symbol*1 [12.0007 0 0 -12.0007 0 0 ]msf360.255 16.2687 mo(!)shEAKJAH+NewCenturySchlbk-Roman*1 [12.0007 0 0 -12.0007 0 0 ]msf367.492 16.2687 mo(\))shEAKJAG+Symbol*1 [12 0 0 -12 0 0 ]msf405.69 145.569 mo(")shEAKJAH+NewCenturySchlbk-Roman*1 [12 0 0 -12 0 0 ]msf414.461 145.569 mo(/2)[3.336 0 ]xshEAKJAG+Symbol*1 [12 0 0 -12 0 0 ]msf222.39 145.569 mo(")shEAKJAH+NewCenturySchlbk-Roman*1 [12 0 0 -12 0 0 ]msf231.161 145.569 mo(/2)[3.336 0 ]xsh307.548 195.069 mo(\()shEAKJAJ+NewCenturySchlbk-Italic*1 [12 0 0 -12 0 0 ]msf311.544 195.069 mo(x)shEAKJAG+Symbol*1 [12 0 0 -12 0 0 ]msf317.544 195.069 mo( )shEAKJAL+Symbol*1 [12 0 0 -12 0 0 ]msf324.13 195.069 mo(\265)shEAKJAH+NewCenturySchlbk-Roman*1 [12 0 0 -12 0 0 ]msf331.044 195.069 mo(\)/)[5.19592 0 ]xshEAKJAG+Symbol*1 [12 0 0 -12 0 0 ]msf340.176 195.069 mo(!)sh0.6 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
218.393 169.615 mo
219.545 169.615 li
220.121 169.385 li
220.697 169.385 li
221.273 169.154 li
221.849 169.154 li
222.425 168.924 li
223.289 168.924 li
223.865 168.694 li
224.441 168.694 li
225.017 168.463 li
225.593 168.463 li
226.745 168.003 li
227.321 168.003 li
228.473 167.542 li
229.337 167.542 li
234.521 165.468 li
235.385 165.238 li
237.113 164.546 li
237.689 164.086 li
239.417 163.394 li
239.993 162.934 li
240.569 162.703 li
241.433 162.242 li
242.009 161.782 li
242.585 161.551 li
243.737 160.63 li
244.313 160.399 li
246.617 158.556 li
247.481 158.095 li
248.633 157.174 li
249.209 156.482 li
250.361 155.561 li
250.937 154.87 li
251.513 154.409 li
252.665 153.026 li
254.105 151.874 li
254.105 151.644 li
254.681 151.183 li
254.969 150.722 li
255.545 150.262 li
386.145 134.028 mo
384.417 131.263 li
383.841 129.65 li
382.977 128.268 li
382.113 126.655 li
380.961 124.812 li
380.097 122.969 li
379.233 121.356 li
377.505 117.669 li
376.641 115.596 li
375.777 113.752 li
374.625 111.909 li
368.577 97.3937 li
367.425 95.3197 li
366.561 93.0157 li
364.833 88.8687 li
363.969 86.5647 li
363.105 84.4917 li
362.241 82.1877 li
361.089 80.1137 li
360.225 77.8097 li
358.497 73.6627 li
357.633 71.3587 li
355.905 67.2117 li
354.753 65.1377 li
353.025 60.9907 li
352.161 59.1477 li
351.297 57.0737 li
349.569 53.3867 li
348.417 51.5437 li
346.689 47.8577 li
344.097 43.0187 li
342.945 41.4067 li
342.081 40.0237 li
341.217 38.8717 li
339.489 36.1067 li
338.625 34.9547 li
337.761 34.0337 li
336.897 32.8817 li
334.881 31.2687 li
334.017 30.3467 li
332.289 28.9647 li
330.561 28.0427 li
329.409 27.8127 li
327.681 27.3517 li
325.953 27.3517 li
325.089 27.5827 li
323.937 27.5827 li
323.073 28.0427 li
322.209 28.2737 li
321.345 28.7347 li
320.481 29.4257 li
319.329 30.1167 li
317.601 31.4987 li
316.737 32.6507 li
315.009 34.4947 li
314.145 35.6467 li
312.993 37.0287 li
312.129 38.1807 li
310.401 40.9457 li
309.537 42.5587 li
308.673 43.9407 li
306.945 47.1667 li
305.793 49.0097 li
304.929 50.8527 li
304.065 52.4657 li
303.201 54.3087 li
302.337 56.3827 li
301.473 58.2257 li
300.609 60.2987 li
299.457 62.1427 li
296.001 70.4367 li
295.137 72.7407 li
294.273 74.8147 li
293.121 76.8877 li
292.257 79.1917 li
291.393 81.2657 li
290.529 83.5697 li
289.665 85.6437 li
288.801 87.9477 li
287.937 90.0207 li
286.785 92.0947 li
285.921 94.3987 li
283.329 100.62 li
282.465 102.924 li
281.601 104.997 li
280.449 107.071 li
279.585 108.914 li
277.857 113.061 li
275.265 118.591 li
274.113 120.665 li
273.249 122.277 li
271.521 125.964 li
268.929 130.802 li
267.777 132.415 li
266.913 134.028 li
@
0.576 lw
386.12 134.214 mo
386.696 135.135 li
387.272 135.827 li
387.56 136.748 li
388.136 137.67 li
388.712 138.361 li
389.288 139.283 li
389.864 139.974 li
390.152 140.895 li
392.456 143.66 li
392.744 144.582 li
393.32 145.273 li
393.896 145.734 li
395.048 147.116 li
395.336 147.807 li
396.488 149.19 li
397.064 149.651 li
397.192 150.292 li
397.768 150.753 li
398.056 151.214 li
398.632 151.675 li
398.632 151.905 li
400.072 153.057 li
401.224 154.439 li
401.8 154.9 li
402.376 155.591 li
403.528 156.513 li
404.104 157.204 li
405.256 158.126 li
406.12 158.587 li
408.424 160.43 li
409 160.66 li
410.152 161.582 li
410.728 161.812 li
411.304 162.273 li
412.168 162.734 li
412.744 162.964 li
413.32 163.425 li
415.048 164.116 li
415.624 164.577 li
417.352 165.268 li
418.216 165.499 li
423.4 167.572 li
424.264 167.572 li
425.416 168.033 li
425.992 168.033 li
427.144 168.494 li
427.72 168.494 li
428.296 168.724 li
428.872 168.724 li
429.448 168.955 li
430.312 168.955 li
430.888 169.185 li
431.464 169.185 li
432.04 169.415 li
432.616 169.415 li
433.192 169.646 li
434.344 169.646 li
434.92 169.876 li
@
266.78 134.204 mo
266.78 134.434 li
266.492 134.665 li
266.492 134.895 li
266.204 135.126 li
265.916 136.047 li
265.34 136.738 li
264.764 137.66 li
264.188 138.351 li
263.612 139.273 li
263.324 139.964 li
262.748 140.886 li
261.596 142.268 li
261.308 142.959 li
260.732 143.881 li
258.428 146.646 li
258.14 147.106 li
256.412 149.18 li
255.836 149.641 li
255.548 150.332 li
0.85882 gry
f
266.78 134.204 mo
266.78 134.434 li
266.492 134.665 li
266.492 134.895 li
266.204 135.126 li
265.916 136.047 li
265.34 136.738 li
264.764 137.66 li
264.188 138.351 li
263.612 139.273 li
263.324 139.964 li
262.748 140.886 li
261.596 142.268 li
261.308 142.959 li
260.732 143.881 li
258.428 146.646 li
258.14 147.106 li
256.412 149.18 li
255.836 149.641 li
255.548 150.332 li
0 gry
@
315.48 106.269 mo
338.28 106.269 li
338.28 93.3687 li
315.48 93.3687 li
cp
1 gry
f
0 gry
EAKJAH+NewCenturySchlbk-Roman*1 [12 0 0 -12 0 0 ]msf315.264 103.569 mo(1)shEAKJAG+Symbol*1 [12 0 0 -12 0 0 ]msf321.936 103.569 mo( ")[7.77612 0 ]xsh0.36 lw
386.257 171.43 mo
386.257 134.105 li
386.257 134.335 li
266.857 171.43 mo
266.857 134.105 li
266.857 134.335 li
@
true set_gvm
%ADOBeginSubsetFont: YGTBAA+CMBX10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginEAKIZW+CMBX10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/colon <1C60D8A8C9B08A9560D4C2F3A74D92838E839CD10B5F2E89DEFFDE1AC7B613A4FD845CCA9FC62F87825C132DFC991C37EE277DB4A45132955C172F95186C5797B64B0868EC1CADE0DAFD3719564A> |-/F <1C60D8A8C9B08A94547D639F4887F5AEA78CEBE838B24BB5BCBC0A45265213D32102F2479AF9ACB8798746F03747CB2EB844E0ABCAD1DFF4E74B2F464BF916257990A62F3B15D50B667C0DC1EA21A7E639D9CCAFA350EBD5763A287BCC20F60C89CA5B58C1588650CEEB4436DF5528144BE40CFD8618628B16A4> |-/e <1C60D8A8C9B08A95D1DE8AA71D3914AC9DDC5BFDDE55301EE17DAE184B08E53C36FBF9A44FDF3309DBE08895DBFECCF103737D7326528346FD01CD1D9FC3874638E8C50ADE3B494897353EB3188B512405DD1BA5DA59E8C179230F7C8D15AFCEA2228DAC03C77D614B36A41126CE831B41CDF160A67B175BB36C52353A725460F4256C> |-/g <1C60D8A8C9B7FCB6DFB00D66717576F7B799683D0F5985C2246017DDC428352C02EA59B62BD175A5C1AEE9FFA12F15BA4161F01FE8694270C56D17F21CBDB64DA822FA21CEFD4517B854A2279161A8F41C47F6A56223D32DE25F5E52A145523392C61B5AA8CE6619D515DA7BEA118DB74C0CDAFC9B42271C138086AD4AF86E128215E239A8F23CB86490189FD57296C000CC97B906523F983B72A12C7CDB4BDD169A2DC6443C0A27795759747910583C3EACAA83288E17AFD042057397826822E42F2626AAF47EA87B71144518319B78D5C78FCDB5E5EBDB361EE0D79EFEF2DB02CAE6013851BBF48FAB27ECC8CB96A410FF9BAE7AAAC169BA1532EB5D46A6FE4F9B1C6921AED89A02C684> |-/i <1C60D8A8C9B08A9560D4C2F3A74D92CE39CCD31B31259F7AEFD031A58831B571C841E0136D10024EE2DD1AD2E3360D2309F9F321AD6D54682C9AA0537A8101D580386AD2DCA0A7052F8B37637F4FD33680FADEDC669BC7E5D9EBF1E1DD4C25DB61CF6B56B045016A365FD6FAFA0816F527A8AB8877> |-/r <1C60D8A8C9B08A95A5BEE1199161ADD44E11DF3EE5256B86CB844423336DE46331FBB74D12BB9F1AEFB0A2D71E0DF1B1DC77B76B07C229AACC6761DB2E5D20458478ACD0A771C83355B8FC81A73D829FB4F43E6F698652C8F5D32976536BBF9A5F05ED7F73E5DF2B81BA043D0A8270F63D03627E6ED4C69187B17F057818B58504577A> |-/u <1C60D8A8C9B08A95E5CBCB515510AF055BEAA5A885DDAB81EBFFFCE143294E1BBFD5670B8388C50AC1CAB0C81124E37F366F454C400F382B92CCAF7F452599ADD355F754F39DD40E715E763BF3CAF9D37080D3EFFC3F0635D04D45C4121C5E910B7FA9B692888395C347C99C7D24FA37D1D1FE460550A781D9E9186E41> |-systemdict /gcheck known {setglobal} if end {end} ifendEAKIZW+CMBX10 /Encoding getdup 58 /colon putdup 70 /F putdup 101 /e putdup 103 /g putdup 105 /i putdup 114 /r putdup 117 /u putpop%ADOEndSubsetFont
reset_gvm
/EAKIZW+CMBX10*1 [46{/.notdef}rp /period 3{/.notdef}rp /two /three /four 5{/.notdef}rp /colon 11{/.notdef}rp /F 30{/.notdef}rp /e /.notdef /g /.notdef /i 8{/.notdef}rp /r 2{/.notdef}rp /u 138{/.notdef}rp]EAKIZW+CMBX10 nfEAKIZW+CMBX10*1 [11.9552 0 0 -11.9552 0 0 ]msf103.68 217.869 mo(Figure32.4:)[8.63523 3.79339 6.85387 7.6813 5.64644 11.1589 6.85388 6.85388 3.7934 6.85388 0 ]xshtrue set_gvm
%ADOBeginSubsetFont: NCMBAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginEAKIZY+CMR10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/nine <1C60D8A8C9B7A73D3B2B97B3700AD7AED0795D43DB5ABA64A35CE8EC855A5CBF20AE28D441242F899F7C2493AF719033D6B385FC121C95EE56A8AC87E982F921115084DE39E9BA3D7A44F69554488D091CCA5CE48FA54B9DEDF323B6058F2C417BA9D8B1544EFE093FFB579140C54032384DB55AB4741347233EB3F0889C3AE9CB54BFC5722CB20FE6EB0FE3ABCFEDABDC9E7A6133126A6F51B8678890B35A22591676E962B03C898FE88F279F8C6D3B01F6391B6E2BA953568B49F4B099> |-/zero <1C60D8A8C9B7A73D3B2D32309B1F5D5A32FC3614834F8BC61B6EB92C12484BD76628737DA40CF9DA1C97CCDAFB1D1B732C642F74A7C41B7D3AC6DAF8D1E760692B6EBD2417EF1893A4AA0B1CF049D4C54D830CEC073A9153D451FAD42892B0930AEE4FE18588336BFDAD60D8A4F4CFFED76F103FB9BBD8A33EFBA3F18232B88D88FE54E17260FA3E2CC29DEC0CB72B88DC816FF5> |-/W <1C60D8A8C9B08A94DF93CFE877B47057C7AA7A39F5E120783EC688EC89C18D88E4CFACCAF32BE3FB943A3FA817A1C0529930AB0065CCAE1705346D415CAF6F3BE8B28DBD2FE903E61186A32EDF38B838858E46745C2B7FA48B8E6E0D0986BD7A8BA149207F3F0EA77A4EFE06A7122E8FC6C2B04A0B03DD31C256ACF417D39DB720EA63717B8AF030369F0ACE1BFC1BDA8084F86023424DB31D0A5F8EC21516A92BBE98292BD36BE0960649A591F01066473D657A65D807C4E00EF2369AF893D97C00CCFC22CA894227F9117CFE788197C57F5A> |-/hyphen <1C60D8A8C9B08A959E2F69652E8B76AC2AC5B4F1FA8662A86AEED57846929C2FBC07360B> |-/plus <1C60D8A8C9B08A9461828376290042B3B0012119E49A5F8A40FFB07EC16079327C8839C8F2280897EA08CCF42D3B4E2B36A495896A102B0E0B676D7CDE615B4B502BC24C313F43E124C5C3EF4728FA76AB60F029D0136D86C00EF66A58511B752E> |-/E <1C60D8A8C9B08A94478101EE5603CAF9EA65B0A05B8389D7C1CF5C51F1F74696C0CEF5645C7B6A40F500D79FE10E9FE662B3E9326A3808402CE1090D692C4ED68EDB8B4431B5FCC4F04AE568DED0677392BD79B1264E9F3418193C5B917CB34635B006E80D355A74C6CE78F0EF1B944BBA6609A53532C815AD3A66B5B7FCE4313375B43F59207B03> |-/C <1C60D8A8C9B08A9454CA4C75C5C983901A105955FD02AB95A1D9A8A1EF86541AF97FFF68AEDD6EF3F9788853DEF093D0FBD78A3FC5DB04802F61AEF127B4D274CEA5A0495BD438B2F75833238070F9A0DEDDCFDFABEF5BEDD017B6BBEB22A7AE0ECB6D46586699459E2B529F0C643928AD0C60B989B7B119C20E74352A5B2677AF404D34EE8C876EF19CEC> |-/R <1C60D8A8C9B08A9451E2C198C46CF0D9EABFA9FD85792390C749BB6A88FA7917DCB59892FD0C5009977DF79610519F2C9B4981160954D87B28067B64902FCA672A1EA4467509C61E197E33F24FCA5EFBDFB729B55B5C4117ECDB5BECF27E38689E84ACC3DB0FC92B91213DD4A7E85FA5734C4E13F3F79A0D32FDD8C93C62AE6FCB0157C6098018B88A9792212F13C7D0A1033F2D5084E094BAD54582913EE91D18A8548EFC0A88E1E44D93AF30413B31D6EB8A83F584066D1B1BAAEDC94346D88042D1DFD12BF62633AA55A8138483062D74A9EFC7B33F2C50BB370D726B76FB1D1FC63806D916CC235BF380> |-/N <1C60D8A8C9B08A9501CDAE1251A61DF6E23FBE9059A2A88492E84D61402E80BD80B5057FF8914FA4679EB3900C60B246DA77BF837041B1C053FCD543E3D1D259FCE953A74E40366D604A99F9233772AC97F872D505329B1446640ABD99E4AC723C39DD6EA376A043CE3633F04D9BC6DEFE2E1A831DBB9C16F90A966DFA0F3802BB1EB0AA3DAEB0E864B9D3CC3E14AE1E9219B48660289CF348B4E280> |-/L <1C60D8A8C9B08A9504870DC577BFF1117CB147078FC0444648398262998D8061E386D366188391878ADBE16C10A3B1BC6A93F56BD64AE45F8370470F419DA43CBACE3D7B1152502CD0CF1468D72D3CB197A29E71D336CDA7D6BAA426EC1B681825BDDC37329099DC579F155C> |-/B <1C60D8A8C9B08A945A1AB9ADE1431F477760039895429B9BEADD61922CFC184419BAEF0F9B56C23FC5661D652FB46838C6961959B988108B7BE7927DB7D113140FAE852560AD0321B29F8DDAF47C42DE855BFCE5E894359EC68F12B5A5EF91D5C9A819F5353B8A7ECCA93AD7565B0CB87EA5B54A18A4872BB4B57604690E4A511AD187CB4431D0387A106BD295650A020AB1BDC8890F221B49C542C90C76C5207D49FCDC51B6E2E50707> |-/O <1C60D8A8C9B08A946182837629000F56F09865179A66BE0CDE81459AF148646A0C8953F25CD2632360B9585500530A45DCFC4514524F032073F394096348EB9A110A91C0796AACEBDA9B5DDF5D03A70D245BC8BE0023531BFCA33B863C7F245C98276C1AB30E6CF100> |-systemdict /gcheck known {setglobal} if end {end} ifendEAKIZY+CMR10 /Encoding getdup 79 /nine putdup 80 /zero putdup 81 /W putdup 82 /hyphen putdup 83 /plus putdup 84 /E putdup 85 /C putdup 86 /R putdup 87 /N putdup 88 /L putdup 89 /B putdup 90 /O putpop%ADOEndSubsetFont
reset_gvm
/EAKIZY+CMR10*1 [32{/.notdef}rp /A /n /i /m /p /o /r /t /a /e /x /l /f /c /s /u /g /fi /d /v /w /h /b /G /semicolon /ffi /y /period /I /comma /F /k /one /equal /two /parenleft /three /four /five /parenright /six /T /eight /seven /percent /V /q /nine /zero /W /hyphen /plus /E /C /R /N /L /B /O 165{/.notdef}rp]EAKIZY+CMR10 nfEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf181.799 217.869 mo(<++/.'&\('"%!%,\(.:##\)'&"-OPL-%!12\)!-\)"!'\)&3\(+C/!.5\(2\)2G,%&)[4.28465 3.36299 3.36301 6.60524 4.67923 4.68175 4.65533 6.00032 4.68175 3.36299 6.00032 11.4052 6.00032 8.52525 11.0394 4.67444 6.36255 9.92752 9.92752 5.27701 4.68176 4.68402 3.36298 10.1942 6.00031 6.00031 14.8758 5.27704 6.00031 6.616 6.616 6.61603 5.27704 6.616 5.27701 10.4345 3.36301 6.24539 4.68176 5.27704 4.6553 5.64288 6.00031 8.28256 4.68173 6.61603 6.616 4.67923 6.61603 6.00031 6.616 5.27704 6.61597 9.84167 3.6272 6.00031 0 ]xsh103.68 232.269 mo(\(#\)\(./&\)#\)!'%,\(."!0+\)N/\(!'"':4"'57\(/.."\(!\)&&%&.;<!'\)0&\('\)2$&%6\(6"+"'"\).=)[10.4405 9.95621 5.27463 6.00032 4.67445 6.60524 4.70795 5.27463 9.98012 5.27464 6.24539 9.48175 5.99913 8.16539 10.4405 4.67444 3.34506 6.60524 5.99911 3.34506 9.83435 6.36255 6.60524 6.00031 6.24542 4.68173 3.34506 4.3219 10.8027 8.63766 3.34503 4.67221 11.1649 9.36334 5.99915 6.60522 4.67444 4.67444 3.36304 5.99911 11.1649 5.27463 4.70795 4.70795 5.99911 4.70795 4.67444 9.36212 4.31815 6.24539 4.68173 5.27466 6.00031 4.70795 5.99911 4.67218 5.27466 11.2857 6.60526 4.70792 5.99911 6.60526 6.00034 6.60522 3.34506 3.34509 3.34503 4.67218 3.34509 5.27466 4.67444 0 ]xsh103.68 246.549 mo(2\)1!\)26:)[6.60883 5.26985 6.60883 6.60883 5.26987 10.8051 6.24539 0 ]xshtrue set_gvm
%ADOBeginSubsetFont: EJJQMX+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginEAKIZZ+CMMI10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/chi <1C60D8A8C9B08A95E8AFB066D50729ADB2A8875DDFA2A36C5E0BB268E5FBFE9E20AB3FA23CC666BA2B43007F9100F928A0406E01F958D22E63CD15E804A4820853DF1D3A8BA1D2686FFE7552F3C1A9061B2417B1D2EABBE78988EA0F364DBD6AB5463786B866DF67799DF6F46046DBA50460FF89AF9E8DBBBA8B901543072372C0F0C9731979E366F2CB5A3911C5FE0F6ED74DA6C5D873EB8F704BBC40DF38EAD7A6254EB7AFF6A8B94987765735F9CCAA800ACF7EC3599ED47DDC95E2> |-/F <1C60D8A8C9B08A95E7C56D605DE52860024F17AAF94E496A1712184263D529D9F6398EAA47DD664553E3C0DBA66DEAA887EEDDC987DD3AD10853724B997AAFEBE64FA950C55024DB2DAB8EBFBE16323F3FC3BB451C1157BDC26EC94F5E7854F4F74BF68DFA7C22F7A797C4C4CF02989D9F950FC49D686CF2393057028BBBFB8F7FD93F277BB65EF0C94272AC50FA4583E4156055A166ABFADCC171DAF2AFA61BA9DFBFC29B68787E952F120E9C8DB7E0AC8A18E47C7A7AC8A29B6169E0B545448B3A92E6C28AC82F5FCFADDB4E965579688941E740A0C81A9475F1C777004F56B8D63A3E8998CD2D42EA12F687334FA892F69AAB69EF7D95F29ECE11FC7A75> |-/n <1C60D8A8C9B08A95F6672DA0769C65052F6FD555EA9904981F5C5011D7400A5082B35BECB587DFD6DA7F0BCE52C1D53643C9E5AE1EE7B3F76FF1421B27EDDE10BCF56E3F98B875933C40A0EC29291E4FA9CC100C10654480D1C5949D7B3B834EB7CA145C0AD116D2C53ADB026026333E417BD5F646F1A1550FAA5054060693ABC51D8FFA7F7CF5FBD69164919B519F5CB3072B10F398518E5CC1B3B04E053B4794BC00534E2F40A979D7BE44E289EF0DC9F2A34D86ADD625206A1D58B4DA8C2F407798FFD1DBD3E91F50E0A8469210388B32F7CE9E57D8CB65A5304A2570> |-/comma <1C60D8A8C9B08A9570810981675918D0BCF1CD202F5F15202B7A6E1CEF0947ED02AAA4C366CA78E08C39B6DD0700901548AC0500952501F57D43D6991493A7332E9D6FB3B92D3B17F7AFEDFB43B1F0997B51EC481BBA2E83EB27> |-/slash <1C60D8A8C9B7A73DB56225352A24C6E389DE2B55CA07FB5710C6DCAE04F94BC5CAA5785E17ED28271B55834262FD3846E502CB37AB886C6947131546D475C5E688F02E31C309> |-systemdict /gcheck known {setglobal} if end {end} ifendEAKIZZ+CMMI10 /Encoding getdup 41 /chi putdup 42 /F putdup 43 /n putdup 44 /comma putdup 45 /slash putpop%ADOEndSubsetFont
reset_gvm
/EAKIZZ+CMMI10*1 [32{/.notdef}rp /x /sigma /alpha /pi /e /d /delta /period /mu /chi /F /n /comma /slash 210{/.notdef}rp]EAKIZZ+CMMI10 nfEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf161.4 246.549 mo(")shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf169.08 246.549 mo(=\(&\)\(..5%4!;)[7.32256 6.00032 4.68402 9.23421 6.00031 8.75476 4.67445 6.60524 5.64046 8.63765 6.60524 0 ]xsh103.68 280.869 mo(Q\)-\(!.\)'\(%!\)R."2\)2C/$$\)&%&+%4\)&G+"#"'6:\)*-+/2"!0\(6%3\))[11.2821 10.5541 5.28419 5.95369 12.0054 4.67445 5.28419 10.0819 11.2797 6.00031 6.6232 5.28419 3.95708 4.6864 3.36301 6.60524 5.28419 12.125 4.68176 6.62317 6.62317 6.96512 5.28418 10.0842 5.9537 9.96344 3.36298 5.64047 8.27777 5.27466 4.66251 10.0819 3.36298 3.36301 9.95618 3.36301 9.84161 6.24539 11.6432 5.28421 6.36255 5.28418 3.36301 6.62317 6.62317 3.36298 6.62317 11.4005 5.95367 6.96509 5.64047 6.00272 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf465.235 280.869 mo( )shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf475.195 280.869 mo(S)shEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf487.675 280.869 mo(&)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf498.714 280.869 mo(C%&6\)+%4)[4.67816 6.0051 9.96347 6.96509 5.2746 3.36304 5.64044 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf89.2787 295.269 mo( )shEAKJAA+CMSY10*1 [11.9552 0 0 -11.9552 0 0 ]msf98.7592 295.269 mo( )shEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf110.759 295.269 mo(&)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf116.519 295.269 mo(G;I5\)3\(+/\).%,)[4.67338 9.24256 8.65437 6.60524 9.35495 5.64285 6.00032 3.34625 6.60526 5.27463 8.63402 6.00032 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf204.238 295.269 mo(")shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf215.877 295.269 mo(,%&./-5+"#"'.\(&\)5\(+,'5\)3\(+/\)."!I\(6+\)DB;@;)[3.60568 6.00032 8.76433 4.67445 6.60526 4.91478 10.6856 3.35104 3.35101 9.98611 3.35104 4.67816 8.634 6.00031 4.7139 9.23422 6.60526 6.00031 3.35104 7.68478 4.67816 6.60526 9.23419 5.64285 6.0051 3.35104 6.60526 5.27463 8.75476 3.36298 10.5648 7.67767 6.00507 6.60526 3.35104 9.23419 6.00513 6.00507 3.35107 6.00507 0 ]xsh103.679 313.149 mo(<!\(22"'"%!'%TN;CDB;EFG=)[4.34204 11.7651 6.0039 6.60524 6.60526 3.36299 4.67697 3.34984 6.00391 11.7651 4.67697 11.0394 8.16779 6.33865 8.40213 4.68173 6.00391 6.00391 3.34984 6.00389 6.00391 4.67697 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf252.117 313.149 mo(")shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf264.957 313.149 mo(\(!2)[6.00031 6.60526 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf289.317 313.149 mo(&)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf300.237 313.149 mo(\(&\)\(+.%&\)+\('\)26:'5\)-/#/+\('"3\)2".'&"6/'"%!)[6.00748 4.71631 10.4345 6.00031 3.35345 4.67444 11.1602 4.68402 5.27463 3.36301 6.00751 4.68054 5.27463 11.7651 6.24542 11.5224 4.68054 6.60526 10.4345 5.27466 6.60522 9.59637 6.60522 3.36301 6.00748 4.68054 3.35345 6.00269 10.4345 6.60522 3.35345 4.67444 4.68054 4.71631 3.35345 6.60522 6.60529 4.6817 3.35345 6.00751 0 ]xsh89.2787 327.549 mo(,/!-'"%!,%&'5\))[3.61286 6.60165 6.60166 5.26268 4.68175 3.363 6.00031 10.6856 3.61285 6.00032 8.76433 4.68176 6.60165 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf174.958 327.549 mo(\))shEAKJAD+CMR8*1 [9.5641 0 0 -9.5641 0 0 ]msf182.4 323.109 mo(2)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf192.12 327.549 mo(2".'&"6/'"%!=)[6.61362 3.36299 4.67685 4.68175 4.65294 3.36299 6.61362 6.61362 4.68173 3.36301 6.00032 6.61362 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf275.76 359.709 mo(")shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf286.68 359.709 mo(A@)[12.602 0 ]xshEAKJAA+CMSY10*1 [11.9552 0 0 -11.9552 0 0 ]msf307.919 359.709 mo( )shEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf319.919 359.709 mo(*)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf329.278 359.709 mo(C)shEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf333.959 359.709 mo(\))shEAKJAD+CMR8*1 [9.5641 0 0 -9.5641 0 0 ]msf341.4 354.789 mo(2)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf347.04 359.709 mo(8)shEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf352.44 359.709 mo(+)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf359.64 359.709 mo(G)shEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf367.56 359.709 mo(,)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf520.8 359.709 mo(CDB)[4.67816 6.00513 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf537.48 359.709 mo(')shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf540.84 359.709 mo(EHG)[6.00031 6.00031 0 ]xsh89.2787 385.748 mo(,%&)[3.60568 6.00032 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf107.519 385.748 mo(\))shEAKJAD+CMR8*1 [9.5641 0 0 -9.5641 0 0 ]msf114.96 381.429 mo(2)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf123.96 385.749 mo(AC)[12.602 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf141.24 385.749 mo(&-!)[5.75404 6.00031 0 ]xshEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf160.319 385.749 mo(G)shEAKJAD+CMR8*1 [9.5641 0 0 -9.5641 0 0 ]msf165 381.429 mo(2)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf174.48 385.749 mo(\(!2)[6.00032 6.60524 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf197.64 385.749 mo(+)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf208.2 385.749 mo(A@2\)0&\)\)%,,&\)\)2%#;I5".-\(!6\)%6'\("!\)2,&%#>"0;DB;@%!'5\))[12.602 9.84033 6.60524 5.27464 5.98715 4.69598 5.31769 9.35495 5.98715 7.44571 3.60568 4.68402 5.31769 5.31769 6.60522 5.98718 9.96814 9.48288 8.6376 6.60529 3.36298 8.63403 5.2746 5.98718 10.5648 6.96509 9.23419 5.98715 6.60526 4.66022 5.98715 3.3331 6.60522 5.31769 10.5648 3.60568 4.68402 5.98718 13.9157 7.81635 3.33307 5.98718 7.08221 5.98718 5.98712 3.33313 9.84033 6.00031 10.5648 4.6817 6.60529 0 ]xshEAKIZZ+CMMI10*1 [11.9552 0 0 -11.9552 0 0 ]msf89.2801 400.149 mo(+)shEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf99.7205 400.149 mo(A@-/&3\)%&6:/."!0'5\)UTVWX<Y&%/'"!\))[12.7227 9.71957 5.29974 6.63873 4.67804 6.0027 8.9951 6.00032 8.40448 6.24539 10.2026 6.60524 4.70195 3.31519 6.63872 9.71957 4.64229 6.63873 9.11464 8.63763 8.13312 8.79057 8.95801 7.46365 4.30737 12.1153 4.67804 5.96924 6.6387 4.6423 3.31519 6.6387 0 ]xshtrue set_gvm
%ADOBeginSubsetFont: TAJRMX+CMTT10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /TAJRMX+CMTT10 def/FontInfo 8 dict dup begin/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def/Weight (Medium) def/ItalicAngle 0 def/BaseFontName (CMTT10) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 58 /colon putdup 66 /B putdup 77 /M putdup 79 /O putdup 80 /P putdup 82 /R putdup 84 /T putdup 97 /a putdup 98 /b putdup 104 /h putdup 111 /o putdup 114 /r putdup 116 /t putdef/FontBBox {-4 -235 731 800} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 611 622 431 440] def/OtherBlues [-229 -222] def/BlueScale 0.0479599 def/StdHW [61] def/StdVW [69] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings14 dict dup begin/colon <1C60D8A8C9B78E059954B91DD6211CE740A7B82F48C8E422101B33F5E48BD43B9F01F5930F7348958A8F4536B7387509A9698D663A4DAAD82D2461AE1FE2F18FB68C69FCFF18012B0C> |-/B <1C60D8A8C9B78E05996B357C2196166CFE83BF44B16FF9CAA3D06579A74765F2A0B597553C8944B52D803B025DE189FDEF088DE15394594ED346B48BA8E7F7819184150B96827D6BDB46A830E1E965B99929A10079D9E69DB5D7C2822F4A10B39F2C4D6F89BE9261BB7A605E77FE8E292F5D17AD31AA729D646877317416283137BCB58E169433C57847D43C7C167BD713C9028A41A2663DB8E1919C> |-/M <1C60D8A8C9B78E05996B357CF235EE360467BA547FDE6CA4E59EB58566C17B1602915238BEFBFE3CBB883DA38A52A9ABB562BD5F4E4EEC115B13CE0D787C7F19B355BC22F27124C0E2275D1A0808E47D6FA4F6EC6E6541E0009F45CD46E610F0AE4EC1DC03309C629B1F260A715F4A2054DFFE9A8E59D4D807A8C6C491AE4C4DEA2C19836725B44E93991490ED723A1DD94582FB2856EA718AEBC14E78EDC20C190AECE703B6EFB1DEDEE3AD5DAD83B54DFA529C64481F78A2> |-/O <1C60D8A8C9B78E0592363F02EABA864EF83B42D8E5867C87A7DB6EC2C103EF05364976472016D348D330F9A63F0AA867CF94E221FC5D8FE0AE811A2F0FA6DF74FFF5858E3C8C7FD14402A43EA45B99AF49DC2DDA999CDA5A0B237917644FF00C27D4423D5D253E7DAC087AE4F503F42C32511BF47875E0> |-/P <1C60D8A8C9B78E05996B357C1B4F39761A1FBD4D74466D5D79BE5DE6976C93CF93CF77C7FF98B0869E052E20265C6FB0B9ED209564F3399EAF88EADEA64DDB4F67015E3F91F19B9A030EA5420DD0409471AE6961D79AF9962161182BFA5AFAA1225E022A8088058FF5E5002D7DFDE8> |-/R <1C60D8A8C9B78E05996B357C35B6F45A917F98FF4C2B6C514F88F57E614DC1A2668F1DBB03AB68875E348125BF4E9590F9522DD048C4FB9ED27D9CD013B8B98561E4153A6E337435C31D44361D0646BAD05FCA02ADD1536264D6575C857A2BCF066CA6ED2426E65093044FB9EBFDE9B19FC0EC7D4C4F309260008CB94B176D9821F0CD66FBD2EB9C946835A4B7F5B01841CB1587FAA557B76F183F3058E4159D502256AA8C6FCC25CBF5EFBFF64804BBACDFA197E5DD24D6BD0A0FB1664503C71A9D93ECB86D83B741D07E6D5D66D77DAE193953> |-/T <1C60D8A8C9B78E05B704C9A72A07DD8D3F335D9B511EFFB33CEA8644C44162259FCEA487846A2630F0020CFBE6063FD707971FB21A656C0CF320B7780DC891D6AE79C8D8FC56B800DB840F359FC11C200990321B3C2318A27D8F8BDF10524E260EA29B19E3A17728595FABC834> |-/a <1C60D8A8C9B78E05996B357CFC3D6A68429CE44210300ADBF33D3BA6556422DB30AA2C2DE7C9116C427A19DC90F7A98606BDBFB27DF4235F2AAAEBA26184E5C8D38867C076F8FDD8600853EA72DC9D3F2800940687EC72A6F334200BA15BADC95674191868FBF18D675A9DF803EE70B50222D29881504A1059B3AFD24FEF30B48C4F1746ADB09F7A9701B6D22B65D1EEEC5210E72A1090FCFC77ADC9FE9D0DCBF3CF0D355063BE501BF4AD72162F8BF2> |-/b <1C60D8A8C9B78E059903569426DC47841EF13EDA8E7E885315FCEA455013A9670C154405DD4FF07FA68FEB4C6D786E5FA9AFB2C1B8F3A4203E43E7DB32A46F7EB59A7EFFCF3878B38D796B5FC4814468B2D396BA38E3869C2F5EF746D0217CEC838A6FDD92AA526F078326636FA822663FE759F7805898E37E5DC05D8D35286F47ADBCE0A8A93471FBD6EA3194> |-/h <1C60D8A8C9B78E05996B35735C4B10FF1E7638F665AE91E3A7AF8201D1AC3AB04A180E34E965C0530ECE103A40EABA18BE6A1DCB4BE1B404E87AFDD258E67C2DDA55F8A7832BB41393C709F8D388D515C51F4A949385C9583C498D04281BC9AE18769703983D7C868B7B495ADE857058B2A5F913115575D7CEE5364C67513BEBCAA5EDE66B27251EC9D43A56> |-/o <1C60D8A8C9B78E0597CED2992C40EF191A4C45874D1ADBEC70B4332BD16FC6E72E6C0814914F733B15187F2AE02ECDDAAD323B8CE54E5890D7A8B16ADA89C162996B3F0E21E0F239A7E5BD13615A4D755DB24A> |-/r <1C60D8A8C9B78E05996B35735C4B10F0A68C733837FFC46D15E711585D69409D476B4E1B79D899A1EBE7F07D42FC0D7F3AF51B20EA4BE96332191606B9F930E6A59EE195CD4F0E430523A60FA98B36B2D8D170EE2CB19C9F94E68C9577157726B0DF61D35FB969298349003E15248E2E23535954CBD18C62CEB28D8079F7> |-/t <1C60D8A8C9B78E0597CED299252BC7B05D988F4F7EE667DF4F850255BD285E9BDB6F1D9734666CE6E99228B4903C845663259737533F426C749652248BD58E77C356FC8FFF7AAAF4F3EDBBF4F304000495C28895CB8E17AE8F20B0D8171AFE2F325DCA0172B98285FEDEFC5314F65074B9> |-/.notdef <1C60D8A8C9B78E051C> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
reset_gvm
/EAKJAM+CMTT10 /TAJRMX+CMTT10 findfont ct_VMDictPut/EAKJAM+CMTT10*1 [58{/.notdef}rp /colon 7{/.notdef}rp /B 10{/.notdef}rp /M /.notdef /O /P /.notdef /R /.notdef /T 12{/.notdef}rp /a /b 5{/.notdef}rp /h 6{/.notdef}rp /o 2{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]EAKJAM+CMTT10 nfEAKJAM+CMTT10*1 [11.9552 0 0 -11.9552 0 0 ]msf335.397 400.149 mo(PROB)[6.23935 6.23935 6.23935 0 ]xshEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf364.197 400.149 mo(%&'5\)VZZI,/!-'"%!)[6.0051 8.40448 4.67816 6.60526 8.99509 8.39844 9.24255 9.24258 12.5972 3.60568 6.60526 6.60522 5.27466 4.67816 3.35101 6.00513 0 ]xshEAKJAM+CMTT10*1 [11.9552 0 0 -11.9552 0 0 ]msf484.916 400.149 mo(TMath::Prob)[6.23935 6.23935 6.23935 6.23935 6.23932 6.23938 6.23932 6.23938 6.23932 6.23932 0 ]xshEAKIZY+CMR10*1 [11.9552 0 0 -11.9552 0 0 ]msf553.554 400.149 mo(;)shtrue set_gvm
%ADOBeginSubsetFont: FSFAAA+CMR7 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginEAKJAF+CMR7 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/comma <1C60D8A8C9B08A9562EC537D4CD725EF19C5EAE073D9553498DA0A35AF6F4B7D7E994235CB5767A568ABB68B70BDAE78EDA91560F832391691656D95613B57C76E69946785B690638DC13DD9D811AD> |-/zero <1C60D8A8C9B08A95C25148D4A67F69E30A5E2E68739C66430CE9C80B117D356E6B049D46F4B92CAA553A9B134551915D583004A2E168290E2EA7A1D2EBEEF2F6191D2DECAFE6B7FEE755131DAD42C252CF3B9D1F495CD04CA729594BC959DCCEFD3CEBDA487CE7F4CB3AF00007678C40E3EBD5D978707EE8CD3F292AEB3E78ECCEF035CFEC> |-/one <1C60D8A8C9B08A95C25148D4A67F9511413D11105417B954A52A260BA5871A06DFB8D8919F004ECADDCCFBF12243241C909C4118AA85F2539B7DC39D4582A350A3CD25605077D4A323A8EBE0C72B60A7367C8A601B524B06B54D65D101B8> |-/four <1C60D8A8C9B08A95C25148D4A67F95114132C30B0FFEF5844041B0814D8B5602C3A3ED6436A3BB27B9947660B00ADBD11E09A535CB602661F508AB1894FEFD2ABB583E236F32BAF823F57979D611B136667A3040D05648E88338BFED2EC443EEA05C554128C67AC3003820FAF1AA9D3D90> |-/five <1C60D8A8C9B08A95C25148D4A67F69EFB9F702FD94DA82461E1B57D8D0CE1220DDF8166AD018CA7F70314CB1911669D6800DC25E8F03311F7ACE623BE99538540E089CBBEF03A01AC4BC27ADEC8E757417654B5C4A8E023035F0E948CDDB80E300FCD8F7D817163116747F913CBE1BDF1329E10C7703BC9CB809A27035C64CABF3ECFDFEE3BFA3C64B1D329563A13BA38A3692066B8229665E7B2E2880EE25D4F0424A2FB5CE7B566449FC80AB6B1E0739C468ED80B0FCED6A400BB47831BC199BA8F42B43> |-/seven <1C60D8A8C9B08A95C25148D4A67F69E4DB30B013EF55375ADA9A462F8A8D4CA55775F850AD6CCDDCBADDA4C9C9756D66D20EC3EA563D208BBB3D062CF4052BC74626DD200CF51B8B509FE33ECDE3DCC122CC64C91B892B361EC2038DBEB9AD1A5207B7F4A916CBF4C6256C64D1F4F02E5C855EF2018C49E41E85> |-/nine <1C60D8A8C9B08A95C25148D4A67F69EFB9B7837CC5D91E250D922D9022E8804E0D61F9D9AA5295B7126DA2B250BD560C737518F0F8344DD2C7AD5183AAC7BE5929B5CBCACDE9D692369D421BF8749C18A6EE4F1B95DE515422B878B067BCDE78E14F07A753E90D2EC12E924918805954C0008763CDCF6074CAD2009F49FEF379F205C070F299044CE0F4466045C7C9C0AC1021DCB831A2E419D0D8E5D8B39BFDDD16A024D39499942DAD2EF1D769DAAE> |-/colon <1C60D8A8C9B08A9562EC537D4CD7559A24C182180E12A17BABB8A7EBE29A2AFE0FD7F4FF1A8534340DB130661B35AF00175D1534C8EF18D286DD3591DC0667D108E4758D791353C511B99A93650B> |-/N <1C60D8A8C9B08A9407DB08AE8730401ED4DBC8F81F296E1186FFCBDEE4C82FDB2CA4762BC7766328D648B2D8704AE6C46AE74A4C6A1A952C2BD72E7E4DBFF4DB2CB4F48E051BEFF5D92CBDD9EE944487A90C2A82AB78567981E8B4CE5602487B5B653B9777642A4DF3F5D25AFF240523B8EFF9501C82EE894623468602E1FA089BEC6E393D4DCEC313489D7FD36D> |-/b <1C60D8A8C9B08A95EA1589819D01FDDF914193C2A2AB3C2FBD74FE2EF90999E5DB36BAF2D24FF8BCD476D53BC07D912DA83E0CF1FCA5CB2C4812B92EBDA7A2CFD3F336E8471550D918341A1370092E9441964F5A864F24751E24D9B21DC45A0C98781D0B47FC39136078BEF04B506A78710FA4A57602F2E19BC853136FC933BCABD1657D66F1> |-/e <1C60D8A8C9B08A95DA1661109289A443A051DEF0B16E6A580FC8F9AA8150F6444FA75B945C4FFE0DA1839EF69E7DFA291C948CD754A724751903586AA842E91C3117F540D25FFEC0C6678A2117A93D4931AB62B29AE97F49395EB216D5D302EF2ECFF11B4856C9223FD42370E9F6E42D129B5DFAF088D7B5EB289D9D99FDFE> |-/m <1C60D8A8C9B08A95387292BEEF0A420EBC6A9C2F75B6E3544CD36EE21FD089E4C0104EF4D8CEF691AE054EEDDEC77FF845BB55997B71276DFC1B0BE8683A15015CCE29123F44857A0FD8619065E95F5A67B5DAAA93A6F5B62A57B0D4A9B09364A681BC792E9587C50FC15BF534BF78EE88666E9682F3FB0A934CC50767DF95BC53E4DEBA412E52A2E501C7687396FF979DF4271492C18889BC6F208C734F96DAC0F233CEB01F11FC4143DAB3C69953057FB16B8683FC341CBFAFA3121666B89724B2C3A180592D> |-/o <1C60D8A8C9B08A95C25148D4A67F9F643441D766F4E9161FDE6368F9DA1DC48CE6787FB513365689A0411C26FB54F77B1E75024144B7FEE97F153218599C9D9B814535EB245F4B7257B478C07CAE2B475CC2F9D31E9325E421FD4B43AC69A6F1C3E1B7F471B090D27161BFB778EED200749E009AD2A55E0AD8E963F2A03AC02411> |-/r <1C60D8A8C9B08A95B2584918684CF6815391EA463D490FB248150210DF23741098AC6EF866FD86ED0B317BA35C0873AD0157DEC08503D15249CC24EF97CE25D70AB6CA3F1D28603DF053AA871546CD7163EDFD4833EF1A9F4167C933C7CDBD7B598A9BBBC707F548822EE598AA72EF779817611B251E> |-/v <1C60D8A8C9B08A950BE000A9A8EE5D06EB211447216F2D827E30BFA1B9FE6100DF9AA2A9BAF82EC0D613DBBFAA4523BEB2FAA41B97932A2607EF5E3DE6EBF014CCC54CE0664CAF977CF3F97739FF92D137F22587D8D948CC060C9DC31F4FE63C027A01400C9E8D10BF25DE0E3CE2D3A84E1906B58EE0C9F0C68F62E8A46F7D0C3A66BC2DB9> |-systemdict /gcheck known {setglobal} if end {end} ifendEAKJAF+CMR7 /Encoding getdup 44 /comma putdup 48 /zero putdup 49 /one putdup 52 /four putdup 53 /five putdup 55 /seven putdup 57 /nine putdup 58 /colon putdup 78 /N putdup 98 /b putdup 101 /e putdup 109 /m putdup 111 /o putdup 114 /r putdup 118 /v putpop%ADOEndSubsetFont
reset_gvm
/EAKJAF+CMR7*1 [44{/.notdef}rp /comma 3{/.notdef}rp /zero /one /two /.notdef /four /five /.notdef /seven /.notdef /nine /colon 19{/.notdef}rp /N 19{/.notdef}rp /b 2{/.notdef}rp /e 7{/.notdef}rp /m /.notdef /o 2{/.notdef}rp /r 3{/.notdef}rp /v 137{/.notdef}rp]EAKJAF+CMR7 nfEAKJAF+CMR7*1 [8.3686 0 0 -8.3686 0 0 ]msf267.12 428.829 mo(November29,200714:50)[7.08905 4.5567 4.79861 4.20016 7.55603 5.52075 4.20016 7.79617 4.79605 4.79605 6.59695 4.79605 4.79602 4.79605 14.1563 4.79605 4.79605 2.73734 4.79605 0 ]xshgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
true set_gvm
/EAKJAM+CMTT10*1 uf/EAKJAM+CMTT10 uf/TAJRMX+CMTT10 uf/EAKJAL+Symbol*1 uf/EAKJAL+Symbol uf/NMOBAA+Symbol uf/EAKJAH+NewCenturySchlbk-Roman*1 uf/EAKJAH+NewCenturySchlbk-Roman uf/NewCenturySchlbk-Roman uf/EAKJAJ+NewCenturySchlbk-Italic*1 uf/EAKJAJ+NewCenturySchlbk-Italic uf/NewCenturySchlbk-Italic uf/EAKJAG+Symbol*1 uf/EAKJAG+Symbol uf/BJEBAA+Symbol uf/EAKJAF+CMR7*1 uf/EAKJAF+CMR7 uf/FSFAAA+CMR7 uf/EAKJAE+CMSY8*1 uf/EAKJAE+CMSY8 uf/RDDBAA+CMSY8 uf/EAKJAD+CMR8*1 uf/EAKJAD+CMR8 uf/ZCXPMX+CMR8 uf/EAKJAC+CMMI8*1 uf/EAKJAC+CMMI8 uf/KGFRMX+CMMI8 uf/EAKJAB+CMEX10*1 uf/EAKJAB+CMEX10 uf/NTEBAA+CMEX10 uf/EAKJAA+CMSY10*1 uf/EAKJAA+CMSY10 uf/MUFAAA+CMSY10 uf/EAKIZV+CMSSBX10*1 uf/EAKIZV+CMSSBX10 uf/ITAQMX+CMSSBX10 uf/EAKIZU+CMBXTI10*1 uf/EAKIZU+CMBXTI10 uf/NZPPMX+CMBXTI10 uf/AdobeSerifMM uf/EAKIZZ+CMMI10*1 uf/EAKIZZ+CMMI10 uf/EJJQMX+CMMI10 uf/EAKIZY+CMR10*1 uf/EAKIZY+CMR10 uf/NCMBAA+CMR10 uf/EAKIZX+CMTI10*1 uf/EAKIZX+CMTI10 uf/JLAQMX+CMTI10 uf/EAKIZW+CMBX10*1 uf/EAKIZW+CMBX10 uf/YGTBAA+CMBX10 ufreset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
